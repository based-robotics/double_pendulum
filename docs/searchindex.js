Search.setIndex({"docnames": ["control", "control.mpc", "control.mpc.ilqr", "control.policy", "control.policy.lqr", "control.policy.pfl", "control.policy.saclqr", "control.trajopt", "control.trajopt.dircol", "control.trajopt.ilqr", "control.trajstab", "control.trajstab.riccati", "control.trajstab.tvlqr", "dynamics", "generated/double_pendulum", "generated/double_pendulum.analysis", "generated/double_pendulum.controller", "generated/double_pendulum.controller.SAC", "generated/double_pendulum.controller.energy", "generated/double_pendulum.controller.friction_compensation", "generated/double_pendulum.controller.gamepad", "generated/double_pendulum.controller.gravity_compensation", "generated/double_pendulum.controller.ilqr", "generated/double_pendulum.controller.inverse_dynamics", "generated/double_pendulum.controller.lqr", "generated/double_pendulum.controller.lqr.roa", "generated/double_pendulum.controller.mcpilco", "generated/double_pendulum.controller.partial_feedback_linearization", "generated/double_pendulum.controller.pid", "generated/double_pendulum.controller.trajectory_following", "generated/double_pendulum.controller.tvlqr", "generated/double_pendulum.experiments", "generated/double_pendulum.model", "generated/double_pendulum.simulation", "generated/double_pendulum.system_identification", "generated/double_pendulum.trajectory_optimization", "generated/double_pendulum.trajectory_optimization.direct_collocation", "generated/double_pendulum.trajectory_optimization.ilqr", "generated/double_pendulum.utils", "generated/double_pendulum.utils.filters", "hardware", "hardware.experiments", "hardware.motors", "hardware.motors.mjbots", "hardware.motors.tmotors", "hardware.testbench", "index", "installation", "leaderboard", "leaderboard.hardware", "leaderboard.robustness", "leaderboard.robustness.criteria", "leaderboard.simulation", "modules", "software_structure", "software_structure.controller"], "filenames": ["control.rst", "control.mpc.rst", "control.mpc.ilqr.rst", "control.policy.rst", "control.policy.lqr.rst", "control.policy.pfl.rst", "control.policy.saclqr.rst", "control.trajopt.rst", "control.trajopt.dircol.rst", "control.trajopt.ilqr.rst", "control.trajstab.rst", "control.trajstab.riccati.rst", "control.trajstab.tvlqr.rst", "dynamics.rst", "generated/double_pendulum.rst", "generated/double_pendulum.analysis.rst", "generated/double_pendulum.controller.rst", "generated/double_pendulum.controller.SAC.rst", "generated/double_pendulum.controller.energy.rst", "generated/double_pendulum.controller.friction_compensation.rst", "generated/double_pendulum.controller.gamepad.rst", "generated/double_pendulum.controller.gravity_compensation.rst", "generated/double_pendulum.controller.ilqr.rst", "generated/double_pendulum.controller.inverse_dynamics.rst", "generated/double_pendulum.controller.lqr.rst", "generated/double_pendulum.controller.lqr.roa.rst", "generated/double_pendulum.controller.mcpilco.rst", "generated/double_pendulum.controller.partial_feedback_linearization.rst", "generated/double_pendulum.controller.pid.rst", "generated/double_pendulum.controller.trajectory_following.rst", "generated/double_pendulum.controller.tvlqr.rst", "generated/double_pendulum.experiments.rst", "generated/double_pendulum.model.rst", "generated/double_pendulum.simulation.rst", "generated/double_pendulum.system_identification.rst", "generated/double_pendulum.trajectory_optimization.rst", "generated/double_pendulum.trajectory_optimization.direct_collocation.rst", "generated/double_pendulum.trajectory_optimization.ilqr.rst", "generated/double_pendulum.utils.rst", "generated/double_pendulum.utils.filters.rst", "hardware.rst", "hardware.experiments.rst", "hardware.motors.rst", "hardware.motors.mjbots.rst", "hardware.motors.tmotors.rst", "hardware.testbench.rst", "index.rst", "installation.rst", "leaderboard.rst", "leaderboard.hardware.rst", "leaderboard.robustness.rst", "leaderboard.robustness.criteria.rst", "leaderboard.simulation.rst", "modules.rst", "software_structure.rst", "software_structure.controller.rst"], "titles": ["Control Methods", "Model Predictive Control (MPC)", "Iterative Linear Quadratic Regulator (iLQR) MPC", "Policy-based Control", "Linear Quadratic Regulator (LQR)", "Partial Feedback Linearization (PFL)", "Soft Actor Critic (SAC)", "Trajectory Optimization", "Direct Collocation", "Iterative Linear Quadratic Regulator (iLQR)", "Trajectory Stabilization", "Riccati Gains Stabilization", "Time Varying Linear Quadrativ Regulator (TVLQR)", "The Double Pendulum System", "double_pendulum", "double_pendulum.analysis", "double_pendulum.controller", "double_pendulum.controller.SAC", "double_pendulum.controller.energy", "double_pendulum.controller.friction_compensation", "double_pendulum.controller.gamepad", "double_pendulum.controller.gravity_compensation", "double_pendulum.controller.ilqr", "double_pendulum.controller.inverse_dynamics", "double_pendulum.controller.lqr", "double_pendulum.controller.lqr.roa", "double_pendulum.controller.mcpilco", "double_pendulum.controller.partial_feedback_linearization", "double_pendulum.controller.pid", "double_pendulum.controller.trajectory_following", "double_pendulum.controller.tvlqr", "double_pendulum.experiments", "double_pendulum.model", "double_pendulum.simulation", "double_pendulum.system_identification", "double_pendulum.trajectory_optimization", "double_pendulum.trajectory_optimization.direct_collocation", "double_pendulum.trajectory_optimization.ilqr", "double_pendulum.utils", "double_pendulum.utils.filters", "Hardware", "Hardware Experiment Guide", "Motors", "MJBots", "T-Motor (AK-80-6)", "Hardware &amp; Testbench Description", "Welcome to Double Pendulum\u2019s documentation!", "Installation", "Leaderboards", "Hardware Leaderboard", "Robustness Leaderboard", "Controller Robustness", "Simulation Leaderboard", "&lt;no title&gt;", "Repository Structure", "Controller Class"], "terms": {"There": [0, 54], "ar": [0, 1, 2, 6, 7, 9, 10, 13, 16, 22, 24, 28, 29, 30, 32, 33, 37, 44, 45, 47, 48, 50, 51, 52, 54, 55], "mani": [0, 45, 51, 55], "doubl": [0, 4, 5, 6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 40, 41, 42, 44, 45, 47, 50, 52, 53, 54, 55], "pendulum": [0, 4, 5, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 40, 41, 42, 44, 45, 47, 50, 52, 53, 54, 55], "acrobot": [0, 5, 13, 18, 24, 27, 30, 32, 37, 46, 50, 52], "pendubot": [0, 5, 13, 24, 27, 30, 32, 37, 46, 50, 52], "system": [0, 3, 4, 5, 6, 7, 9, 10, 27, 31, 32, 36, 40, 41, 44, 45, 46, 51], "here": [0, 42, 44, 45, 50, 51, 52], "we": [0, 4, 12, 13, 38, 45, 47, 51], "categoris": 0, "them": [0, 16, 32, 50, 52], "trajectori": [0, 1, 2, 3, 8, 9, 11, 12, 13, 15, 16, 22, 23, 24, 28, 29, 30, 33, 36, 37, 55], "optim": [0, 1, 2, 4, 6, 8, 9, 12, 13, 22, 24, 27, 37, 47, 54], "stabil": [0, 1, 2, 4, 6, 12, 22, 24, 29, 30, 54, 55], "polici": [0, 4, 6, 12], "base": [0, 4, 5, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 44], "model": [0, 2, 11, 13, 14, 18, 19, 21, 22, 23, 24, 27, 30, 37, 45, 46, 50, 51, 52], "predict": [0, 2, 11, 54, 55], "even": [0, 2, 5, 10], "though": 0, "can": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 37, 39, 40, 41, 42, 45, 46, 47, 48, 50, 51, 52, 54, 55], "build": [0, 42, 46, 47], "upon": 0, "each": [0, 1, 6, 9, 16, 33, 38], "other": [0, 6, 18, 19, 21, 22, 23, 24, 27, 30, 32, 33, 37, 44, 50, 52, 54, 55], "e": [0, 3, 4, 5, 6, 9, 13, 24, 25, 33, 34, 45, 50, 52, 54, 55], "g": [0, 3, 4, 13, 32, 33, 44, 45, 50, 54, 55], "comput": [0, 1, 4, 7, 8, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 50, 52, 54, 55], "algorithm": [0, 6, 12, 25, 46], "iter": [0, 1, 7, 22, 24, 37, 54], "linear": [0, 1, 3, 7, 10, 13, 16, 27, 29, 32, 33, 46], "quadrat": [0, 1, 3, 7, 8, 24, 25, 30], "regul": [0, 1, 3, 7, 10, 45], "ilqr": [0, 1, 7, 11, 16, 35, 47, 54], "direct": [0, 4, 7, 36, 44, 45, 46, 54], "colloc": [0, 5, 7, 27, 36, 54], "time": [0, 2, 6, 9, 10, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 44, 51, 54, 55], "vari": [0, 2, 10, 33, 51, 54], "quadrativ": [0, 10], "tvlqr": [0, 10, 16, 24], "riccati": [0, 4, 10], "gain": [0, 5, 10, 18, 21, 23, 27, 28, 29], "lqr": [0, 3, 9, 12, 16, 27, 37, 54], "partial": [0, 3, 4, 27], "feedback": [0, 3, 24, 27, 29], "pfl": [0, 3], "soft": [0, 3], "actor": [0, 3], "critic": [0, 3], "sac": [0, 3, 16], "mpc": [0, 22], "The": [1, 2, 4, 5, 6, 7, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 39, 42, 44, 45, 47, 48, 50, 51, 52, 54, 55], "idea": 1, "i": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55], "solv": [1, 2, 5, 9, 24], "problem": [1, 2, 5, 6, 8, 9], "everi": [1, 2, 9, 44, 55], "timestep": [1, 15, 16, 21, 22, 23, 24, 28, 31, 33, 37], "again": 1, "At": [1, 44], "step": [1, 2, 9, 12, 13, 22, 33, 37, 39, 44, 45, 51], "warm": [1, 2, 22], "start": [1, 2, 9, 16, 22, 31, 33, 37, 44, 45, 50, 52], "solut": [1, 2, 4, 6, 8], "previou": [1, 2, 33], "updat": [1, 6, 31, 33, 48], "first": [1, 2, 16, 32, 44, 45, 54], "command": [1, 33, 44], "from": [1, 4, 5, 6, 8, 10, 13, 15, 16, 22, 23, 24, 26, 30, 31, 32, 33, 36, 39, 41, 42, 44, 45, 46, 50, 51, 52, 55], "execut": [1, 2, 10, 13, 15, 29, 37, 51, 54, 55], "either": [1, 3, 4, 15, 42, 44], "us": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 15, 16, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 37, 39, 41, 44, 45, 46, 47, 50, 51, 52, 54, 55], "refer": [1, 16, 20, 22, 23, 27, 28, 29, 30, 33, 37, 39, 44, 50, 51, 52, 54, 55], "cost": [1, 4, 7, 9, 15, 22, 24, 30, 37, 45, 46], "refernc": 1, "free": [1, 2, 13, 15, 45, 50, 52], "method": [1, 2, 4, 5, 7, 8, 9, 15, 16, 17, 20, 22, 26, 27, 33, 37, 38, 44, 45, 46, 48, 50, 52, 53, 54], "where": [1, 4, 6, 9, 15, 16, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 37, 39, 45, 50, 52, 54, 55], "full": [1, 2, 13, 33, 42, 45, 54], "onlin": [1, 2, 4, 12, 46, 51], "newcommand": [2, 3, 4, 5, 8, 9, 12, 13, 45], "vect": [2, 3, 4, 5, 8, 9, 12, 13, 45], "1": [2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 44, 45, 51, 54], "boldsymbol": [2, 3, 4, 5, 8, 9, 12, 13, 45], "dvect": [2, 3, 4, 5, 8, 9, 12, 13, 45], "dot": [2, 3, 4, 5, 8, 9, 12, 13, 32, 45], "ddvect": [2, 3, 4, 5, 8, 9, 12, 13, 45], "ddot": [2, 3, 4, 5, 8, 9, 12, 13, 32, 45], "mat": [2, 3, 4, 5, 8, 9, 12, 13, 32, 45], "shoot": 2, "ha": [2, 6, 15, 33, 44, 45, 54, 55], "properti": [2, 18, 27, 33, 55], "all": [2, 12, 16, 18, 19, 21, 22, 23, 24, 27, 30, 32, 33, 37, 44, 45, 50, 52, 54, 55], "dure": [2, 6, 10, 11, 15, 33, 44, 45, 47, 50, 51, 55], "process": [2, 6, 33, 39], "physic": [2, 25, 40, 45, 46], "feasibl": [2, 27], "so": [2, 15, 45, 54], "when": [2, 4, 10, 11, 27, 32, 33, 41, 44, 45, 46, 47, 50, 51, 52], "stop": [2, 22, 37, 41, 44, 45], "befor": [2, 16, 44, 55], "converg": [2, 6, 18], "inconsist": 2, "thi": [2, 3, 4, 5, 6, 8, 10, 12, 13, 16, 17, 18, 22, 24, 26, 28, 29, 30, 32, 33, 37, 38, 40, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55], "advantag": 2, "control": [2, 4, 5, 6, 8, 9, 11, 14, 15, 31, 33, 37, 38, 41, 45, 46, 48, 53, 54], "ansatz": 2, "For": [2, 4, 5, 8, 12, 13, 16, 24, 27, 33, 45, 47, 48, 50, 52, 54], "perform": [2, 7, 13, 33, 37, 44, 50, 51, 52], "input": [2, 5, 6, 8, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 45, 55], "u": [2, 3, 4, 8, 9, 12, 13, 15, 24, 28, 29, 30, 32, 33, 34, 38, 45, 55], "_0": [2, 8, 9], "next": [2, 22, 44], "nomin": [2, 10, 12], "desir": [2, 5, 16, 21, 33, 39, 44, 51, 55], "state": [2, 3, 4, 6, 8, 9, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 36, 37, 39, 51, 55], "x": [2, 3, 4, 5, 6, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 37, 38, 39, 55], "d": [2, 4, 5, 6, 12, 13, 25, 33, 38], "t": [2, 4, 6, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 38, 39, 42, 45, 51, 55], "goal": [2, 8, 13, 15, 16, 18, 22, 24, 25, 27, 28, 30, 37, 38, 55], "kept": [2, 45, 46], "fix": [2, 4, 9, 13, 28, 32, 44, 45, 50, 52], "do": [3, 33, 41, 44, 45, 47, 50, 52, 55], "aim": [3, 44], "follow": [3, 6, 9, 28, 41, 44, 47, 51, 54], "singular": 3, "instead": [3, 5, 8, 31, 44, 45, 51], "thei": [3, 16, 28, 29, 30, 33, 45, 50, 51, 52, 54, 55], "defin": [3, 6, 25, 50, 54], "funtion": 3, "pi": [3, 4, 6, 16, 22, 24, 27, 30, 37], "over": [3, 6, 9, 13, 15, 33, 51], "entir": [3, 9], "space": [3, 6, 9, 54], "return": [3, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 44, 55], "signal": [3, 15, 16, 26, 31, 33, 39, 44, 45], "accord": [3, 25], "analyt": 3, "reason": 3, "about": [3, 45], "": [3, 4, 6, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 39, 44, 55], "energi": [3, 5, 15, 16, 22, 23, 24, 27, 28, 30, 32, 37, 38, 45], "learn": [3, 6, 33], "reinforc": [3, 6], "well": [4, 6, 8, 44, 45, 51, 54], "establish": [4, 44], "widespread": 4, "which": [4, 5, 6, 7, 8, 12, 13, 15, 16, 23, 24, 26, 27, 29, 30, 31, 32, 33, 40, 41, 44, 45, 46, 50, 51, 52, 54, 55], "act": [4, 6], "A": [4, 11, 12, 16, 24, 32, 33, 38, 39, 44, 45], "b": [4, 12, 24, 32, 38, 39], "an": [4, 5, 6, 8, 9, 10, 13, 16, 22, 33, 39, 44, 45, 46, 50, 52, 54, 55], "object": [4, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 54, 55], "specifi": [4, 6, 32, 33], "instantan": 4, "function": [4, 5, 6, 7, 8, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 38, 44, 54, 55], "j": [4, 6, 32], "q": [4, 5, 6, 9, 13, 15, 24, 30, 32, 34, 45], "r": [4, 6, 8, 9, 11, 12, 15, 24, 30, 45], "symmetr": 4, "posit": [4, 6, 13, 15, 18, 21, 22, 23, 27, 28, 31, 32, 33, 37, 39, 44], "definit": 4, "matric": [4, 9, 11, 13, 24, 30, 32], "succeq": 4, "0": [4, 5, 6, 9, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 44, 47, 54, 55], "succ": 4, "allow": [4, 8, 54], "reduc": 4, "hamilton": 4, "jacobi": 4, "bellman": 4, "hjb": 4, "equat": [4, 5, 24, 32], "whose": [4, 31, 33], "go": [4, 24, 45], "infer": 4, "algebra": 4, "good": [4, 44], "numer": [4, 8], "solver": [4, 54], "exist": [4, 50, 52], "find": [4, 13], "matrix": [4, 13, 15, 24, 29, 30, 32, 33, 45], "obtain": [4, 6, 8], "k": [4, 12, 24, 29, 38], "In": [4, 6, 8, 9, 16, 33, 44, 45, 50, 51, 52, 54, 55], "order": [4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 39, 44, 51, 55], "top": [4, 21], "dynam": [4, 8, 9, 10, 11, 12, 13, 16, 23, 24, 32, 33, 44, 46, 53], "have": [4, 32, 41, 44, 45, 47, 50, 51, 52, 54, 55], "linearis": [4, 9, 12], "around": [4, 12], "left": [4, 5, 13, 44], "frac": [4, 44, 45], "f": [4, 9, 13, 32, 45, 50, 52], "right": [4, 5, 13], "_": [4, 6, 8, 9, 13], "actuat": [4, 6, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 45, 46, 55], "express": [4, 9], "rel": [4, 9, 44], "coordin": [4, 9, 13, 32, 33], "tild": [4, 6, 9], "mathcal": 4, "point": [4, 8, 9, 15, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 32, 33, 36, 37, 38, 44, 47], "star": 4, "describ": [4, 5, 24, 30, 32, 33, 44, 46, 50, 52], "set": [4, 9, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 37, 45, 54, 55], "initi": [4, 8, 16, 18, 21, 22, 23, 27, 28, 29, 30, 31, 33, 54, 55], "rightarrow": 4, "infti": [4, 6], "often": [4, 47, 51], "possibl": [4, 5, 44, 47], "howev": [4, 45, 51], "estim": [4, 6, 25, 45, 54], "consid": [4, 5, 6, 13], "sublevel": 4, "lyapunov": 4, "v": [4, 6, 39, 44, 45], "serv": [4, 6, 45, 46], "2": [4, 5, 6, 8, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 44, 45, 55], "case": [4, 5, 33, 41, 45, 51], "written": [4, 13, 54], "text": [4, 8, 9, 13, 33], "est": 4, "vert": 4, "leq": [4, 8], "rho": [4, 25], "scalar": [4, 32, 34], "probabilist": 4, "3": [4, 5, 6, 8, 15, 16, 21, 22, 23, 24, 25, 27, 30, 32, 33, 37, 38, 39, 45, 47], "4": [4, 6, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 47, 55], "further": [4, 12, 33, 48], "read": [4, 5, 12, 20, 31, 39, 54], "lectur": [4, 12, 24], "note": [4, 12, 33, 45, 47, 55], "h": [4, 6, 44, 54], "khalil": 4, "nonlinear": [4, 8, 9, 11], "3rd": 4, "ed": 4, "upper": [4, 5], "saddl": 4, "river": 4, "n": [4, 8, 9, 11, 15, 22, 23, 24, 25, 28, 29, 30, 31, 33, 36, 37, 39, 44], "prentic": 4, "hall": 4, "2002": 4, "tedrak": [4, 12], "underactu": [4, 5, 12, 46, 47], "robot": [4, 9, 11, 12, 24, 27, 30, 32, 33, 37, 46], "2022": [4, 12, 24], "url": [4, 5, 6, 8, 9, 12], "http": [4, 5, 6, 8, 9, 12, 18, 24, 25, 27, 37, 39, 44, 46, 47], "mit": [4, 12, 44], "edu": [4, 12, 25], "najafi": 4, "babu\u0161ka": 4, "lope": 4, "fast": 4, "sampl": [4, 33, 36], "domain": 4, "vol": [4, 5], "86": 4, "pp": [4, 5, 9, 11], "823": 4, "834": 4, "oct": 4, "2016": 4, "link": [4, 5, 9, 13, 15, 18, 19, 21, 22, 23, 24, 27, 30, 32, 37, 45, 46, 48], "springer": 4, "com": [4, 5, 6, 15, 18, 19, 21, 22, 23, 24, 25, 27, 30, 32, 37, 38, 44, 46, 47], "articl": [4, 5, 27], "10": [4, 5, 8, 9, 15, 18, 22, 25, 31, 32, 37, 39], "1007": 4, "s11071": 4, "016": 4, "2926": 4, "7": [4, 5], "p": [4, 6, 25, 45], "parrilo": 4, "structur": [4, 6, 46, 53], "semidefinit": 4, "program": [4, 8, 11], "semialgebra": 4, "ge": 4, "ometri": 4, "robust": [4, 45, 48], "ph": 4, "dissert": 4, "california": 4, "institut": 4, "technologi": 4, "pasadena": 4, "2000": 4, "www": [4, 5, 9, 27, 37, 44], "proquest": 4, "openview": 4, "ff5fe1a4311720ae2dad28ddc1d22cf8": 4, "cbl": 4, "18750": 4, "diss": 4, "y": [4, 6, 33, 38, 39], "pq": 4, "origsit": 4, "gscholar": 4, "parentsessionid": 4, "mjxeze6vrvd": 4, "2besjkr1uey6zldtg74txylcbk173fana": 4, "3d": 4, "classic": [5, 45], "theori": 5, "With": [5, 47], "provok": 5, "respons": [5, 6, 33, 39, 51], "both": [5, 6, 16, 44, 45, 55], "joint": [5, 13, 32, 45], "oper": [5, 20, 40, 41, 44, 45, 47, 51], "intuit": [5, 25], "its": [5, 6, 46], "manipul": [5, 11, 13], "u_1": [5, 13], "equiv": 5, "begin": [5, 6, 13, 44], "arrai": [5, 13, 15, 16, 24, 25, 30, 32, 33, 37, 38, 39, 55], "cc": [5, 13], "m_": [5, 13], "11": [5, 38], "12": [5, 6, 44], "21": [5, 44], "22": 5, "end": [5, 6, 13, 15, 31, 32, 33, 44, 45, 52], "c": [5, 13, 25, 32, 33, 37, 38, 45, 47, 54], "_1": [5, 9, 13, 32], "_2": [5, 13, 32], "c_": [5, 13], "g_1": 5, "g_2": 5, "f_1": 5, "f_2": 5, "u_2": [5, 13], "unactu": 5, "part": [5, 6, 41], "vector": [5, 13, 29, 32, 39], "acceler": [5, 6, 18, 19, 21, 22, 23, 24, 27, 30, 32, 36, 37, 44], "plug": 5, "lower": 5, "now": [5, 50, 52], "design": [5, 9, 32, 41, 44, 45, 54], "pd": 5, "term": [5, 16], "k_p": 5, "q_2": [5, 13], "k_d": 5, "k_e": [5, 44], "label": [5, 9, 13, 15, 44, 54], "eq": [5, 9, 12, 13], "pfl_acro_col": 5, "configur": [5, 41, 44, 45], "second": [5, 16, 32, 45, 54], "total": [5, 13, 32, 45, 55], "paramet": [5, 6, 8, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 41, 51, 55], "abov": [5, 18, 19, 21, 22, 23, 24, 27, 30, 32, 37, 52], "call": [5, 16, 26, 33, 37, 45, 47, 50, 52, 54, 55], "similarli": 5, "also": [5, 6, 9, 13, 33, 45, 50, 51, 52, 54], "elimin": 5, "than": [5, 16, 33, 45], "non": [5, 9, 27, 46], "done": [5, 33, 44, 47], "same": [5, 44, 54], "wai": [5, 54], "law": 5, "q_1": [5, 13], "_pfl_pendu_col": 5, "m": [5, 13, 16, 18, 19, 21, 22, 23, 24, 25, 27, 30, 32, 33, 37, 44, 45], "w": [5, 8, 44], "spong": [5, 27], "swing": [5, 6, 41, 45], "up": [5, 6, 10, 15, 33, 45], "ifac": 5, "proceed": 5, "volum": [5, 25], "27": [5, 45], "14": [5, 32], "833": 5, "838": 5, "sep": 5, "1994": 5, "doi": [5, 8, 9, 18, 37], "1016": 5, "s1474": 5, "6670": 5, "17": 5, "47404": 5, "sciencedirect": [5, 27], "scienc": [5, 27], "pii": [5, 27], "s1474667017474040": [5, 27], "via": [5, 27, 33, 44, 55], "3dihub": [5, 27], "ieee": [5, 11, 27], "magazin": 5, "15": [5, 13, 24, 44, 45], "49": 5, "55": 5, "feb": 5, "1995": 5, "1109": 5, "37": 5, "341864": [5, 27], "ieeexplor": [5, 27], "org": [5, 8, 9, 25, 27, 37], "document": [5, 27, 42, 44, 45, 50, 53], "class": [5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 54], "mechan": [5, 15, 25, 41, 45, 46], "29": 5, "2828": 5, "2832": 5, "jun": 5, "1996": 5, "58105": 5, "s1474667017581057": [5, 27], "strategi": 6, "particularli": 6, "suit": 6, "scenario": 6, "continu": [6, 24, 44], "action": [6, 33], "environ": [6, 33, 47], "agent": [6, 33], "infinit": [6, 39], "rang": [6, 15, 41], "choos": [6, 39, 44], "repres": [6, 33, 55], "real": [6, 10, 13, 16, 26, 33, 40, 41, 46, 51, 54], "valu": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 44, 51, 55], "prove": 6, "effect": [6, 51], "context": [6, 36], "task": [6, 50, 52], "adjust": 6, "ani": [6, 44, 45], "within": [6, 44], "torqu": [6, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 39, 41, 44, 51, 55], "limit": [6, 8, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 37, 41, 45], "addition": [6, 50, 52], "measur": [6, 13, 16, 33, 39, 41, 44, 45, 51, 55], "veloc": [6, 15, 16, 18, 22, 27, 31, 32, 33, 37, 39, 44, 45, 51], "motor": [6, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 45, 46, 51, 54, 55], "setup": [6, 42, 46, 47], "make": [6, 13, 32, 33, 41, 44, 45, 47], "suitabl": [6, 33], "implement": [6, 25, 33, 37, 44, 46, 50, 52, 55], "maxim": 6, "expect": 6, "cumul": 6, "reward": [6, 33], "achiev": [6, 15, 51], "through": 6, "select": [6, 13, 44], "current": [6, 20, 33, 41, 44, 45], "observ": [6, 33], "It": [6, 27, 33, 41, 44, 45, 46], "typic": [6, 45], "shallow": 6, "neural": 6, "network": 6, "approxim": [6, 10, 13, 39], "map": 6, "between": [6, 8, 16, 33, 39, 44, 45, 54], "output": [6, 16, 17, 26, 28, 33, 44, 45, 51, 55], "probabl": 6, "distribut": 6, "incorpor": 6, "stochast": 6, "encourag": 6, "explor": 6, "help": [6, 33, 44], "improv": [6, 44], "hand": 6, "evalu": [6, 48], "pair": [6, 44], "certain": 6, "take": [6, 38, 45, 50], "addit": [6, 16, 29, 44, 45, 55], "central": [6, 55], "featur": [6, 44, 45, 48], "entropi": 6, "regular": [6, 12, 22, 37, 44], "train": 6, "trade": 6, "off": [6, 44], "random": [6, 33, 39], "If": [6, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 32, 33, 37, 44, 45, 47, 50, 52, 54, 55], "variabl": [6, 8, 32, 33], "densiti": 6, "displaystyl": 6, "mathop": 6, "mathbb": 6, "sim": 6, "log": [6, 16, 24, 30, 31], "By": [6, 13, 33, 45, 55], "prevent": [6, 44, 45], "prematur": 6, "suboptim": 6, "alpha": [6, 15, 33, 39], "balanc": [6, 50, 52], "import": [6, 44, 45, 50, 51, 52, 55], "exploit": 6, "arg": 6, "max_": 6, "tau": [6, 32, 33, 44, 51], "bigg": 6, "sum_": [6, 9], "gamma": 6, "big": 6, "s_t": 6, "a_t": 6, "s_": [6, 13], "cdot": [6, 45], "mid": 6, "pi_": 6, "theta": 6, "two": [6, 13, 16, 45, 46, 47, 54, 55], "q_": 6, "phi_1": 6, "phi_2": 6, "concurr": 6, "loss": [6, 8], "l": [6, 8, 9, 11], "phi_i": 6, "tempor": 6, "differ": [6, 15, 45, 48, 50, 52, 54], "target": 6, "given": [6, 9, 54], "align": 6, "nonumb": 6, "min": [6, 45], "phi_": 6, "targ": 6, "should": [6, 15, 16, 17, 22, 26, 28, 29, 30, 31, 33, 39, 44, 45, 50, 52, 54, 55], "futur": [6, 54], "while": [6, 8, 41, 50, 51, 54], "word": [6, 33], "emploi": 6, "gradient": 6, "techniqu": 6, "undergo": 6, "subsequ": 6, "lead": [6, 44], "adapt": [6, 45], "themselv": 6, "conclus": 6, "combin": [6, 16, 44, 45], "address": 6, "challeng": 6, "pose": 6, "haarnoja": 6, "tuoma": 6, "et": 6, "al": 6, "maximum": [6, 15, 22, 37, 45], "deep": 6, "intern": [6, 9, 11, 16, 33, 55], "confer": [6, 9, 11], "machin": 6, "pmlr": 6, "2018": 6, "applic": [6, 11, 44, 45, 50, 52], "arxiv": 6, "preprint": 6, "1812": 6, "05905": 6, "konda": 6, "vijai": 6, "john": 6, "tsitsikli": 6, "advanc": 6, "inform": [6, 24, 33, 40, 45, 47, 48], "1999": 6, "achiam": 6, "spin": 6, "spinningup": 6, "openai": 6, "en": [6, 25, 39, 44], "latest": [6, 39], "html": [6, 25, 39], "respect": [7, 9], "fucntion": 7, "encod": [7, 44, 46], "motion": [7, 32, 33, 41, 48], "suppos": [7, 16, 17, 26, 33, 55], "swingup": [7, 15, 18, 50, 52], "belong": 8, "transform": 8, "mathemat": [8, 10, 13], "transcrib": 8, "knot": 8, "_i": [8, 9, 13], "minim": 8, "decis": 8, "formul": 8, "x_": 8, "init": [8, 16, 21, 22, 24, 30, 37, 55], "obei": 8, "u_": 8, "max": [8, 39, 44, 45, 50, 52], "min_": [8, 9], "ldot": [8, 9, 13], "subject": [8, 9], "hspace": [8, 9], "1cm": [8, 9], "f_": [8, 9], "discret": [8, 9, 13, 15, 24, 32], "quad": [8, 13], "foral": 8, "x_0": 8, "x_n": 8, "sequenti": 8, "sqp": 8, "practic": [8, 46], "interpol": [8, 22, 28, 29, 30], "polynomi": [8, 22, 29, 36, 38, 39], "piecewis": 8, "fewer": 8, "still": 8, "consist": [8, 45, 54], "hargrav": 8, "charl": 8, "stephen": 8, "pari": 8, "journal": 8, "guidanc": [8, 45], "1987": 8, "338": 8, "342": 8, "arc": [8, 33], "aiaa": 8, "ab": [8, 18, 39], "2514": 8, "20223": 8, "extens": [9, 12], "henc": [9, 44, 45, 51], "onli": [9, 10, 15, 16, 23, 33, 39, 44, 45, 47, 51, 54, 55], "long": 9, "error": [9, 10, 18, 21, 22, 23, 27, 28, 37, 38, 44, 47], "small": [9, 10, 44, 45], "contrast": 9, "deal": 9, "being": [9, 31, 44, 55], "abl": [9, 44, 45, 51, 55], "finit": [9, 24], "horizon": [9, 22, 24, 37], "As": [9, 48], "sequenc": [9, 33], "_n": 9, "ilqr_opt": 9, "beforehand": 9, "_f": 9, "penal": 9, "final": [9, 15, 22, 24, 30, 33, 37], "intermedi": 9, "weiwei": 9, "todorov": 9, "biolog": 9, "movement": [9, 44], "informat": 9, "autom": [9, 11], "222": 9, "229": 9, "2004": 9, "scitepress": [9, 37], "aspx": [9, 37], "5220": [9, 37], "0001143902220229": [9, 37], "transfer": [10, 51], "precomput": 10, "simul": [10, 14, 15, 16, 25, 26, 38, 46, 48, 50, 51, 54, 55], "realiti": [10, 51], "anoth": [10, 12, 45], "need": [10, 15, 16, 33, 44, 45, 47, 50, 52], "alwai": [10, 16, 41, 51, 55], "becaus": [10, 44, 45], "sum": [10, 15, 16, 24], "eventu": 10, "deviat": [10, 15, 33], "differenti": [11, 28, 44], "ddp": 11, "alter": 11, "discuss": [11, 46], "kleff": 11, "meduri": 11, "budhiraja": 11, "mansard": 11, "righetti": 11, "high": [11, 44, 45, 46, 51], "frequenc": [11, 36, 39, 44, 45], "2021": 11, "icra": 11, "7330": 11, "7336": 11, "formal": 12, "requir": [12, 44, 45, 46], "ref": 12, "dyn": [12, 13], "result": [12, 15, 32, 33, 36, 39, 45, 46, 51], "page": [13, 25, 40, 44, 46], "give": [13, 31, 40, 45], "overview": 13, "descript": [13, 32, 40, 48, 50, 52], "includ": [13, 33, 45, 47], "8": [13, 31, 39, 47], "name": [13, 15, 50, 52, 54], "mass": [13, 15, 18, 19, 21, 22, 23, 24, 27, 30, 32, 33, 37, 38, 45, 54], "m_1": 13, "m_2": 13, "length": [13, 15, 18, 19, 21, 22, 23, 24, 27, 30, 32, 37, 38, 54], "l_1": 13, "l_2": 13, "center": [13, 18, 19, 21, 22, 23, 24, 27, 30, 32, 33, 37], "r_1": 13, "r_2": 13, "inertia": [13, 15, 18, 19, 21, 22, 23, 24, 27, 30, 32, 37, 38, 44, 54], "i_1": 13, "i_2": 13, "6": [13, 15, 18, 21, 22, 23, 24, 26, 30, 31, 32, 37, 38, 42, 45, 47], "i_r": 13, "gear": [13, 18, 32, 44], "ratio": [13, 18, 32, 44], "g_r": 13, "coulomb": [13, 16, 18, 19, 21, 22, 23, 24, 27, 30, 32, 37], "friction": [13, 16, 18, 19, 21, 22, 23, 24, 26, 27, 30, 32, 37, 44, 46, 54, 55], "f1": 13, "f2": 13, "viscou": 13, "b_1": 13, "b_2": 13, "graviti": [13, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 30, 32, 37, 55], "gener": [13, 24, 30, 33, 45, 50, 51, 52], "angl": [13, 31, 33], "hang": 13, "contain": [13, 15, 16, 23, 24, 27, 32, 33, 45, 50, 52], "deriv": [13, 21, 23, 32, 44], "appli": [13, 21, 33, 44, 50, 51], "dyn2": 13, "bottom": 13, "half": 13, "known": 13, "entiti": 13, "s_1": 13, "sin": 13, "c_1": 13, "co": 13, "2m_2": 13, "2l_1m_2r_2c_2": 13, "2i_r": 13, "l_1m_2r_2c_2": 13, "g_ri_r": 13, "corioli": [13, 32], "l_": 13, "r_": 13, "s_2": 13, "coriolis_matrix": [13, 32], "gravity_matrix": 13, "sign": 13, "arctan": 13, "100": [13, 22, 30, 37, 38, 39, 44, 50, 52], "friction_matrix": 13, "pendu": 13, "acro": 13, "fulli": [13, 23, 45, 55], "kinet": [13, 32, 45], "e_": [13, 45], "kin": [13, 45], "potenti": [13, 32, 45, 54], "pot": 13, "natur": 13, "provid": [13, 16, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 32, 33, 37, 45, 46], "easili": 13, "independ": [13, 33, 51], "identifi": [13, 54], "parmat": 13, "excit": 13, "hardwar": [13, 31, 46, 47, 48, 51, 53, 54, 55], "data": [13, 15, 24, 30, 31, 33, 36, 38, 39, 44, 50, 51, 52], "tupl": [13, 33], "form": [13, 15, 22, 25, 37, 44], "record": [13, 33, 44], "best": [13, 46], "one": [13, 15, 16, 33, 44, 45, 46, 51, 55], "fact": 13, "least": [13, 39, 51], "squar": [13, 39], "analysi": 14, "experi": [14, 15, 16, 26, 40, 45, 46, 51, 55], "system_identif": 14, "trajectory_optim": 14, "util": [14, 31, 54], "x0": [15, 16, 25, 32, 33, 38, 39], "dt": [15, 16, 17, 21, 22, 23, 24, 25, 28, 31, 32, 33, 37, 38, 39], "t_final": [15, 25, 31, 38], "epsilon": 15, "check_only_final_st": 15, "fals": [15, 16, 27, 29, 33, 34, 38], "friction_compens": [15, 16], "true": [15, 22, 25, 28, 31, 33, 34, 38], "integr": [15, 21, 22, 23, 24, 25, 28, 33, 37, 38], "runge_kutta": [15, 22, 25, 33, 37], "save_dir": [15, 16, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 34, 38, 55], "compute_model_robust": 15, "compute_noise_robust": 15, "compute_unoise_robust": 15, "compute_uresponsiveness_robust": 15, "compute_delay_robust": 15, "mpar_var": 15, "ir": [15, 32, 44, 54], "m1r1": 15, "i1": [15, 18, 19, 21, 22, 23, 24, 27, 30, 32, 37, 54], "b1": [15, 16, 18, 19, 21, 22, 23, 24, 27, 30, 32, 37, 54], "cf1": [15, 16, 18, 19, 21, 22, 23, 24, 27, 30, 32, 37, 54], "m2r2": 15, "m2": [15, 18, 19, 21, 22, 23, 24, 27, 30, 32, 37, 54], "i2": [15, 18, 19, 21, 22, 23, 24, 27, 30, 32, 37, 54], "b2": [15, 16, 18, 19, 21, 22, 23, 24, 27, 30, 32, 37, 54], "cf2": [15, 16, 18, 19, 21, 22, 23, 24, 27, 30, 32, 37, 54], "modelpar_var_list": 15, "repetit": [15, 38], "meas_noise_mod": 15, "vel": [15, 33, 44], "meas_noise_sigma_list": 15, "5": [15, 16, 18, 19, 20, 21, 23, 24, 25, 27, 30, 32, 33, 38, 44], "meas_noise_cut": [15, 16, 33], "meas_noise_vfilt": [15, 33], "none": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 37, 38, 39, 55], "meas_noise_vfilter_arg": [15, 33], "u_noise_sigma_list": 15, "u_respons": [15, 33], "delay_mod": [15, 33], "delai": [15, 33, 39, 50, 51], "01": [15, 21, 22, 23, 24, 25, 28, 31, 33, 37, 39], "02": [15, 33], "05": [15, 25], "check_delay_robust": 15, "posvel": [15, 33], "check_goal_success": 15, "x_traj": [15, 24], "check_meas_noise_robust": 15, "lowpass_alpha": 15, "check_modelpar_robust": 15, "var_list": 15, "check_perturbation_robust": 15, "time_stamp": 15, "tau_pert": 15, "check_unoise_robust": 15, "check_uresponsiveness_robust": 15, "compute_cost": 15, "u_traj": [15, 24], "mode": [15, 33, 44], "compute_ref_cost": 15, "compute_success_measur": 15, "set_cost_par": 15, "qf": [15, 24, 30], "set_init_traj": 15, "trajectory_csv": 15, "set_model_paramet": [15, 22, 37], "608": [15, 22, 32, 37], "63": [15, 22, 32, 37], "275": [15, 22, 32, 37], "166": [15, 22, 37], "damp": [15, 16, 18, 19, 21, 22, 23, 24, 27, 30, 32, 37, 38], "081": [15, 22, 37], "cfric": [15, 32], "093": [15, 22, 32, 37], "186": [15, 22, 37], "9": [15, 18, 19, 21, 22, 23, 24, 27, 30, 31, 32, 37, 39], "81": [15, 18, 19, 21, 22, 23, 24, 27, 30, 32, 37], "05472": [15, 22, 37], "02522": [15, 22, 37], "motor_inertia": [15, 18, 32], "torque_limit": [15, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 32, 33, 37, 38], "model_par": [15, 18, 19, 21, 22, 23, 24, 27, 30, 32, 37, 38], "simulate_and_get_cost": 15, "plot_benchmark_result": 15, "results_dir": 15, "filenam": 15, "pkl": 15, "costlim": 15, "1000000": [15, 44], "show": [15, 25, 34, 38, 39, 44, 45], "save": [15, 16, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 37, 50, 52, 54, 55], "file_format": 15, "pdf": 15, "scale": [15, 33, 38, 51], "plot_model_robustness_multi": 15, "get_delay_scor": 15, "res_dict": 15, "get_measurement_noise_scor": 15, "get_model_scor": 15, "get_scor": 15, "get_unoise_scor": 15, "get_uresponsiveness_scor": 15, "get_energi": 15, "get": [15, 16, 22, 23, 26, 28, 29, 30, 32, 33, 38, 41, 45, 47, 55], "like": [15, 16, 32, 33, 45, 55], "shape": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 45, 55], "unit": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 54, 55], "rad": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 55], "angle1": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 55], "angle2": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 55], "velocity1": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 55], "velocity2": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 55], "u1": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 55], "u2": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 55], "nm": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 39, 44, 55], "float": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 55], "get_integrated_torqu": 15, "get_max_tau": 15, "get_swingup_tim": 15, "ep": [15, 25], "has_to_stai": 15, "mpar": 15, "height": 15, "data_dict": [15, 31], "list": [15, 16, 22, 24, 27, 31, 32, 33, 37, 38, 46, 50, 52, 55], "len": 15, "threshold": 15, "successful": 15, "default": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 55], "1e": [15, 22, 37, 38], "bool": [15, 16, 22, 27, 28, 29, 33], "whether": [15, 16, 22, 27, 28, 29, 33], "stai": [15, 41, 54], "upright": 15, "until": [15, 44], "get_tau_smooth": 15, "standard": [15, 33, 54], "chang": [15, 16, 17, 26, 32, 33, 39, 44, 45, 51, 54, 55], "smooth": 15, "std": 15, "get_torque_cost": 15, "run": [15, 33, 44, 45, 50, 52], "normal": [15, 45], "numpi": [15, 32, 33, 38], "weight": [15, 22, 37, 44, 45], "2x2": 15, "get_velocity_cost": 15, "leaderboard_scor": 15, "data_path": 15, "save_to": [15, 25, 34, 38], "integ_tau": 15, "max_tau": 15, "swingup_tim": 15, "tau_cost": 15, "tau_smooth": 15, "link_bas": 15, "score": [15, 50, 52], "data_dictionari": 15, "load": [15, 22, 32, 45, 54], "compar": [15, 48, 50, 52], "dict": [15, 16, 32, 33], "path": [15, 16, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 36, 45, 55], "controller1_nam": 15, "csv_path": [15, 22, 23, 28, 29, 30, 38, 50, 52], "data_path1": 15, "usernam": [15, 50, 52], "username1": 15, "controller2_nam": 15, "data_path2": 15, "username2": 15, "string": [15, 16, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 36, 37, 55], "csv": [15, 22, 23, 28, 29, 30, 31, 37, 50, 52, 54], "file": [15, 22, 23, 24, 28, 29, 30, 31, 32, 36, 37, 44, 45, 50, 52, 54], "dictionari": [15, 16, 32, 33, 50, 52], "criteria": [15, 50], "weight1": 15, "weight2": 15, "weight3": 15, "weight4": 15, "weight5": 15, "weight6": 15, "velocity_cost": 15, "weight7": 15, "constant": [15, 44, 51], "norm1": 15, "norm2": 15, "norm3": 15, "norm4": 15, "norm5": 15, "norm6": 15, "norm7": 15, "after": [15, 33, 44, 54, 55], "divid": 15, "norm": 15, "simulait": 15, "host": 15, "Not": [15, 33, 51, 54], "local": [15, 39, 47, 50, 52], "get_par_list": 15, "min_rel": 15, "max_rel": 15, "gamepad": 16, "gravity_compens": 16, "inverse_dynam": [16, 32], "mcpilco": 16, "partial_feedback_linear": 16, "pid": [16, 21, 23, 44], "trajectory_follow": 16, "abstractcontrol": [16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 55], "abc": 16, "abstract": [16, 55], "inherit": [16, 55], "filter_measur": [16, 33], "last_u": 16, "array_lik": [16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 55], "dtype": [16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 55], "numpy_arrai": [16, 22, 23, 24, 28, 29, 30, 33, 36, 37], "filter": [16, 26, 33, 38, 45, 51], "get_control_output": [16, 26, 55], "loop": [16, 26, 31, 41, 44, 55], "doe": [16, 23, 24, 26, 32, 33, 44, 50, 52], "get_control_output_": [16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 55], "compens": [16, 19, 21, 26], "activ": [16, 26, 27, 44, 46, 55], "option": [16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 45, 55], "overwritten": [16, 17, 26, 55], "actual": [16, 17, 26, 32, 33, 44, 55], "api": [16, 17, 26, 55], "unus": [16, 17, 26, 55], "get_forecast": [16, 22, 55], "forecast": [16, 22, 55], "plan": [16, 22, 55], "placehold": 16, "get_friction_torqu": 16, "get_gravity_torqu": 16, "get_init_trajectori": [16, 22, 23, 28, 29, 30, 55], "specif": [16, 32, 45, 54, 55], "init_": [16, 18, 21, 22, 23, 24, 27, 28, 30, 55], "init_filt": [16, 33], "reset": [16, 33, 55], "reset_": [16, 55], "insid": [16, 44, 55], "directori": [16, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 45, 54, 55], "save_": [16, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 55], "set_filter_arg": [16, 55], "filt": [16, 34], "141592653589793": [16, 22, 24, 27, 30], "001": [16, 39], "plant": [16, 24, 33, 36, 54, 55], "velocity_cut": 16, "filter_kwarg": 16, "argument": [16, 33], "determin": [16, 22, 25, 33, 37, 51], "nois": [16, 33, 50, 51], "No": [16, 33], "lowpass": [16, 33, 39], "kalman": [16, 33, 39], "unscented_kalman": [16, 33], "unscent": [16, 33], "np": [16, 18, 20, 22, 24, 27, 30, 32, 33, 37, 39], "symbolicdoublependulum": [16, 24, 32, 33], "doublependulumpl": [16, 24, 32, 33], "kinemat": [16, 24, 32, 33], "necessari": [16, 24, 30, 45, 55], "smaller": [16, 33], "assum": [16, 33], "cut": [16, 33, 44, 45], "set_friction_compens": [16, 55], "coulomb_fr": [16, 18, 19, 21, 22, 23, 24, 27, 30, 32, 37, 38], "coeffici": [16, 18, 19, 21, 22, 23, 24, 27, 30, 32, 37], "kg": [16, 18, 19, 21, 22, 23, 24, 27, 30, 32, 37, 44], "set_goal": [16, 18, 21, 22, 24, 27, 28, 30, 37, 55], "set_gravity_compens": [16, 55], "set_paramet": [16, 18, 21, 22, 23, 24, 28, 37, 55], "set_start": [16, 22, 37], "combinedcontrol": 16, "controller1": 16, "controller2": 16, "condition1": 16, "condition2": 16, "compute_both": 16, "verbos": [16, 27], "switch": [16, 27, 45], "condit": [16, 18, 51], "must": [16, 44], "functin": 16, "flag": [16, 33], "Will": [16, 33], "check": [16, 18, 48, 50, 52], "potetntiolli": 16, "controller1_par": 16, "controller2_par": 16, "parametr": 16, "pars": [16, 54, 55], "simultaneouscontrol": 16, "forecast_con": 16, "multipl": [16, 33, 44], "add": [16, 33, 45, 50, 52], "containint": 16, "int": [16, 18, 22, 28, 29, 30, 31, 32, 37], "integ": [16, 54], "indic": [16, 25, 44, 54], "self": [16, 33, 55], "fc_ind": 16, "intit": 16, "controller_par": 16, "saccontrol": 17, "model_path": 17, "dynamics_func": [17, 33, 34], "energycontrol": 18, "gear_ratio": [18, 32], "inf": [18, 20, 27, 32], "paper": [18, 27, 37], "onlinelibrari": 18, "wilei": 18, "1002": 18, "rnc": 18, "1184": 18, "m1": [18, 19, 21, 22, 23, 24, 27, 30, 32, 37, 54], "l1": [18, 19, 21, 22, 23, 24, 27, 30, 32, 37, 54], "l2": [18, 19, 21, 22, 23, 24, 27, 30, 32, 37, 54], "r1": [18, 19, 21, 22, 23, 24, 27, 30, 32, 37, 54], "r2": [18, 19, 21, 22, 23, 24, 27, 30, 32, 37, 54], "downward": [18, 19, 21, 22, 23, 24, 27, 30, 32, 37], "s\u00b2": [18, 19, 21, 22, 23, 24, 27, 30, 32, 37], "m\u00b2": [18, 19, 21, 22, 23, 24, 27, 30, 32, 37], "entri": [18, 19, 21, 22, 23, 24, 27, 30, 32, 33, 37], "l\u00b2": [18, 19, 21, 22, 23, 24, 27, 30, 32, 37], "ir1": [18, 32], "ir2": [18, 32], "tl1": [18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 37, 54], "tl2": [18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 37, 54], "model_paramet": [18, 19, 21, 22, 23, 24, 27, 30, 37, 54], "overwrit": [18, 19, 21, 22, 23, 24, 27, 30, 32, 37], "check_paramet": 18, "fulfil": 18, "present": [18, 46, 51], "kp": [18, 21, 23, 28, 44], "kd": [18, 21, 23, 28, 44], "kv": 18, "kd_func": 18, "q2": [18, 32, 39], "a1": 18, "a2": 18, "a3": 18, "er": 18, "frictioncompensationcontrol": 19, "gamepad_nam": 20, "logitech": 20, "rumblepad": 20, "usb": [20, 44, 45], "type": [20, 31, 33, 44, 54], "support": [20, 33], "gamepadcontrol": 20, "pidgravitycompensationcontrol": 21, "gravit": 21, "forc": [21, 41, 45], "ki": [21, 23, 28], "proport": [21, 23, 44], "gravitycompensationcontrol": 21, "ilqrmpccppcontrol": 22, "python": [22, 37, 47, 50, 52, 54], "bind": [22, 37, 47, 54], "cpp": [22, 47], "630": [22, 32, 37], "compute_init_traj": 22, "1000": [22, 25, 31, 33, 37, 44], "005": [22, 27, 32, 37], "max_it": [22, 37], "regu_init": [22, 37], "max_regu": [22, 37], "10000": [22, 34, 37, 38], "min_regu": [22, 37], "break_cost_redu": [22, 37], "06": [22, 37, 39], "scu": [22, 37], "scp": [22, 37], "scv": [22, 37], "scen": [22, 37], "fcp": [22, 37], "fcv": [22, 37], "fcen": [22, 37], "number": [22, 28, 29, 30, 33, 37, 38, 44, 54], "per": [22, 33, 37], "minimum": [22, 37], "reduct": [22, 37], "stage": [22, 37], "euler": [22, 33, 37], "rung": [22, 33, 37], "kutta": [22, 33, 37], "load_init_traj": 22, "num_break": [22, 28, 29, 30, 38], "40": [22, 28, 29, 30, 38, 45], "poly_degre": [22, 38], "store": [22, 24, 28, 29, 30, 31, 32, 33, 44, 45, 54, 55], "standarf": [22, 28, 29, 30], "format": [22, 28, 29, 30, 54], "repo": [22, 28, 29, 30], "break": [22, 28, 29, 30, 38, 45], "degre": [22, 32, 39, 44], "set_cost_paramet": [22, 24, 27, 30, 37], "set_cost_parameters_": [22, 24, 27, 37], "par": [22, 24, 25, 27, 34, 37, 38], "scu1": [22, 37], "scp1": [22, 37], "scp2": [22, 37], "scv1": [22, 37], "scv2": [22, 37], "fcp1": [22, 37], "fcp2": [22, 37], "fcv1": [22, 37], "fcv2": [22, 37], "set_final_cost_paramet": 22, "trajectory_stabil": 22, "shift": [22, 39], "freeli": 22, "ilqrmpc_swingup_loss": 22, "bound": [22, 25, 34, 37, 38], "loss_weight": [22, 37, 38], "rescale_par": [22, 25, 34, 37, 38], "unscale_par": [22, 25, 34, 37, 38], "computedtorquecontrol": 23, "invers": [23, 32, 45], "obj": 23, "inversedynamicscontrol": 23, "roa": 24, "dlqr": 24, "iterative_riccati": 24, "ricatti": 24, "intend": 24, "more": [24, 25, 45, 47, 54, 55], "see": [24, 48, 50, 52, 54], "exampl": [24, 33, 39, 44], "github": [24, 46, 47, 50, 52], "16": 24, "745": 24, "notebook": 24, "tree": [24, 38], "main": [24, 39, 44, 45, 50, 52, 54], "207": 24, "lagrang": 24, "multipli": [24, 32], "constraint": 24, "dx": 24, "lqrcontrol": 24, "unstabl": 24, "fixpoint": 24, "set_cost_matric": 24, "directli": [24, 33, 54], "p1p1_cost": 24, "p2p2_cost": 24, "v1v1_cost": 24, "v2v2_cost": 24, "p1p2_cost": 24, "v1v2_cost": 24, "p1v1_cost": 24, "p1v2_cost": 24, "p2v1_cost": 24, "p2v2_cost": 24, "u1u1_cost": 24, "u2u2_cost": 24, "u1u2_cost": 24, "p1p1": 24, "p1p2": 24, "p1v1": 24, "p1v2": 24, "p2p2": 24, "p2v1": 24, "p2v2": 24, "v1v1": 24, "v1v2": 24, "v2v2": 24, "u1u1": 24, "u1u2": 24, "u2u2": 24, "diagon": 24, "failure_valu": 24, "nan": 24, "cost_to_go_cut": 24, "exce": 24, "retur": 24, "lqrcontroller_nonsymbol": 24, "version": [24, 45, 47], "symbol": [24, 32], "thu": 24, "compat": [24, 55], "cma": [24, 34], "urdf_path": [24, 30, 36], "drake": [24, 30], "urdf": [24, 30, 36, 46], "temporari": [24, 30], "lqr_check_ctg": 25, "tf": [25, 33], "sim_callback": 25, "callback": 25, "pass": [25, 51, 55], "probabilit": 25, "lqr_check_ctg_verif": 25, "dpar": 25, "cpar": 25, "grid": 25, "idx1": 25, "idx2": 25, "lqr_check_epsilon": 25, "14159265": 25, "eps_p": 25, "eps_v": 25, "lqr_check_epsilon_verif": 25, "directspher": 25, "r_i": 25, "r_o": 25, "krauth": 25, "werner": 25, "statist": 25, "oxford": 25, "master": 25, "seri": [25, 44, 45], "13": 25, "univers": [25, 44], "press": [25, 44], "2006": 25, "42": 25, "getellipseparamsfromquad": 25, "s0idx": 25, "s1idx": 25, "ellips": 25, "plane": [25, 41, 45], "match": 25, "funnel": 25, "plot": [25, 33, 39, 44, 55], "getellipsepatch": 25, "x1": [25, 32], "just": [25, 33], "patch": [25, 33], "involv": 25, "centerpoint": 25, "rhohist": 25, "plotellips": 25, "quadform": 25, "helper": 25, "tmx": 25, "samplefromellipsoid": 25, "rinner": 25, "router": 25, "volellipsoid": 25, "calcul": [25, 32, 33, 37, 45, 50, 52], "hyperellipsoid": 25, "hyperllipsoid": 25, "math": 25, "stackexchang": 25, "question": 25, "332391": 25, "332434": 25, "textbook": 25, "gatech": 25, "ila": 25, "ball": 25, "wikipedia": 25, "wiki": 25, "volume_of_an_n": 25, "check_x0": 25, "compute_roa_prob": 25, "n_iter": 25, "n_check_sim": 25, "xbar_max": 25, "roa_prob_loss": 25, "controller_sum_of_gaussians_with_angles_numpi": 26, "ctrl_rate": 26, "u_max": 26, "num_dof": 26, "controlled_dof": 26, "meas_po": 26, "meas_vel": 26, "meas_tau": 26, "meas_tim": [26, 31, 38], "energyshapingpflandlqrcontrol": 27, "nergi": 27, "print": [27, 44], "kpo": 27, "kvel": 27, "ken": 27, "energyshapingpflcontrol": 27, "symbolicpflcontrol": 27, "symbolicpflandlqrcontrol": 27, "pfl_method": 27, "noncolloc": 27, "energysat": 27, "q1sat": 27, "q1": [27, 32, 39], "pointpidcontrol": 28, "trajpidcontrol": 28, "use_feed_forward_torqu": 28, "prefer": [28, 29, 30], "feed": [28, 44], "forward": [28, 32, 44], "feedforwardcontrol": 29, "feedforward": 29, "trajectorycontrol": 29, "kk_stabil": 29, "trajectoryinterpcontrol": 29, "tvlqrcontrol": 30, "diag": 30, "ey": [30, 33], "zero": [30, 31, 33, 44], "rad2rev": 31, "angle_in_radian": 31, "convert": [31, 32, 45], "radian": [31, 44], "revolut": [31, 44], "rev2rad": 31, "angle_in_revolut": 31, "rev": 31, "save_data": 31, "date": 31, "shoulder_meas_po": [31, 38], "shoulder_meas_vel": [31, 38], "shoulder_meas_tau": [31, 34, 38], "elbow_meas_po": [31, 38], "elbow_meas_vel": [31, 38], "elbow_meas_tau": [31, 34, 38], "deprec": 31, "One": [31, 45], "save_trajectori": [31, 38, 54], "setzeroposit": 31, "initpo": 31, "initvel": 31, "inittau": 31, "tmotor": [31, 44], "motor_driv": 31, "canmotorlib": 31, "canmotorcontrol": [31, 44], "sensor": [31, 39], "run_experi": 31, "can_port": 31, "can0": [31, 44], "motor_id": [31, 44], "motor_typ": 31, "ak80_6_v1p1": 31, "tau_limit": 31, "record_video": 31, "durat": 31, "port": [31, 44], "id": [31, 44, 54], "motor_send_n_command": 31, "numtim": 31, "motor_send_n_commands2": 31, "motor_speed_test": 31, "motor_speed_test2": 31, "profil": [31, 44], "meas_dt": 31, "valid": 31, "avg": 31, "numstep": 31, "videowriterwidget": 31, "video_file_nam": 31, "src": [31, 47, 54], "save_fram": 31, "show_fram": 31, "start_record": 31, "yb_friction_matrix": 32, "dq_vec": 32, "contribut": [32, 54], "dq1": 32, "dq2": 32, "415": 32, "0475": 32, "0798": 32, "dof": 32, "filepath": [32, 33], "model_design": 32, "model_id": [32, 54], "freedom": 32, "sens": 32, "yaml": 32, "togeth": 32, "hd": 32, "get_dict": 32, "load_dict": 32, "mpar_dict": 32, "kei": [32, 33, 54], "look": 32, "gr": [32, 54], "load_model": 32, "load_yaml": 32, "file_path": 32, "save_dict": 32, "save_path": 32, "set_cfric": 32, "setter": 32, "set_com": 32, "set_damp": 32, "set_dof": 32, "set_gear_ratio": 32, "set_grav": 32, "set_inertia": 32, "set_length": 32, "set_mass": 32, "set_motor_inertia": 32, "set_torque_limit": 32, "coulomb_vector": 32, "forward_dynam": 32, "acc1": [32, 54], "acc2": [32, 54], "forward_kinemat": 32, "po": [32, 44], "origin": [32, 38, 51], "y1": 32, "x2": 32, "y2": 32, "cartesian": 32, "get_alin": 32, "xd": 32, "ax": 32, "bu": [32, 45], "get_blin": 32, "get_cx": 32, "cx": 32, "del": 32, "x_i": 32, "get_fx": 32, "fx": [32, 39], "get_gx": 32, "gx": 32, "get_minvx": 32, "minvx": 32, "minv": 32, "get_mx": 32, "mx": 32, "gravity_vector": 32, "kinetic_energi": 32, "linear_matric": 32, "u0": 32, "mass_matrix": 32, "potential_energi": 32, "rh": 32, "integrand": 32, "vel1": [32, 54], "vel2": [32, 54], "total_energi": 32, "ir_sym": 32, "angular_momentum_bas": 32, "angular": [32, 45], "momentum": 32, "angular_momentum_ddot_bas": 32, "s\u00b3": 32, "angular_momentum_dot_bas": 32, "center_of_mass": 32, "whole": 32, "com_dot": 32, "equation_of_mot": 32, "2nd": 32, "eom": [32, 33], "1st": 32, "sympi": 32, "qd": 32, "qdd": [32, 46, 51], "g_sym": 32, "gr_sym": 32, "acc": [32, 34, 38], "lambdify_matric": 32, "lambdifi": 32, "linear_matrices_discret": 32, "n_actuat": 32, "n_link": 32, "q01": 32, "hat": 32, "q02": 32, "q0d1": 32, "q0d2": 32, "qd1": 32, "qd2": 32, "qdd1": 32, "qdd2": 32, "replace_paramet": 32, "replac": 32, "shall": 32, "symbolic_coriolis_matrix": 32, "symbolic_coulomb_vector": 32, "symbolic_gravity_vector": 32, "symbolic_kinetic_energi": 32, "symbolic_linear_matric": 32, "symbolic_mass_matrix": 32, "symbolic_potential_energi": 32, "symbolic_total_energi": 32, "u01": 32, "u02": 32, "diff_to_matrix": 32, "diff": 32, "sub_symbol": 32, "new_symbol": 32, "substitut": 32, "new": [32, 33, 44, 48], "vector_mult": 32, "vec1": 32, "vec2": 32, "product": 32, "customenv": 33, "reward_func": 33, "terminated_func": 33, "reset_func": 33, "obs_spac": 33, "box": [33, 44], "float32": 33, "act_spac": 33, "max_episode_step": 33, "env": 33, "render": 33, "human": 33, "And": 33, "some": [33, 45, 54], "convent": [33, 54], "displai": [33, 44, 50, 52], "termin": [33, 44], "noth": 33, "usual": [33, 38, 44], "consumpt": 33, "rgb_arrai": 33, "ndarrai": 33, "rgb": 33, "pixel": 33, "imag": 33, "turn": [33, 55], "video": 33, "ansi": 33, "str": 33, "stringio": 33, "style": 33, "represent": 33, "newlin": 33, "escap": 33, "color": [33, 44], "sure": [33, 41, 44, 45], "your": [33, 44, 45, 48], "metadata": 33, "recommend": [33, 41, 47], "super": [33, 55], "myenv": 33, "def": [33, 55], "frame": 33, "elif": 33, "pop": 33, "window": [33, 36, 39, 44, 45], "els": 33, "rais": 33, "except": [33, 44], "yield": 33, "episod": 33, "reach": 33, "you": [33, 41, 44, 45, 47, 50, 52, 54, 55], "accept": [33, 45], "info": 33, "amount": [33, 45, 51], "undefin": 33, "auxiliari": 33, "diagnost": 33, "debug": 33, "sometim": [33, 51], "double_pendulum_dynamics_func": 33, "state_represent": 33, "max_veloc": 33, "20": 33, "normalize_st": 33, "rescal": [33, 34], "unscale_act": 33, "unscale_st": 33, "anim": [33, 36, 55], "matplotlib": 33, "funcanim": 33, "controller_step": 33, "motir": 33, "wa": [33, 44, 47], "euler_integr": 33, "set_filter_paramet": 33, "get_control_u": 33, "get_measur": 33, "x_mea": [33, 38], "sigma": 33, "set_measurement_paramet": 33, "get_real_applied_u": 33, "u_out": 33, "relat": [33, 45], "last": [33, 51], "u_last": 33, "set_motor_paramet": 33, "get_stat": 33, "get_trajectory_data": 33, "rocrd": 33, "record_data": 33, "perturb": [33, 50], "reset_data_record": 33, "runge_integr": 33, "set_disturb": 33, "perturbation_tim": 33, "perturbation_tau": 33, "disturb": 33, "hit": 33, "happen": 33, "yet": 33, "raw": 33, "meas_noise_sigma": 33, "measuremt": 33, "gaussian": 33, "what": [33, 47], "u_noise_sigma": 33, "produc": 33, "resons": 33, "set_process_nois": 33, "process_noise_sigma": 33, "correspond": [33, 44, 54], "set_stat": 33, "t0": 33, "period": [33, 48], "under": [33, 44, 45, 50, 51, 52], "simulate_and_anim": 33, "plot_inittraj": 33, "plot_forecast": 33, "plot_trail": 33, "phase_plot": 33, "save_video": 33, "video_nam": 33, "pendulum_swingup": 33, "mp4": 33, "anim_dt": 33, "plot_horizontal_lin": 33, "horizontal_line_height": 33, "2d": 33, "serial": [33, 44], "chain": [33, 44], "forcast": 33, "trail": 33, "get_arrow": 33, "radiu": 33, "centx": 33, "centi": 33, "angle_": 33, "theta2_": 33, "color_": 33, "black": 33, "circular": 33, "arrow": 33, "coordint": 33, "orient": 33, "extend": [33, 45], "regularpolygon": 33, "head": 33, "set_arrow_properti": 33, "made": [33, 45], "smooth_data": 34, "shoulder_po": 34, "shoulder_vel": 34, "shoulder_trq": 34, "elbow_po": 34, "elbow_vel": 34, "elbow_trq": 34, "butterworth": 34, "build_identification_funct": 34, "fixed_mpar": 34, "variable_mpar": 34, "measured_data_filepath": 34, "build_identification_matric": 34, "fixed_symbol": 34, "variable_symbol": 34, "yb_matrix_sym": 34, "errfunc": 34, "phi": 34, "errfunc_nl": 34, "dyn_fun": 34, "plot_torqu": 34, "shoulder_fit_tau": 34, "elbow_fit_tau": 34, "run_system_identif": 34, "measured_data_csv": 34, "mp0": 34, "optimization_method": 34, "least_squar": 34, "num_proc": [34, 38], "sigma0": [34, 38], "maxfev": [34, 38], "show_plot": 34, "run_system_identification_nl": 34, "direct_colloc": 35, "scene_graph": 36, "x_trajectori": 36, "browser": 36, "pydrak": 36, "multibodi": 36, "multibodypl": 36, "geometri": 36, "scenegraph": 36, "scene": 36, "graph": 36, "piecewisepolynomial_": 36, "construct_trajectori": 36, "dircol": 36, "construct": [36, 40], "directcolloc": 36, "jerk": 36, "create_plant_from_urdf": 36, "creat": [36, 39, 54], "froma": 36, "extract_data_from_polynomi": 36, "extract": 36, "polnomi": 36, "ilqr_calcul": 37, "compute_trajectori": 37, "save_trajectory_csv": 37, "place": [37, 45], "folder": [37, 54], "script": [37, 44, 50, 52], "ilqr_trajopt_loss": 37, "goal_weight": 37, "swingup_loss": 38, "goal_accuraci": 38, "traj_opt_loss": 38, "traj_opt": 38, "concatenate_trajectori": 38, "with_tau": 38, "load_kk_valu": 38, "load_trajectori": [38, 54], "load_trajectory_ful": [38, 54], "x_filt": 38, "x_de": 38, "u_con": 38, "u_fric": 38, "u_mea": 38, "u_d": 38, "trajectory_properti": 38, "cma_optim": 38, "loss_func": 38, "init_par": 38, "outcma": 38, "popsize_factor": 38, "tolfun": 38, "tolx": 38, "tolstagn": 38, "scipy_par_optim": 38, "nelder": 38, "mead": 38, "solve_least_squar": 38, "xb0": 38, "fitpiecewisepolynomi": 38, "data_x": 38, "data_i": 38, "fit": 38, "cubic": 38, "segment": 38, "section": 38, "want": [38, 45, 47, 50, 52, 54, 55], "create_section_poli": 38, "split": 38, "setion": 38, "determin_poli": 38, "end_tim": 38, "get_valu": 38, "split_data": 38, "start_tim": 38, "interpolatematrix": 38, "interpolatevector": 38, "resampletrajectori": 38, "poly1": 38, "poly2": 38, "poly3": 38, "plot_figur": 38, "index": [38, 46], "shoulder_tau_control": 38, "elbow_tau_control": 38, "shoulder_filtered_vel": 38, "elbow_filtered_vel": 38, "shoulder_des_tim": 38, "shoulder_des_po": 38, "shoulder_des_vel": 38, "shoulder_des_tau": 38, "elbow_des_tim": 38, "elbow_des_po": 38, "elbow_des_vel": 38, "elbow_des_tau": 38, "shoulder_fric_tau": 38, "elbow_fric_tau": 38, "plot_timeseri": 38, "plot_po": 38, "plot_vel": 38, "plot_acc": 38, "plot_tau": 38, "plot_energi": 38, "pos_x_lin": 38, "pos_y_lin": 38, "vel_x_lin": 38, "vel_y_lin": 38, "acc_x_lin": 38, "acc_y_lin": 38, "tau_x_lin": 38, "tau_y_lin": 38, "energy_x_lin": 38, "energy_y_lin": 38, "t_de": 38, "u_friccomp": 38, "acc_d": 38, "generate_urdf": 38, "urdf_in": 38, "urdf_out": 38, "054": 38, "025": 38, "remove_namespac": 38, "wrap_angles_diff": 38, "wrap_angles_top": 38, "butterworth_filt": 39, "data_measur": 39, "cutoff": 39, "nyquist": 39, "200": 39, "hz": 39, "enumer": 39, "denomin": 39, "impuls": 39, "iir": 39, "xlow": 39, "phase": [39, 44], "butter": 39, "125": 39, "filtfilt": 39, "padlen": 39, "150": 39, "1086182074789912e": 39, "data_desir": 39, "scipy_fft": 39, "smooth_freq": 39, "identity_filt": 39, "control_input": 39, "track": 39, "q1_dot": 39, "q2_dot": 39, "filterpi": 39, "readthedoc": 39, "io": 39, "kalmanfilt": 39, "kalman_filter_rt": 39, "dim_x": 39, "dim_u": 39, "process_nois": 39, "measurement_nois": 39, "covariance_matrix": 39, "realtim": 39, "lowpass_filt": 39, "equival": 39, "unfilt": 39, "lowpass_filter_rt": 39, "data_filter_realtime_1": 39, "data_measured_list": 39, "data_filter_realtime_2": 39, "running_mean_filt": 39, "size": [39, 45], "time_vec": 39, "arrang": 39, "desired_torqu": 39, "filtered_torqu": 39, "time_vec_filt": 39, "filtered_desired_torqu": 39, "plt": 39, "xlabel": 39, "ylabel": 39, "titl": 39, "move": [39, 41], "averag": 39, "legend": 39, "savitzky_golay_filt": 39, "savitzki": 39, "golai": 39, "delta_t": 39, "iden": 39, "unscented_kalman_filter_rt": 39, "repositori": [40, 46, 47, 48, 50, 52, 53], "tightli": 40, "coupl": 40, "softwar": [40, 44, 46, 53], "instruct": [40, 48], "how": [40, 44, 45, 48, 51], "testbench": [40, 42], "guid": 40, "work": [41, 44, 45, 47], "care": [41, 44], "mind": 41, "brushless": 41, "veri": [41, 44, 45, 48], "power": [41, 44, 45], "tremend": 41, "speed": [41, 44, 45, 50], "suppli": [41, 44, 45], "awai": 41, "cage": 41, "surround": 41, "loos": 41, "fly": 41, "access": [41, 55], "emerg": [41, 45], "Be": 41, "extra": 41, "pure": [41, 44], "mjbot": [42, 47], "usag": [42, 44], "ak": 42, "80": 42, "ad": [42, 50, 52, 55], "soon": [42, 48, 49], "ak80": [44, 45], "driver": 44, "manual": 44, "found": [44, 48, 50, 52], "quasi": [44, 46], "drive": [44, 45, 46], "peak": [44, 45], "shaft": [44, 45], "equip": 44, "absolut": 44, "bit": 44, "rotari": 44, "basic": 44, "mini": 44, "cheetah": 44, "ben": 44, "katz": 44, "voltag": [44, 45], "24": [44, 45], "rate": [44, 45, 48], "transmiss": 44, "485": 44, "dimens": 44, "98": 44, "mm": [44, 45], "38": 44, "365": 44, "rpm": 44, "backlash": 44, "accuraci": 44, "k_m": 44, "2206": 44, "sqrt": 44, "electr": 44, "009524": 44, "k_t": 44, "091": 44, "092": 44, "184": 44, "back": [44, 45], "emf": 44, "k_v": 44, "251": 44, "2400": 44, "nabla": 44, "pole": 44, "resist": [44, 45], "170": 44, "pm5": 44, "omega": 44, "induct": [44, 45], "57": 44, "pm10": 44, "mu": 44, "rotor": 44, "000060719": 44, "devic": [44, 45], "download": 44, "cp210x": 44, "silab": 44, "isn": 44, "properli": 44, "sparkfun": 44, "instal": [44, 46, 53], "ch340": 44, "ch": 44, "341ser": 44, "ex": 44, "webpag": 44, "notic": 44, "uninstal": 44, "ch341": 44, "menu": 44, "old": 44, "modul": [44, 45, 46, 54], "websit": 44, "youtub": 44, "watch": 44, "hbqqcgebaf8": 44, "skyentif": 44, "hzy9vzgpzka": 44, "user": 44, "special": 44, "cubemar": 44, "modular": 44, "calibr": [44, 45], "shown": 44, "figur": [44, 54], "below": [44, 45, 54, 55], "micro": 44, "cabl": [44, 45], "pc": [44, 45, 50], "5pin": 44, "goe": 44, "24v": 44, "12a": 44, "complet": [44, 45], "serial_ch340": 44, "wch": 44, "cp": 44, "along": [44, 45], "appropri": 44, "baud": 44, "921600": 44, "115200": 44, "bd": 44, "due": [44, 46, 51], "remain": 44, "issu": 44, "side": 44, "gui": 44, "enter": 44, "correct": [44, 54], "motorselectent": 44, "slow": 44, "offer": [44, 45, 46], "decreas": [44, 45], "therefor": [44, 45], "commonli": [44, 51], "tick": 44, "m_mode": 44, "line": [44, 52, 54], "red": 44, "green": 44, "push": 44, "send": 44, "onc": 44, "button": [44, 45], "reliabl": 44, "sever": 44, "exit": 44, "restart": 44, "exact": 44, "especi": [44, 45], "danger": 44, "attach": [44, 45], "deactiv": 44, "messag": 44, "procedur": 44, "uvlo": 44, "vm": 44, "lockout": 44, "otw": 44, "thermal": 44, "warn": 44, "shutdown": 44, "could": 44, "interpret": 44, "sheet": 44, "drv8353m": 44, "three": [44, 48], "smart": 44, "gate": 44, "texa": 44, "instrument": 44, "datasheet": 44, "proper": 44, "ground": 44, "ideal": 44, "isol": 44, "qualiti": [44, 51], "common": 44, "share": 44, "great": 44, "daisi": 44, "connector": [44, 45], "neg": 44, "pin": 44, "resistor": [44, 45], "120": 44, "low": [44, 45, 46, 51], "These": [44, 54], "absorb": [44, 45], "reflect": 44, "protocol": [44, 45], "diagram": [44, 45], "fig": [44, 45], "cpu": 44, "transceiv": 44, "xcvr": 44, "ac": 44, "To": [44, 51, 52, 55], "depend": [44, 45, 47, 50, 51, 55], "ip": 44, "mbaud": 44, "sudo": [44, 47], "bitrat": 44, "bring": 44, "altern": 44, "shell": 44, "setup_caninterfac": 44, "sh": 44, "job": 44, "linux": [44, 45], "purpos": [44, 46], "cutecom": 44, "receiv": 44, "can_socket": 44, "socket_timeout": 44, "avail": 44, "enable_motor": 44, "disable_motor": 44, "set_zero_posit": 44, "send_deg_command": 44, "position_in_degre": 44, "velocity_in_degre": 44, "tau_ff": 44, "send_rad_command": 44, "position_in_radian": 44, "velocity_in_radian": 44, "si": 44, "board": [44, 45], "block": 44, "close": 44, "bee": 44, "seen": 44, "flexibl": 44, "those": [44, 54], "pde": 44, "pvel": 44, "tff": 44, "let": 44, "built": [45, 46], "pednulum": 45, "test": [45, 46, 47, 51], "bench": 45, "bill": [45, 46], "materi": [45, 46, 54], "cad": [45, 46], "cover": [45, 54], "shoulder": [45, 46], "mount": 45, "bracket": 45, "fold": 45, "aluminum": 45, "light": 45, "laser": 45, "thick": 45, "sandwich": 45, "plate": 45, "lamin": 45, "pvc": 45, "rigid": 45, "foam": 45, "airex": 45, "arm": 45, "effector": [45, 52], "elbow": [45, 46], "hous": 45, "sinc": 45, "hollow": 45, "opposit": 45, "windup": 45, "horizont": 45, "surfac": 45, "tabl": [45, 50, 52], "suffic": 45, "screw": 45, "clamp": 45, "fixat": 45, "come": [45, 48, 49], "front": [45, 54], "longer": 45, "aluminium": 45, "piec": 45, "safeti": 45, "warranti": 45, "reproduct": 45, "our": 45, "bed": 45, "own": [45, 48], "risk": 45, "connect": [45, 55], "cubemars_ak_v1": 45, "commun": [45, 51, 54], "1mbit": 45, "sec": 45, "furthermor": 45, "interfac": [45, 54], "doesn": 45, "pci": 45, "card": 45, "pcan": 45, "former": 45, "uart": 45, "latter": [45, 55], "useful": 45, "consum": 45, "deliv": 45, "ea": 45, "9032": 45, "elektro": 45, "automatik": 45, "capacitor": 45, "protect": 45, "wouldn": 45, "batteri": 45, "pack": 45, "simpli": 45, "recharg": 45, "10x": 45, "singl": 45, "7v": 45, "400": 45, "cell": 45, "capac": 45, "parallel": 45, "disconnect": 45, "diconnect": 45, "keep": [45, 52], "400f": 45, "revers": 45, "electro": 45, "magnet": 45, "flow": 45, "recycl": 45, "caus": 45, "spike": 45, "enough": 45, "capacit": 45, "suffici": 45, "larg": [45, 51], "desgin": 45, "curcuit": 45, "benefici": 45, "bulk": 45, "disadvantag": 45, "increas": 45, "sourc": [45, 46], "were": 45, "perfect": [45, 51], "would": 45, "dc": 45, "polar": 45, "diod": 45, "cannot": 45, "sink": 45, "v_": 45, "nom": 45, "simpl": [45, 50, 52], "across": 45, "accordingli": 45, "nevertheless": 45, "tune": [45, 51], "tricki": 45, "factor": [45, 51], "extern": 45, "brake": 45, "short": [45, 50, 52], "parasit": 45, "larger": 45, "stabl": 45, "higher": 45, "quickli": 45, "rippl": 45, "too": 45, "apllic": 45, "introduc": 45, "burn": 45, "safti": 45, "margin": 45, "wherea": 45, "buffer": 45, "ensur": [45, 55], "never": [45, 51], "charg": 45, "don": 45, "bui": 45, "huge": 45, "expens": 45, "mai": [45, 47, 50, 51, 54, 55], "cheaper": 45, "purchas": 45, "topic": 45, "drawback": 45, "heat": 45, "frequent": [45, 54], "regener": 45, "shunt": 45, "polulu": 45, "dissip": 45, "much": 45, "project": 46, "open": 46, "kit": 46, "strongli": 46, "platform": 46, "transpar": 46, "passiv": 46, "offlin": 46, "studi": [46, 51], "dual": 46, "compon": [46, 54, 55], "Of": 46, "bom": 46, "etc": 46, "dfki": [46, 47], "ric": [46, 47], "lab": [46, 47], "double_pendulum": [46, 47, 54, 55], "leaderboard": [46, 53], "search": 46, "code": [47, 54], "mostli": 47, "moment": [47, 54], "moteu": 47, "packag": 47, "comment": 47, "py": [47, 50, 52], "virtual": 47, "neccessari": 47, "ubuntu20": 47, "apt": 47, "libyaml": 47, "dev": 47, "libeigen3": 47, "libpython3": 47, "libx11": 47, "libsm6": 47, "libxt6": 47, "libglib2": 47, "python3": 47, "sphinx": 47, "numpydoc": 47, "rtd": 47, "theme": 47, "ubuntu22": 47, "clone": 47, "git": 47, "cd": 47, "bullet": 47, "recompil": 47, "appear": [47, 50, 52], "pip": 47, "eigen": 47, "librari": [47, 54, 55], "correctli": 47, "header": [47, 54], "wget": 47, "o": 47, "zip": 47, "gitlab": 47, "libeigen": 47, "archiv": 47, "unzip": 47, "mv": 47, "usr": 47, "visit": 47, "wildli": 48, "interest": 48, "better": 48, "understand": 48, "behavior": [48, 51], "offici": [48, 50, 52], "create_leaderboard": [50, 52], "con_": [50, 52], "alreadi": [50, 52], "sim_paramet": [50, 52], "benchmark": 50, "con_controllernam": [50, 52], "controllernam": [50, 52], "instanc": [50, 52], "yout": [50, 52], "leaderboard_config": [50, 52], "sim_swingup": [50, 52], "simple_nam": [50, 52], "short_descript": [50, 52], "charact": [50, 52], "readme_path": [50, 52], "readm": [50, 52], "md": [50, 52], "pleas": [50, 52, 54], "comma": [50, 52, 54], "separ": [50, 52, 54], "particip": [50, 52], "pull": [50, 52], "request": [50, 51, 52], "markdown": [50, 52], "feel": [50, 52], "instanti": [50, 52], "benchmark_control": 50, "relev": [50, 52], "1h": 50, "6h": 50, "influenc": 51, "capabl": 51, "fail": 51, "phenomenon": 51, "gap": 51, "conduct": 51, "quantifi": 51, "inaccuraci": 51, "been": [51, 54], "identif": 51, "perfectli": 51, "accur": 51, "ass": 51, "noisi": 51, "handl": 51, "without": [51, 55], "exactli": 51, "react": 51, "immedi": 51, "overshoot": 51, "undershoot": 51, "tau_": 51, "k_": 51, "resp": 51, "de": 51, "mean": 51, "neq": 51, "reaction": 51, "threshhold": 52, "sim_control": 52, "calculate_leaderboard_scor": 52, "welcom": 54, "besid": 54, "someth": 54, "ecosystem": 54, "organ": 54, "interplai": 54, "visual": 54, "explain": 54, "detail": 54, "yml": 54, "most": 54, "conveni": 54, "write": 54, "precis": [54, 55], "design_a": 54, "design_b": 54, "design_c": 54, "design_hd": 54, "design_": 54, "capit": 54, "letter": 54, "minor": 54, "hypothet": 54, "realiz": 54, "model_1": 54, "model_2": 54, "model_3": 54, "model_": 54, "folow": 54, "simplifi": 54, "zhe": 54, "later": 54, "reserv": 54, "column": 54, "pos1": 54, "pos2": 54, "pos_meas1": 54, "pos_meas2": 54, "vel_meas1": 54, "vel_meas2": 54, "pos_filt1": 54, "pos_filt2": 54, "vel_filt1": 54, "vel_filt2": 54, "pos_des1": 54, "pos_des2": 54, "vel_des1": 54, "vel_des2": 54, "tau_con1": 54, "tau_con2": 54, "tau_fric1": 54, "tau_fric2": 54, "tau_meas1": 54, "tau_meas2": 54, "tau_des1": 54, "tau_des2": 54, "k11": 54, "k12": 54, "k13": 54, "k14": 54, "k21": 54, "k22": 54, "k23": 54, "k24": 54, "k1": 54, "k2": 54, "easiest": 54, "csv_trajectori": 54, "panda": 54, "miss": 54, "skip": 54, "abstract_control": 55, "sent": 55, "underscor": 55, "mayb": 55, "retrac": 55, "initiali": 55, "ba": 55, "funciton": 55, "incom": 55, "u_hist": 55, "friciton": 55, "u_fric_hist": 55, "u_grav_hist": 55, "histori": 55, "x_hist": 55, "xfilt_hist": 55, "templat": 55, "strictli": 55, "controllertempl": 55, "__init__": 55}, "objects": {"": [[14, 0, 0, "-", "double_pendulum"]], "double_pendulum": [[15, 0, 0, "-", "analysis"], [16, 0, 0, "-", "controller"], [31, 0, 0, "-", "experiments"], [32, 0, 0, "-", "model"], [33, 0, 0, "-", "simulation"], [34, 0, 0, "-", "system_identification"], [35, 0, 0, "-", "trajectory_optimization"], [38, 0, 0, "-", "utils"]], "double_pendulum.analysis": [[15, 0, 0, "-", "benchmark"], [15, 0, 0, "-", "benchmark_plot"], [15, 0, 0, "-", "benchmark_scores"], [15, 0, 0, "-", "leaderboard"], [15, 0, 0, "-", "utils"]], "double_pendulum.analysis.benchmark": [[15, 1, 1, "", "benchmarker"]], "double_pendulum.analysis.benchmark.benchmarker": [[15, 2, 1, "", "benchmark"], [15, 2, 1, "", "check_delay_robustness"], [15, 2, 1, "", "check_goal_success"], [15, 2, 1, "", "check_meas_noise_robustness"], [15, 2, 1, "", "check_modelpar_robustness"], [15, 2, 1, "", "check_perturbation_robustness"], [15, 2, 1, "", "check_unoise_robustness"], [15, 2, 1, "", "check_uresponsiveness_robustness"], [15, 2, 1, "", "compute_cost"], [15, 2, 1, "", "compute_ref_cost"], [15, 2, 1, "", "compute_success_measure"], [15, 2, 1, "", "set_cost_par"], [15, 2, 1, "", "set_init_traj"], [15, 2, 1, "", "set_model_parameter"], [15, 2, 1, "", "simulate_and_get_cost"]], "double_pendulum.analysis.benchmark_plot": [[15, 3, 1, "", "plot_benchmark_results"], [15, 3, 1, "", "plot_model_robustness_multi"]], "double_pendulum.analysis.benchmark_scores": [[15, 3, 1, "", "get_delay_score"], [15, 3, 1, "", "get_measurement_noise_score"], [15, 3, 1, "", "get_model_score"], [15, 3, 1, "", "get_scores"], [15, 3, 1, "", "get_unoise_score"], [15, 3, 1, "", "get_uresponsiveness_score"]], "double_pendulum.analysis.leaderboard": [[15, 3, 1, "", "get_energy"], [15, 3, 1, "", "get_integrated_torque"], [15, 3, 1, "", "get_max_tau"], [15, 3, 1, "", "get_swingup_time"], [15, 3, 1, "", "get_tau_smoothness"], [15, 3, 1, "", "get_torque_cost"], [15, 3, 1, "", "get_velocity_cost"], [15, 3, 1, "", "leaderboard_scores"]], "double_pendulum.analysis.utils": [[15, 3, 1, "", "get_par_list"]], "double_pendulum.controller": [[17, 0, 0, "-", "SAC"], [16, 0, 0, "-", "abstract_controller"], [16, 0, 0, "-", "combined_controller"], [18, 0, 0, "-", "energy"], [19, 0, 0, "-", "friction_compensation"], [20, 0, 0, "-", "gamepad"], [21, 0, 0, "-", "gravity_compensation"], [22, 0, 0, "-", "ilqr"], [23, 0, 0, "-", "inverse_dynamics"], [24, 0, 0, "-", "lqr"], [26, 0, 0, "-", "mcpilco"], [27, 0, 0, "-", "partial_feedback_linearization"], [28, 0, 0, "-", "pid"], [29, 0, 0, "-", "trajectory_following"], [30, 0, 0, "-", "tvlqr"]], "double_pendulum.controller.SAC": [[17, 0, 0, "-", "SAC_controller"]], "double_pendulum.controller.SAC.SAC_controller": [[17, 1, 1, "", "SACController"]], "double_pendulum.controller.SAC.SAC_controller.SACController": [[17, 2, 1, "", "get_control_output_"]], "double_pendulum.controller.abstract_controller": [[16, 1, 1, "", "AbstractController"]], "double_pendulum.controller.abstract_controller.AbstractController": [[16, 2, 1, "", "filter_measurement"], [16, 2, 1, "", "get_control_output"], [16, 2, 1, "", "get_control_output_"], [16, 2, 1, "", "get_forecast"], [16, 2, 1, "", "get_friction_torque"], [16, 2, 1, "", "get_gravity_torque"], [16, 2, 1, "", "get_init_trajectory"], [16, 2, 1, "", "init"], [16, 2, 1, "", "init_"], [16, 2, 1, "", "init_filter"], [16, 2, 1, "", "reset"], [16, 2, 1, "", "reset_"], [16, 2, 1, "", "save"], [16, 2, 1, "", "save_"], [16, 2, 1, "", "set_filter_args"], [16, 2, 1, "", "set_friction_compensation"], [16, 2, 1, "", "set_goal"], [16, 2, 1, "", "set_gravity_compensation"], [16, 2, 1, "", "set_parameters"], [16, 2, 1, "", "set_start"]], "double_pendulum.controller.combined_controller": [[16, 1, 1, "", "CombinedController"], [16, 1, 1, "", "SimultaneousControllers"]], "double_pendulum.controller.combined_controller.CombinedController": [[16, 2, 1, "", "get_control_output_"], [16, 2, 1, "", "get_forecast"], [16, 2, 1, "", "get_init_trajectory"], [16, 2, 1, "", "init_"], [16, 2, 1, "", "reset_"], [16, 2, 1, "", "save_"], [16, 2, 1, "", "set_goal"], [16, 2, 1, "", "set_parameters"], [16, 2, 1, "", "set_start"]], "double_pendulum.controller.combined_controller.SimultaneousControllers": [[16, 2, 1, "", "get_control_output_"], [16, 2, 1, "", "get_forecast"], [16, 2, 1, "", "get_init_trajectory"], [16, 2, 1, "", "init_"], [16, 2, 1, "", "set_goal"], [16, 2, 1, "", "set_parameters"], [16, 2, 1, "", "set_start"]], "double_pendulum.controller.energy": [[18, 0, 0, "-", "energy_Xin"]], "double_pendulum.controller.energy.energy_Xin": [[18, 1, 1, "", "EnergyController"], [18, 3, 1, "", "kd_func"]], "double_pendulum.controller.energy.energy_Xin.EnergyController": [[18, 2, 1, "", "check_parameters"], [18, 2, 1, "", "get_control_output_"], [18, 2, 1, "", "init_"], [18, 2, 1, "", "save_"], [18, 2, 1, "", "set_goal"], [18, 2, 1, "", "set_parameters"]], "double_pendulum.controller.friction_compensation": [[19, 0, 0, "-", "friction_compensation_controller"]], "double_pendulum.controller.friction_compensation.friction_compensation_controller": [[19, 1, 1, "", "FrictionCompensationController"]], "double_pendulum.controller.friction_compensation.friction_compensation_controller.FrictionCompensationController": [[19, 2, 1, "", "get_control_output_"], [19, 2, 1, "", "save_"]], "double_pendulum.controller.gamepad": [[20, 0, 0, "-", "gamepad"], [20, 0, 0, "-", "gamepad_controller"]], "double_pendulum.controller.gamepad.gamepad": [[20, 1, 1, "", "GamePad"]], "double_pendulum.controller.gamepad.gamepad.GamePad": [[20, 2, 1, "", "read"]], "double_pendulum.controller.gamepad.gamepad_controller": [[20, 1, 1, "", "GamepadController"]], "double_pendulum.controller.gamepad.gamepad_controller.GamepadController": [[20, 2, 1, "", "get_control_output_"]], "double_pendulum.controller.gravity_compensation": [[21, 0, 0, "-", "PID_gravity_compensation_controller"], [21, 0, 0, "-", "gravity_compensation_controller"]], "double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller": [[21, 1, 1, "", "PIDGravityCompensationController"]], "double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller.PIDGravityCompensationController": [[21, 2, 1, "", "get_control_output_"], [21, 2, 1, "", "init_"], [21, 2, 1, "", "save_"], [21, 2, 1, "", "set_goal"], [21, 2, 1, "", "set_parameters"]], "double_pendulum.controller.gravity_compensation.gravity_compensation_controller": [[21, 1, 1, "", "GravityCompensationController"]], "double_pendulum.controller.gravity_compensation.gravity_compensation_controller.GravityCompensationController": [[21, 2, 1, "", "get_control_output_"], [21, 2, 1, "", "save_"]], "double_pendulum.controller.ilqr": [[22, 0, 0, "-", "ilqr_mpc_cpp"], [22, 0, 0, "-", "paropt"]], "double_pendulum.controller.ilqr.ilqr_mpc_cpp": [[22, 1, 1, "", "ILQRMPCCPPController"]], "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController": [[22, 2, 1, "", "compute_init_traj"], [22, 2, 1, "", "get_control_output_"], [22, 2, 1, "", "get_forecast"], [22, 2, 1, "", "get_init_trajectory"], [22, 2, 1, "", "init_"], [22, 2, 1, "", "load_init_traj"], [22, 2, 1, "", "save_"], [22, 2, 1, "", "set_cost_parameters"], [22, 2, 1, "", "set_cost_parameters_"], [22, 2, 1, "", "set_final_cost_parameters"], [22, 2, 1, "", "set_goal"], [22, 2, 1, "", "set_parameters"], [22, 2, 1, "", "set_start"]], "double_pendulum.controller.ilqr.paropt": [[22, 1, 1, "", "ilqrmpc_swingup_loss"]], "double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss": [[22, 2, 1, "", "init"], [22, 2, 1, "", "rescale_pars"], [22, 2, 1, "", "set_model_parameters"], [22, 2, 1, "", "set_parameters"], [22, 2, 1, "", "unscale_pars"]], "double_pendulum.controller.inverse_dynamics": [[23, 0, 0, "-", "computed_torque_controller"], [23, 0, 0, "-", "inverse_dynamics_ff_controller"]], "double_pendulum.controller.inverse_dynamics.computed_torque_controller": [[23, 1, 1, "", "ComputedTorqueController"]], "double_pendulum.controller.inverse_dynamics.computed_torque_controller.ComputedTorqueController": [[23, 2, 1, "", "get_control_output_"], [23, 2, 1, "", "get_init_trajectory"], [23, 2, 1, "", "init_"], [23, 2, 1, "", "save_"], [23, 2, 1, "", "set_parameters"]], "double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller": [[23, 1, 1, "", "InverseDynamicsController"]], "double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller.InverseDynamicsController": [[23, 2, 1, "", "get_control_output_"], [23, 2, 1, "", "get_init_trajectory"], [23, 2, 1, "", "init_"], [23, 2, 1, "", "save_"]], "double_pendulum.controller.lqr": [[24, 0, 0, "-", "lqr"], [24, 0, 0, "-", "lqr_controller"], [24, 0, 0, "-", "lqr_controller_drake"], [25, 0, 0, "-", "roa"]], "double_pendulum.controller.lqr.lqr": [[24, 3, 1, "", "dlqr"], [24, 3, 1, "", "iterative_riccati"], [24, 3, 1, "", "lqr"]], "double_pendulum.controller.lqr.lqr_controller": [[24, 1, 1, "", "LQRController"], [24, 1, 1, "", "LQRController_nonsymbolic"]], "double_pendulum.controller.lqr.lqr_controller.LQRController": [[24, 2, 1, "", "get_control_output_"], [24, 2, 1, "", "init_"], [24, 2, 1, "", "save_"], [24, 2, 1, "", "set_cost_matrices"], [24, 2, 1, "", "set_cost_parameters"], [24, 2, 1, "", "set_cost_parameters_"], [24, 2, 1, "", "set_goal"], [24, 2, 1, "", "set_parameters"]], "double_pendulum.controller.lqr.lqr_controller.LQRController_nonsymbolic": [[24, 2, 1, "", "get_control_output_"], [24, 2, 1, "", "init_"], [24, 2, 1, "", "save_"], [24, 2, 1, "", "set_cost_matrices"], [24, 2, 1, "", "set_cost_parameters"], [24, 2, 1, "", "set_cost_parameters_"], [24, 2, 1, "", "set_goal"], [24, 2, 1, "", "set_parameters"]], "double_pendulum.controller.lqr.lqr_controller_drake": [[24, 1, 1, "", "LQRController"]], "double_pendulum.controller.lqr.lqr_controller_drake.LQRController": [[24, 2, 1, "", "get_control_output_"], [24, 2, 1, "", "init_"], [24, 2, 1, "", "save_"], [24, 2, 1, "", "set_cost_matrices"], [24, 2, 1, "", "set_cost_parameters"], [24, 2, 1, "", "set_cost_parameters_"], [24, 2, 1, "", "set_goal"]], "double_pendulum.controller.lqr.roa": [[25, 0, 0, "-", "check"], [25, 0, 0, "-", "ellipsoid"], [25, 0, 0, "-", "prob_roa"]], "double_pendulum.controller.lqr.roa.check": [[25, 1, 1, "", "lqr_check_ctg"], [25, 3, 1, "", "lqr_check_ctg_verification"], [25, 1, 1, "", "lqr_check_epsilon"], [25, 3, 1, "", "lqr_check_epsilon_verification"]], "double_pendulum.controller.lqr.roa.check.lqr_check_ctg": [[25, 2, 1, "", "sim_callback"]], "double_pendulum.controller.lqr.roa.check.lqr_check_epsilon": [[25, 2, 1, "", "sim_callback"]], "double_pendulum.controller.lqr.roa.ellipsoid": [[25, 3, 1, "", "directSphere"], [25, 3, 1, "", "getEllipseParamsFromQuad"], [25, 3, 1, "", "getEllipsePatch"], [25, 3, 1, "", "getEllipsePatches"], [25, 3, 1, "", "plotEllipse"], [25, 3, 1, "", "quadForm"], [25, 3, 1, "", "sampleFromEllipsoid"], [25, 3, 1, "", "volEllipsoid"]], "double_pendulum.controller.lqr.roa.prob_roa": [[25, 3, 1, "", "check_x0"], [25, 3, 1, "", "compute_roa_prob"], [25, 1, 1, "", "roa_prob_loss"]], "double_pendulum.controller.lqr.roa.prob_roa.roa_prob_loss": [[25, 2, 1, "", "rescale_pars"], [25, 2, 1, "", "unscale_pars"]], "double_pendulum.controller.mcpilco": [[26, 0, 0, "-", "mcpilco_controller"]], "double_pendulum.controller.mcpilco.mcpilco_controller": [[26, 1, 1, "", "Controller_sum_of_Gaussians_with_angles_numpy"]], "double_pendulum.controller.mcpilco.mcpilco_controller.Controller_sum_of_Gaussians_with_angles_numpy": [[26, 2, 1, "", "get_control_output"], [26, 2, 1, "", "get_control_output_"]], "double_pendulum.controller.partial_feedback_linearization": [[27, 0, 0, "-", "pfl"], [27, 0, 0, "-", "symbolic_pfl"]], "double_pendulum.controller.partial_feedback_linearization.pfl": [[27, 1, 1, "", "EnergyShapingPFLAndLQRController"], [27, 1, 1, "", "EnergyShapingPFLController"]], "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLAndLQRController": [[27, 2, 1, "", "get_control_output_"], [27, 2, 1, "", "init_"], [27, 2, 1, "", "set_cost_parameters_"], [27, 2, 1, "", "set_goal"]], "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLController": [[27, 2, 1, "", "get_control_output_"], [27, 2, 1, "", "save_"], [27, 2, 1, "", "set_cost_parameters"], [27, 2, 1, "", "set_cost_parameters_"], [27, 2, 1, "", "set_goal"]], "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl": [[27, 1, 1, "", "SymbolicPFLAndLQRController"], [27, 1, 1, "", "SymbolicPFLController"]], "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLAndLQRController": [[27, 2, 1, "", "get_control_output_"], [27, 2, 1, "", "init_"], [27, 2, 1, "", "save_"], [27, 2, 1, "", "set_cost_parameters_"], [27, 2, 1, "", "set_goal"]], "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLController": [[27, 2, 1, "", "get_control_output_"], [27, 2, 1, "", "init_"], [27, 2, 1, "", "save_"], [27, 2, 1, "", "set_cost_parameters"], [27, 2, 1, "", "set_cost_parameters_"], [27, 2, 1, "", "set_goal"]], "double_pendulum.controller.pid": [[28, 0, 0, "-", "point_pid_controller"], [28, 0, 0, "-", "trajectory_pid_controller"]], "double_pendulum.controller.pid.point_pid_controller": [[28, 1, 1, "", "PointPIDController"]], "double_pendulum.controller.pid.point_pid_controller.PointPIDController": [[28, 2, 1, "", "get_control_output_"], [28, 2, 1, "", "init_"], [28, 2, 1, "", "save_"], [28, 2, 1, "", "set_goal"], [28, 2, 1, "", "set_parameters"]], "double_pendulum.controller.pid.trajectory_pid_controller": [[28, 1, 1, "", "TrajPIDController"]], "double_pendulum.controller.pid.trajectory_pid_controller.TrajPIDController": [[28, 2, 1, "", "get_control_output_"], [28, 2, 1, "", "get_init_trajectory"], [28, 2, 1, "", "init_"], [28, 2, 1, "", "save_"], [28, 2, 1, "", "set_parameters"]], "double_pendulum.controller.trajectory_following": [[29, 0, 0, "-", "feed_forward"], [29, 0, 0, "-", "trajectory_controller"]], "double_pendulum.controller.trajectory_following.feed_forward": [[29, 1, 1, "", "FeedForwardController"]], "double_pendulum.controller.trajectory_following.feed_forward.FeedForwardController": [[29, 2, 1, "", "get_control_output_"], [29, 2, 1, "", "save_"]], "double_pendulum.controller.trajectory_following.trajectory_controller": [[29, 1, 1, "", "TrajectoryController"], [29, 1, 1, "", "TrajectoryInterpController"]], "double_pendulum.controller.trajectory_following.trajectory_controller.TrajectoryController": [[29, 2, 1, "", "get_control_output_"], [29, 2, 1, "", "get_init_trajectory"]], "double_pendulum.controller.trajectory_following.trajectory_controller.TrajectoryInterpController": [[29, 2, 1, "", "get_control_output_"], [29, 2, 1, "", "get_init_trajectory"], [29, 2, 1, "", "save_"]], "double_pendulum.controller.tvlqr": [[30, 0, 0, "-", "tvlqr_controller"], [30, 0, 0, "-", "tvlqr_controller_drake"]], "double_pendulum.controller.tvlqr.tvlqr_controller": [[30, 1, 1, "", "TVLQRController"]], "double_pendulum.controller.tvlqr.tvlqr_controller.TVLQRController": [[30, 2, 1, "", "get_control_output_"], [30, 2, 1, "", "get_init_trajectory"], [30, 2, 1, "", "init_"], [30, 2, 1, "", "save_"], [30, 2, 1, "", "set_cost_parameters"], [30, 2, 1, "", "set_goal"]], "double_pendulum.controller.tvlqr.tvlqr_controller_drake": [[30, 1, 1, "", "TVLQRController"]], "double_pendulum.controller.tvlqr.tvlqr_controller_drake.TVLQRController": [[30, 2, 1, "", "get_control_output_"], [30, 2, 1, "", "get_init_trajectory"], [30, 2, 1, "", "init_"], [30, 2, 1, "", "save_"], [30, 2, 1, "", "set_cost_parameters"]], "double_pendulum.experiments": [[31, 0, 0, "-", "experimental_utils"], [31, 0, 0, "-", "hardware_control_loop_tmotors"], [31, 0, 0, "-", "performance_profiler"], [31, 0, 0, "-", "video_recording"]], "double_pendulum.experiments.experimental_utils": [[31, 3, 1, "", "rad2rev"], [31, 3, 1, "", "rev2rad"], [31, 3, 1, "", "save_data"], [31, 3, 1, "", "setZeroPosition"]], "double_pendulum.experiments.hardware_control_loop_tmotors": [[31, 3, 1, "", "run_experiment"]], "double_pendulum.experiments.performance_profiler": [[31, 3, 1, "", "motor_send_n_commands"], [31, 3, 1, "", "motor_send_n_commands2"], [31, 3, 1, "", "motor_speed_test"], [31, 3, 1, "", "motor_speed_test2"], [31, 3, 1, "", "profiler"]], "double_pendulum.experiments.video_recording": [[31, 1, 1, "", "VideoWriterWidget"]], "double_pendulum.experiments.video_recording.VideoWriterWidget": [[31, 2, 1, "", "save_frame"], [31, 2, 1, "", "show_frame"], [31, 2, 1, "", "start_recording"], [31, 2, 1, "", "update"]], "double_pendulum.model": [[32, 0, 0, "-", "friction_matrix"], [32, 0, 0, "-", "model_parameters"], [32, 0, 0, "-", "plant"], [32, 0, 0, "-", "symbolic_plant"]], "double_pendulum.model.friction_matrix": [[32, 3, 1, "", "yb_friction_matrix"]], "double_pendulum.model.model_parameters": [[32, 1, 1, "", "model_parameters"]], "double_pendulum.model.model_parameters.model_parameters": [[32, 2, 1, "", "get_dict"], [32, 2, 1, "", "load_dict"], [32, 2, 1, "", "load_model"], [32, 2, 1, "", "load_yaml"], [32, 2, 1, "", "save_dict"], [32, 2, 1, "", "set_cfric"], [32, 2, 1, "", "set_com"], [32, 2, 1, "", "set_damping"], [32, 2, 1, "", "set_dof"], [32, 2, 1, "", "set_gear_ratio"], [32, 2, 1, "", "set_gravity"], [32, 2, 1, "", "set_inertia"], [32, 2, 1, "", "set_length"], [32, 2, 1, "", "set_mass"], [32, 2, 1, "", "set_motor_inertia"], [32, 2, 1, "", "set_torque_limit"]], "double_pendulum.model.plant": [[32, 1, 1, "", "DoublePendulumPlant"]], "double_pendulum.model.plant.DoublePendulumPlant": [[32, 2, 1, "", "coriolis_matrix"], [32, 2, 1, "", "coulomb_vector"], [32, 2, 1, "", "forward_dynamics"], [32, 2, 1, "", "forward_kinematics"], [32, 2, 1, "", "get_Alin"], [32, 2, 1, "", "get_Blin"], [32, 2, 1, "", "get_Cx"], [32, 2, 1, "", "get_Fx"], [32, 2, 1, "", "get_Gx"], [32, 2, 1, "", "get_Minvx"], [32, 2, 1, "", "get_Mx"], [32, 2, 1, "", "gravity_vector"], [32, 2, 1, "", "kinetic_energy"], [32, 2, 1, "", "linear_matrices"], [32, 2, 1, "", "mass_matrix"], [32, 2, 1, "", "potential_energy"], [32, 2, 1, "", "rhs"], [32, 2, 1, "", "total_energy"]], "double_pendulum.model.symbolic_plant": [[32, 1, 1, "", "SymbolicDoublePendulum"], [32, 3, 1, "", "diff_to_matrix"], [32, 3, 1, "", "sub_symbols"], [32, 3, 1, "", "vector_mult"]], "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum": [[32, 4, 1, "", "I1"], [32, 4, 1, "", "I2"], [32, 4, 1, "", "Ir_sym"], [32, 2, 1, "", "angular_momentum_base"], [32, 2, 1, "", "angular_momentum_ddot_base"], [32, 2, 1, "", "angular_momentum_dot_base"], [32, 4, 1, "", "b1"], [32, 4, 1, "", "b2"], [32, 4, 1, "", "base"], [32, 2, 1, "", "center_of_mass"], [32, 4, 1, "", "cf1"], [32, 4, 1, "", "cf2"], [32, 2, 1, "", "com_dot"], [32, 2, 1, "", "coriolis_matrix"], [32, 2, 1, "", "coulomb_vector"], [32, 4, 1, "", "dof"], [32, 2, 1, "", "equation_of_motion"], [32, 2, 1, "", "forward_dynamics"], [32, 2, 1, "", "forward_kinematics"], [32, 4, 1, "", "g_sym"], [32, 4, 1, "", "gr_sym"], [32, 2, 1, "", "gravity_vector"], [32, 2, 1, "", "inverse_dynamics"], [32, 2, 1, "", "kinetic_energy"], [32, 4, 1, "", "l1"], [32, 4, 1, "", "l2"], [32, 2, 1, "", "lambdify_matrices"], [32, 2, 1, "", "linear_matrices"], [32, 2, 1, "", "linear_matrices_discrete"], [32, 4, 1, "", "m1"], [32, 4, 1, "", "m2"], [32, 2, 1, "", "mass_matrix"], [32, 4, 1, "", "n_actuators"], [32, 4, 1, "", "n_links"], [32, 2, 1, "", "potential_energy"], [32, 4, 1, "", "q"], [32, 4, 1, "", "q01"], [32, 4, 1, "", "q02"], [32, 4, 1, "", "q0d1"], [32, 4, 1, "", "q0d2"], [32, 4, 1, "", "q1"], [32, 4, 1, "", "q2"], [32, 4, 1, "", "qd"], [32, 4, 1, "", "qd1"], [32, 4, 1, "", "qd2"], [32, 4, 1, "", "qdd"], [32, 4, 1, "", "qdd1"], [32, 4, 1, "", "qdd2"], [32, 4, 1, "", "r1"], [32, 4, 1, "", "r2"], [32, 2, 1, "", "replace_parameters"], [32, 2, 1, "", "rhs"], [32, 2, 1, "", "symbolic_coriolis_matrix"], [32, 2, 1, "", "symbolic_coulomb_vector"], [32, 2, 1, "", "symbolic_gravity_vector"], [32, 2, 1, "", "symbolic_kinetic_energy"], [32, 2, 1, "", "symbolic_linear_matrices"], [32, 2, 1, "", "symbolic_mass_matrix"], [32, 2, 1, "", "symbolic_potential_energy"], [32, 2, 1, "", "symbolic_total_energy"], [32, 4, 1, "", "tl1"], [32, 4, 1, "", "tl2"], [32, 2, 1, "", "total_energy"], [32, 4, 1, "", "u"], [32, 4, 1, "", "u0"], [32, 4, 1, "", "u01"], [32, 4, 1, "", "u02"], [32, 4, 1, "", "u1"], [32, 4, 1, "", "u2"], [32, 4, 1, "", "x"], [32, 4, 1, "", "x0"], [32, 4, 1, "", "xd"]], "double_pendulum.simulation": [[33, 0, 0, "-", "gym_env"], [33, 0, 0, "-", "simulation"], [33, 0, 0, "-", "visualization"]], "double_pendulum.simulation.gym_env": [[33, 1, 1, "", "CustomEnv"], [33, 1, 1, "", "double_pendulum_dynamics_func"]], "double_pendulum.simulation.gym_env.CustomEnv": [[33, 2, 1, "", "render"], [33, 2, 1, "", "reset"], [33, 2, 1, "", "step"]], "double_pendulum.simulation.gym_env.double_pendulum_dynamics_func": [[33, 2, 1, "", "integration"], [33, 2, 1, "", "normalize_state"], [33, 2, 1, "", "unscale_action"], [33, 2, 1, "", "unscale_state"]], "double_pendulum.simulation.simulation": [[33, 1, 1, "", "Simulator"]], "double_pendulum.simulation.simulation.Simulator": [[33, 2, 1, "", "controller_step"], [33, 2, 1, "", "euler_integrator"], [33, 2, 1, "", "filter_measurement"], [33, 2, 1, "", "get_control_u"], [33, 2, 1, "", "get_measurement"], [33, 2, 1, "", "get_real_applied_u"], [33, 2, 1, "", "get_state"], [33, 2, 1, "", "get_trajectory_data"], [33, 2, 1, "", "init_filter"], [33, 2, 1, "", "record_data"], [33, 2, 1, "", "reset"], [33, 2, 1, "", "reset_data_recorder"], [33, 2, 1, "", "runge_integrator"], [33, 2, 1, "", "set_disturbances"], [33, 2, 1, "", "set_filter_parameters"], [33, 2, 1, "", "set_measurement_parameters"], [33, 2, 1, "", "set_motor_parameters"], [33, 2, 1, "", "set_process_noise"], [33, 2, 1, "", "set_state"], [33, 2, 1, "", "simulate"], [33, 2, 1, "", "simulate_and_animate"], [33, 2, 1, "", "step"]], "double_pendulum.simulation.visualization": [[33, 3, 1, "", "get_arrow"], [33, 3, 1, "", "set_arrow_properties"]], "double_pendulum.system_identification": [[34, 0, 0, "-", "data_prep"], [34, 0, 0, "-", "dynamics"], [34, 0, 0, "-", "loss"], [34, 0, 0, "-", "plotting"], [34, 0, 0, "-", "sys_id"]], "double_pendulum.system_identification.data_prep": [[34, 3, 1, "", "smooth_data"]], "double_pendulum.system_identification.dynamics": [[34, 3, 1, "", "build_identification_function"], [34, 3, 1, "", "build_identification_matrices"], [34, 3, 1, "", "dynamics_func"], [34, 1, 1, "", "yb_matrix_sym"]], "double_pendulum.system_identification.loss": [[34, 1, 1, "", "errfunc"], [34, 1, 1, "", "errfunc_nl"]], "double_pendulum.system_identification.loss.errfunc": [[34, 2, 1, "", "rescale_pars"], [34, 2, 1, "", "unscale_pars"]], "double_pendulum.system_identification.loss.errfunc_nl": [[34, 2, 1, "", "rescale_pars"], [34, 2, 1, "", "unscale_pars"]], "double_pendulum.system_identification.plotting": [[34, 3, 1, "", "plot_torques"]], "double_pendulum.system_identification.sys_id": [[34, 3, 1, "", "run_system_identification"], [34, 3, 1, "", "run_system_identification_nl"]], "double_pendulum.trajectory_optimization": [[36, 0, 0, "-", "direct_collocation"], [37, 0, 0, "-", "ilqr"]], "double_pendulum.trajectory_optimization.direct_collocation": [[36, 0, 0, "-", "dircol_utils"]], "double_pendulum.trajectory_optimization.direct_collocation.dircol_utils": [[36, 3, 1, "", "animation"], [36, 3, 1, "", "construct_trajectories"], [36, 3, 1, "", "create_plant_from_urdf"], [36, 3, 1, "", "extract_data_from_polynomial"]], "double_pendulum.trajectory_optimization.ilqr": [[37, 0, 0, "-", "ilqr_cpp"], [37, 0, 0, "-", "paropt"]], "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp": [[37, 1, 1, "", "ilqr_calculator"]], "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator": [[37, 2, 1, "", "compute_trajectory"], [37, 2, 1, "", "save_trajectory_csv"], [37, 2, 1, "", "set_cost_parameters"], [37, 2, 1, "", "set_cost_parameters_"], [37, 2, 1, "", "set_goal"], [37, 2, 1, "", "set_model_parameters"], [37, 2, 1, "", "set_parameters"], [37, 2, 1, "", "set_start"]], "double_pendulum.trajectory_optimization.ilqr.paropt": [[37, 1, 1, "", "ilqr_trajopt_loss"]], "double_pendulum.trajectory_optimization.ilqr.paropt.ilqr_trajopt_loss": [[37, 2, 1, "", "rescale_pars"], [37, 2, 1, "", "set_model_parameters"], [37, 2, 1, "", "set_parameters"], [37, 2, 1, "", "unscale_pars"]], "double_pendulum.utils": [[38, 0, 0, "-", "cmaes_controller_par_optimizer"], [38, 0, 0, "-", "csv_trajectory"], [39, 0, 0, "-", "filters"], [38, 0, 0, "-", "optimization"], [38, 0, 0, "-", "pcw_polynomial"], [38, 0, 0, "-", "plotting"], [38, 0, 0, "-", "urdfs"], [38, 0, 0, "-", "wrap_angles"]], "double_pendulum.utils.cmaes_controller_par_optimizer": [[38, 1, 1, "", "swingup_loss"], [38, 1, 1, "", "traj_opt_loss"]], "double_pendulum.utils.cmaes_controller_par_optimizer.swingup_loss": [[38, 2, 1, "", "rescale_pars"], [38, 2, 1, "", "unscale_pars"]], "double_pendulum.utils.cmaes_controller_par_optimizer.traj_opt_loss": [[38, 2, 1, "", "rescale_pars"], [38, 2, 1, "", "unscale_pars"]], "double_pendulum.utils.csv_trajectory": [[38, 3, 1, "", "concatenate_trajectories"], [38, 3, 1, "", "load_Kk_values"], [38, 3, 1, "", "load_trajectory"], [38, 3, 1, "", "load_trajectory_full"], [38, 3, 1, "", "save_trajectory"], [38, 3, 1, "", "trajectory_properties"]], "double_pendulum.utils.filters": [[39, 0, 0, "-", "butterworth"], [39, 0, 0, "-", "fast_fourier_transform"], [39, 0, 0, "-", "identity"], [39, 0, 0, "-", "kalman_filter"], [39, 0, 0, "-", "low_pass"], [39, 0, 0, "-", "running_mean"], [39, 0, 0, "-", "savitzky_golay"], [39, 0, 0, "-", "unscented_kalman_filter"]], "double_pendulum.utils.filters.butterworth": [[39, 3, 1, "", "butterworth_filter"]], "double_pendulum.utils.filters.fast_fourier_transform": [[39, 3, 1, "", "fast_fourier_transform"], [39, 3, 1, "", "scipy_fft"]], "double_pendulum.utils.filters.identity": [[39, 1, 1, "", "identity_filter"]], "double_pendulum.utils.filters.kalman_filter": [[39, 3, 1, "", "kalman_filter"], [39, 1, 1, "", "kalman_filter_rt"], [39, 3, 1, "", "main"]], "double_pendulum.utils.filters.low_pass": [[39, 3, 1, "", "lowpass_filter"], [39, 1, 1, "", "lowpass_filter_rt"]], "double_pendulum.utils.filters.running_mean": [[39, 3, 1, "", "data_filter_realtime_1"], [39, 3, 1, "", "data_filter_realtime_2"], [39, 3, 1, "", "running_mean_filter"]], "double_pendulum.utils.filters.savitzky_golay": [[39, 3, 1, "", "savitzky_golay_filter"]], "double_pendulum.utils.filters.unscented_kalman_filter": [[39, 3, 1, "", "iden"], [39, 1, 1, "", "unscented_kalman_filter_rt"]], "double_pendulum.utils.optimization": [[38, 3, 1, "", "cma_optimization"], [38, 3, 1, "", "scipy_par_optimization"], [38, 3, 1, "", "solve_least_squares"]], "double_pendulum.utils.pcw_polynomial": [[38, 1, 1, "", "FitPiecewisePolynomial"], [38, 1, 1, "", "InterpolateMatrix"], [38, 1, 1, "", "InterpolateVector"], [38, 3, 1, "", "ResampleTrajectory"], [38, 3, 1, "", "poly1"], [38, 3, 1, "", "poly2"], [38, 3, 1, "", "poly3"]], "double_pendulum.utils.pcw_polynomial.FitPiecewisePolynomial": [[38, 2, 1, "", "create_section_poly"], [38, 2, 1, "", "determin_poly"], [38, 2, 1, "", "end_time"], [38, 2, 1, "", "get_value"], [38, 2, 1, "", "split_data"], [38, 2, 1, "", "start_time"]], "double_pendulum.utils.pcw_polynomial.InterpolateMatrix": [[38, 2, 1, "", "get_value"]], "double_pendulum.utils.pcw_polynomial.InterpolateVector": [[38, 2, 1, "", "get_value"]], "double_pendulum.utils.plotting": [[38, 3, 1, "", "plot_figures"], [38, 3, 1, "", "plot_timeseries"]], "double_pendulum.utils.urdfs": [[38, 3, 1, "", "generate_urdf"], [38, 3, 1, "", "remove_namespaces"]], "double_pendulum.utils.wrap_angles": [[38, 3, 1, "", "wrap_angles"], [38, 3, 1, "", "wrap_angles_diff"], [38, 3, 1, "", "wrap_angles_top"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"control": [0, 1, 3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 44, 50, 51, 52, 55], "method": [0, 55], "model": [1, 32, 54], "predict": 1, "mpc": [1, 2], "iter": [2, 9], "linear": [2, 4, 5, 9, 12], "quadrat": [2, 4, 9], "regul": [2, 4, 9, 12], "ilqr": [2, 9, 22, 37], "polici": 3, "base": 3, "lqr": [4, 24, 25], "region": 4, "attract": 4, "roa": [4, 25], "refer": [4, 5, 6, 8, 9, 11, 12], "partial": 5, "feedback": 5, "pfl": [5, 27], "soft": 6, "actor": 6, "critic": 6, "sac": [6, 17], "trajectori": [7, 10, 54], "optim": [7, 38], "direct": 8, "colloc": 8, "stabil": [10, 11], "riccati": 11, "gain": 11, "time": 12, "vari": 12, "quadrativ": 12, "tvlqr": [12, 30], "The": 13, "doubl": [13, 46], "pendulum": [13, 46], "system": 13, "equat": 13, "motion": 13, "energi": [13, 18], "identif": 13, "double_pendulum": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "subpackag": [14, 16, 24, 35, 38], "analysi": 15, "submodul": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39], "benchmark": 15, "benchmark_plot": 15, "benchmark_scor": 15, "leaderboard": [15, 48, 49, 50, 52], "util": [15, 38, 39], "abstract_control": 16, "combined_control": 16, "sac_control": 17, "energy_xin": 18, "friction_compens": 19, "friction_compensation_control": 19, "gamepad": 20, "gamepad_control": 20, "gravity_compens": 21, "pid_gravity_compensation_control": 21, "gravity_compensation_control": 21, "ilqr_mpc_cpp": 22, "paropt": [22, 37], "inverse_dynam": 23, "computed_torque_control": 23, "inverse_dynamics_ff_control": 23, "lqr_control": 24, "lqr_controller_drak": 24, "check": 25, "coopt_interfac": 25, "ellipsoid": 25, "prob_roa": 25, "roa_estim": 25, "roa_paropt": 25, "mcpilco": 26, "mcpilco_control": 26, "partial_feedback_linear": 27, "symbolic_pfl": 27, "pid": 28, "point_pid_control": 28, "trajectory_pid_control": 28, "trajectory_follow": 29, "feed_forward": 29, "trajectory_control": 29, "tvlqr_control": 30, "tvlqr_controller_drak": 30, "experi": [31, 41], "experimental_util": 31, "hardware_control_loop_mjbot": 31, "hardware_control_loop_tmotor": 31, "performance_profil": 31, "video_record": 31, "friction_matrix": 32, "model_paramet": 32, "plant": 32, "symbolic_pl": 32, "simul": [33, 52], "gym_env": 33, "visual": 33, "system_identif": 34, "data_prep": 34, "dynam": 34, "loss": 34, "plot": [34, 38], "sys_id": 34, "trajectory_optim": [35, 36, 37], "direct_colloc": 36, "dircol_util": 36, "ilqr_cpp": 37, "cmaes_controller_par_optim": 38, "csv_trajectori": 38, "pcw_polynomi": 38, "urdf": 38, "wrap_angl": 38, "filter": [39, 55], "butterworth": 39, "fast_fourier_transform": 39, "ident": 39, "kalman_filt": 39, "low_pass": 39, "running_mean": 39, "savitzky_golai": 39, "unscented_kalman_filt": 39, "hardwar": [40, 41, 45, 49], "guid": 41, "safeti": 41, "note": 41, "motor": [42, 44], "mjbot": 43, "initi": [43, 44], "setup": [43, 44, 45], "commun": [43, 44], "t": 44, "ak": 44, "80": 44, "6": 44, "physic": 44, "paramet": [44, 50, 52, 54], "actuat": 44, "tutori": 44, "instruct": [44, 45], "r": 44, "link": 44, "config": 44, "tool": 44, "debug": 44, "can": 44, "bu": 44, "wire": [44, 45], "set": 44, "up": 44, "interfac": 44, "test": 44, "connect": 44, "python": 44, "intern": 44, "pd": 44, "testbench": 45, "descript": 45, "assembli": 45, "electr": 45, "backemf": 45, "welcom": 46, "": 46, "document": 46, "tabl": 46, "content": 46, "indic": 46, "instal": 47, "potenti": 47, "issu": 47, "robust": [50, 51], "creat": [50, 52], "evalu": [50, 52], "your": [50, 52, 55], "own": [50, 52, 55], "repositori": 54, "structur": 54, "program": 54, "languag": 54, "overview": 54, "data": 54, "class": 55, "log": 55, "compens": 55, "write": 55}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Control Methods": [[0, "control-methods"]], "Model Predictive Control (MPC)": [[1, "model-predictive-control-mpc"]], "Iterative Linear Quadratic Regulator (iLQR) MPC": [[2, "iterative-linear-quadratic-regulator-ilqr-mpc"]], "Policy-based Control": [[3, "policy-based-control"]], "Linear Quadratic Regulator (LQR)": [[4, "linear-quadratic-regulator-lqr"]], "Region of Attraction (RoA)": [[4, "region-of-attraction-roa"]], "References": [[4, "references"], [5, "references"], [6, "references"], [8, "references"], [9, "references"], [11, "references"], [12, "references"]], "Partial Feedback Linearization (PFL)": [[5, "partial-feedback-linearization-pfl"]], "Soft Actor Critic (SAC)": [[6, "soft-actor-critic-sac"]], "Trajectory Optimization": [[7, "trajectory-optimization"]], "Direct Collocation": [[8, "direct-collocation"]], "Iterative Linear Quadratic Regulator (iLQR)": [[9, "iterative-linear-quadratic-regulator-ilqr"]], "Trajectory Stabilization": [[10, "trajectory-stabilization"]], "Riccati Gains Stabilization": [[11, "riccati-gains-stabilization"]], "Time Varying Linear Quadrativ Regulator (TVLQR)": [[12, "time-varying-linear-quadrativ-regulator-tvlqr"]], "The Double Pendulum System": [[13, "the-double-pendulum-system"]], "Equation of Motion": [[13, "equation-of-motion"]], "Energy": [[13, "energy"]], "System Identification": [[13, "system-identification"]], "double_pendulum": [[14, "module-double_pendulum"]], "Subpackages": [[14, "subpackages"], [16, "subpackages"], [24, "subpackages"], [35, "subpackages"], [38, "subpackages"]], "double_pendulum.analysis": [[15, "module-double_pendulum.analysis"]], "Submodules": [[15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"], [23, "submodules"], [24, "submodules"], [25, "submodules"], [26, "submodules"], [27, "submodules"], [28, "submodules"], [29, "submodules"], [30, "submodules"], [31, "submodules"], [32, "submodules"], [33, "submodules"], [34, "submodules"], [36, "submodules"], [37, "submodules"], [38, "submodules"], [39, "submodules"]], "double_pendulum.analysis.benchmark": [[15, "module-double_pendulum.analysis.benchmark"]], "double_pendulum.analysis.benchmark_plot": [[15, "module-double_pendulum.analysis.benchmark_plot"]], "double_pendulum.analysis.benchmark_scores": [[15, "module-double_pendulum.analysis.benchmark_scores"]], "double_pendulum.analysis.leaderboard": [[15, "module-double_pendulum.analysis.leaderboard"]], "double_pendulum.analysis.utils": [[15, "module-double_pendulum.analysis.utils"]], "double_pendulum.controller": [[16, "module-double_pendulum.controller"]], "double_pendulum.controller.abstract_controller": [[16, "module-double_pendulum.controller.abstract_controller"]], "double_pendulum.controller.combined_controller": [[16, "module-double_pendulum.controller.combined_controller"]], "double_pendulum.controller.SAC": [[17, "module-double_pendulum.controller.SAC"]], "double_pendulum.controller.SAC.SAC_controller": [[17, "module-double_pendulum.controller.SAC.SAC_controller"]], "double_pendulum.controller.energy": [[18, "module-double_pendulum.controller.energy"]], "double_pendulum.controller.energy.energy_Xin": [[18, "module-double_pendulum.controller.energy.energy_Xin"]], "double_pendulum.controller.friction_compensation": [[19, "module-double_pendulum.controller.friction_compensation"]], "double_pendulum.controller.friction_compensation.friction_compensation_controller": [[19, "module-double_pendulum.controller.friction_compensation.friction_compensation_controller"]], "double_pendulum.controller.gamepad": [[20, "module-double_pendulum.controller.gamepad"]], "Controllers": [[20, "controllers"]], "double_pendulum.controller.gamepad.gamepad": [[20, "module-double_pendulum.controller.gamepad.gamepad"]], "double_pendulum.controller.gamepad.gamepad_controller": [[20, "module-double_pendulum.controller.gamepad.gamepad_controller"]], "Gamepad Controller": [[20, "gamepad-controller"]], "double_pendulum.controller.gravity_compensation": [[21, "module-double_pendulum.controller.gravity_compensation"]], "double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller": [[21, "module-double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller"]], "double_pendulum.controller.gravity_compensation.gravity_compensation_controller": [[21, "module-double_pendulum.controller.gravity_compensation.gravity_compensation_controller"]], "double_pendulum.controller.ilqr": [[22, "module-double_pendulum.controller.ilqr"]], "double_pendulum.controller.ilqr.ilqr_mpc_cpp": [[22, "module-double_pendulum.controller.ilqr.ilqr_mpc_cpp"]], "double_pendulum.controller.ilqr.paropt": [[22, "module-double_pendulum.controller.ilqr.paropt"]], "double_pendulum.controller.inverse_dynamics": [[23, "module-double_pendulum.controller.inverse_dynamics"]], "double_pendulum.controller.inverse_dynamics.computed_torque_controller": [[23, "module-double_pendulum.controller.inverse_dynamics.computed_torque_controller"]], "double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller": [[23, "module-double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller"]], "double_pendulum.controller.lqr": [[24, "module-double_pendulum.controller.lqr"]], "double_pendulum.controller.lqr.lqr": [[24, "module-double_pendulum.controller.lqr.lqr"]], "double_pendulum.controller.lqr.lqr_controller": [[24, "module-double_pendulum.controller.lqr.lqr_controller"]], "double_pendulum.controller.lqr.lqr_controller_drake": [[24, "module-double_pendulum.controller.lqr.lqr_controller_drake"]], "double_pendulum.controller.lqr.roa": [[25, "module-double_pendulum.controller.lqr.roa"]], "double_pendulum.controller.lqr.roa.check": [[25, "module-double_pendulum.controller.lqr.roa.check"]], "double_pendulum.controller.lqr.roa.coopt_interface": [[25, "double-pendulum-controller-lqr-roa-coopt-interface"]], "double_pendulum.controller.lqr.roa.ellipsoid": [[25, "module-double_pendulum.controller.lqr.roa.ellipsoid"]], "double_pendulum.controller.lqr.roa.prob_roa": [[25, "module-double_pendulum.controller.lqr.roa.prob_roa"]], "double_pendulum.controller.lqr.roa.roa_estimation": [[25, "double-pendulum-controller-lqr-roa-roa-estimation"]], "double_pendulum.controller.lqr.roa.roa_paropt": [[25, "double-pendulum-controller-lqr-roa-roa-paropt"]], "double_pendulum.controller.mcpilco": [[26, "module-double_pendulum.controller.mcpilco"]], "double_pendulum.controller.mcpilco.mcpilco_controller": [[26, "module-double_pendulum.controller.mcpilco.mcpilco_controller"]], "double_pendulum.controller.partial_feedback_linearization": [[27, "module-double_pendulum.controller.partial_feedback_linearization"]], "double_pendulum.controller.partial_feedback_linearization.pfl": [[27, "module-double_pendulum.controller.partial_feedback_linearization.pfl"]], "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl": [[27, "module-double_pendulum.controller.partial_feedback_linearization.symbolic_pfl"]], "double_pendulum.controller.pid": [[28, "module-double_pendulum.controller.pid"]], "double_pendulum.controller.pid.point_pid_controller": [[28, "module-double_pendulum.controller.pid.point_pid_controller"]], "double_pendulum.controller.pid.trajectory_pid_controller": [[28, "module-double_pendulum.controller.pid.trajectory_pid_controller"]], "double_pendulum.controller.trajectory_following": [[29, "module-double_pendulum.controller.trajectory_following"]], "double_pendulum.controller.trajectory_following.feed_forward": [[29, "module-double_pendulum.controller.trajectory_following.feed_forward"]], "double_pendulum.controller.trajectory_following.trajectory_controller": [[29, "module-double_pendulum.controller.trajectory_following.trajectory_controller"]], "double_pendulum.controller.tvlqr": [[30, "module-double_pendulum.controller.tvlqr"]], "double_pendulum.controller.tvlqr.tvlqr_controller": [[30, "module-double_pendulum.controller.tvlqr.tvlqr_controller"]], "double_pendulum.controller.tvlqr.tvlqr_controller_drake": [[30, "module-double_pendulum.controller.tvlqr.tvlqr_controller_drake"]], "double_pendulum.experiments": [[31, "module-double_pendulum.experiments"]], "double_pendulum.experiments.experimental_utils": [[31, "module-double_pendulum.experiments.experimental_utils"]], "double_pendulum.experiments.hardware_control_loop_mjbots": [[31, "double-pendulum-experiments-hardware-control-loop-mjbots"]], "double_pendulum.experiments.hardware_control_loop_tmotors": [[31, "module-double_pendulum.experiments.hardware_control_loop_tmotors"]], "double_pendulum.experiments.performance_profiler": [[31, "module-double_pendulum.experiments.performance_profiler"]], "double_pendulum.experiments.video_recording": [[31, "module-double_pendulum.experiments.video_recording"]], "double_pendulum.model": [[32, "module-double_pendulum.model"]], "double_pendulum.model.friction_matrix": [[32, "module-double_pendulum.model.friction_matrix"]], "double_pendulum.model.model_parameters": [[32, "module-double_pendulum.model.model_parameters"]], "double_pendulum.model.plant": [[32, "module-double_pendulum.model.plant"]], "double_pendulum.model.symbolic_plant": [[32, "module-double_pendulum.model.symbolic_plant"]], "double_pendulum.simulation": [[33, "module-double_pendulum.simulation"]], "double_pendulum.simulation.gym_env": [[33, "module-double_pendulum.simulation.gym_env"]], "double_pendulum.simulation.simulation": [[33, "module-double_pendulum.simulation.simulation"]], "double_pendulum.simulation.visualization": [[33, "module-double_pendulum.simulation.visualization"]], "double_pendulum.system_identification": [[34, "module-double_pendulum.system_identification"]], "double_pendulum.system_identification.data_prep": [[34, "module-double_pendulum.system_identification.data_prep"]], "double_pendulum.system_identification.dynamics": [[34, "module-double_pendulum.system_identification.dynamics"]], "double_pendulum.system_identification.loss": [[34, "module-double_pendulum.system_identification.loss"]], "double_pendulum.system_identification.plotting": [[34, "module-double_pendulum.system_identification.plotting"]], "double_pendulum.system_identification.sys_id": [[34, "module-double_pendulum.system_identification.sys_id"]], "double_pendulum.trajectory_optimization": [[35, "module-double_pendulum.trajectory_optimization"]], "double_pendulum.trajectory_optimization.direct_collocation": [[36, "module-double_pendulum.trajectory_optimization.direct_collocation"]], "double_pendulum.trajectory_optimization.direct_collocation.dircol_utils": [[36, "module-double_pendulum.trajectory_optimization.direct_collocation.dircol_utils"]], "double_pendulum.trajectory_optimization.direct_collocation.direct_collocation": [[36, "double-pendulum-trajectory-optimization-direct-collocation-direct-collocation"]], "double_pendulum.trajectory_optimization.ilqr": [[37, "module-double_pendulum.trajectory_optimization.ilqr"]], "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp": [[37, "module-double_pendulum.trajectory_optimization.ilqr.ilqr_cpp"]], "double_pendulum.trajectory_optimization.ilqr.paropt": [[37, "module-double_pendulum.trajectory_optimization.ilqr.paropt"]], "double_pendulum.utils": [[38, "module-double_pendulum.utils"]], "double_pendulum.utils.cmaes_controller_par_optimizer": [[38, "module-double_pendulum.utils.cmaes_controller_par_optimizer"]], "double_pendulum.utils.csv_trajectory": [[38, "module-double_pendulum.utils.csv_trajectory"]], "double_pendulum.utils.optimization": [[38, "module-double_pendulum.utils.optimization"]], "double_pendulum.utils.pcw_polynomial": [[38, "module-double_pendulum.utils.pcw_polynomial"]], "double_pendulum.utils.plotting": [[38, "module-double_pendulum.utils.plotting"]], "double_pendulum.utils.urdfs": [[38, "module-double_pendulum.utils.urdfs"]], "double_pendulum.utils.wrap_angles": [[38, "module-double_pendulum.utils.wrap_angles"]], "double_pendulum.utils.filters": [[39, "module-double_pendulum.utils.filters"]], "double_pendulum.utils.filters.butterworth": [[39, "module-double_pendulum.utils.filters.butterworth"]], "double_pendulum.utils.filters.fast_fourier_transform": [[39, "module-double_pendulum.utils.filters.fast_fourier_transform"]], "double_pendulum.utils.filters.identity": [[39, "module-double_pendulum.utils.filters.identity"]], "double_pendulum.utils.filters.kalman_filter": [[39, "module-double_pendulum.utils.filters.kalman_filter"]], "double_pendulum.utils.filters.low_pass": [[39, "module-double_pendulum.utils.filters.low_pass"]], "double_pendulum.utils.filters.running_mean": [[39, "module-double_pendulum.utils.filters.running_mean"]], "double_pendulum.utils.filters.savitzky_golay": [[39, "module-double_pendulum.utils.filters.savitzky_golay"]], "double_pendulum.utils.filters.unscented_kalman_filter": [[39, "module-double_pendulum.utils.filters.unscented_kalman_filter"]], "Hardware": [[40, "hardware"]], "Hardware Experiment Guide": [[41, "hardware-experiment-guide"]], "Safety Notes": [[41, "safety-notes"]], "Motors": [[42, "motors"]], "MJBots": [[43, "mjbots"]], "Initial Setup": [[43, "initial-setup"]], "Communication": [[43, "communication"], [44, "communication"]], "T-Motor (AK-80-6)": [[44, "t-motor-ak-80-6"]], "Physical Parameters of the Actuator": [[44, "physical-parameters-of-the-actuator"]], "Initial Motor Setup": [[44, "initial-motor-setup"]], "Tutorials": [[44, "tutorials"]], "Instructions: R-Link Config Tool": [[44, "instructions-r-link-config-tool"]], "Debugging": [[44, "debugging"]], "CAN Bus wiring": [[44, "can-bus-wiring"]], "Setting up the CAN interface": [[44, "setting-up-the-can-interface"]], "Testing Motor Connection": [[44, "testing-motor-connection"]], "Python Interface": [[44, "python-interface"]], "Internal PD-Controller": [[44, "internal-pd-controller"]], "Hardware & Testbench Description": [[45, "hardware-testbench-description"]], "Testbench Description": [[45, "testbench-description"]], "Assembly Instructions": [[45, "assembly-instructions"]], "Electrical Setup": [[45, "electrical-setup"]], "Wiring": [[45, "wiring"]], "backEMF": [[45, "backemf"]], "Welcome to Double Pendulum\u2019s documentation!": [[46, "welcome-to-double-pendulum-s-documentation"]], "Table of Contents": [[46, null]], "Indices and tables": [[46, "indices-and-tables"]], "Installation": [[47, "installation"]], "Potential Issues": [[47, "potential-issues"]], "Leaderboards": [[48, "leaderboards"]], "Hardware Leaderboard": [[49, "hardware-leaderboard"]], "Robustness Leaderboard": [[50, "robustness-leaderboard"]], "Creating the Leaderboard": [[50, "creating-the-leaderboard"], [52, "creating-the-leaderboard"]], "Leaderboard Parameters": [[50, "leaderboard-parameters"], [52, "leaderboard-parameters"]], "Evaluating your own controller": [[50, "evaluating-your-own-controller"], [52, "evaluating-your-own-controller"]], "Controller Robustness": [[51, "controller-robustness"]], "Simulation Leaderboard": [[52, "simulation-leaderboard"]], "Repository Structure": [[54, "repository-structure"]], "Programming Language": [[54, "programming-language"]], "Repository Overview": [[54, "repository-overview"]], "Model Parameters": [[54, "model-parameters"]], "Trajectory data": [[54, "trajectory-data"]], "Controller Class": [[55, "controller-class"]], "Class Methods": [[55, "class-methods"]], "Logging, Filtering and Compensation": [[55, "logging-filtering-and-compensation"]], "Writing your own controller": [[55, "writing-your-own-controller"]]}, "indexentries": {"double_pendulum": [[14, "module-double_pendulum"]], "module": [[14, "module-double_pendulum"], [15, "module-double_pendulum.analysis"], [15, "module-double_pendulum.analysis.benchmark"], [15, "module-double_pendulum.analysis.benchmark_plot"], [15, "module-double_pendulum.analysis.benchmark_scores"], [15, "module-double_pendulum.analysis.leaderboard"], [15, "module-double_pendulum.analysis.utils"], [16, "module-double_pendulum.controller"], [16, "module-double_pendulum.controller.abstract_controller"], [16, "module-double_pendulum.controller.combined_controller"], [17, "module-double_pendulum.controller.SAC"], [17, "module-double_pendulum.controller.SAC.SAC_controller"], [18, "module-double_pendulum.controller.energy"], [18, "module-double_pendulum.controller.energy.energy_Xin"], [19, "module-double_pendulum.controller.friction_compensation"], [19, "module-double_pendulum.controller.friction_compensation.friction_compensation_controller"], [20, "module-double_pendulum.controller.gamepad"], [20, "module-double_pendulum.controller.gamepad.gamepad"], [20, "module-double_pendulum.controller.gamepad.gamepad_controller"], [21, "module-double_pendulum.controller.gravity_compensation"], [21, "module-double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller"], [21, "module-double_pendulum.controller.gravity_compensation.gravity_compensation_controller"], [22, "module-double_pendulum.controller.ilqr"], [22, "module-double_pendulum.controller.ilqr.ilqr_mpc_cpp"], [22, "module-double_pendulum.controller.ilqr.paropt"], [23, "module-double_pendulum.controller.inverse_dynamics"], [23, "module-double_pendulum.controller.inverse_dynamics.computed_torque_controller"], [23, "module-double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller"], [24, "module-double_pendulum.controller.lqr"], [24, "module-double_pendulum.controller.lqr.lqr"], [24, "module-double_pendulum.controller.lqr.lqr_controller"], [24, "module-double_pendulum.controller.lqr.lqr_controller_drake"], [25, "module-double_pendulum.controller.lqr.roa"], [25, "module-double_pendulum.controller.lqr.roa.check"], [25, "module-double_pendulum.controller.lqr.roa.ellipsoid"], [25, "module-double_pendulum.controller.lqr.roa.prob_roa"], [26, "module-double_pendulum.controller.mcpilco"], [26, "module-double_pendulum.controller.mcpilco.mcpilco_controller"], [27, "module-double_pendulum.controller.partial_feedback_linearization"], [27, "module-double_pendulum.controller.partial_feedback_linearization.pfl"], [27, "module-double_pendulum.controller.partial_feedback_linearization.symbolic_pfl"], [28, "module-double_pendulum.controller.pid"], [28, "module-double_pendulum.controller.pid.point_pid_controller"], [28, "module-double_pendulum.controller.pid.trajectory_pid_controller"], [29, "module-double_pendulum.controller.trajectory_following"], [29, "module-double_pendulum.controller.trajectory_following.feed_forward"], [29, "module-double_pendulum.controller.trajectory_following.trajectory_controller"], [30, "module-double_pendulum.controller.tvlqr"], [30, "module-double_pendulum.controller.tvlqr.tvlqr_controller"], [30, "module-double_pendulum.controller.tvlqr.tvlqr_controller_drake"], [31, "module-double_pendulum.experiments"], [31, "module-double_pendulum.experiments.experimental_utils"], [31, "module-double_pendulum.experiments.hardware_control_loop_tmotors"], [31, "module-double_pendulum.experiments.performance_profiler"], [31, "module-double_pendulum.experiments.video_recording"], [32, "module-double_pendulum.model"], [32, "module-double_pendulum.model.friction_matrix"], [32, "module-double_pendulum.model.model_parameters"], [32, "module-double_pendulum.model.plant"], [32, "module-double_pendulum.model.symbolic_plant"], [33, "module-double_pendulum.simulation"], [33, "module-double_pendulum.simulation.gym_env"], [33, "module-double_pendulum.simulation.simulation"], [33, "module-double_pendulum.simulation.visualization"], [34, "module-double_pendulum.system_identification"], [34, "module-double_pendulum.system_identification.data_prep"], [34, "module-double_pendulum.system_identification.dynamics"], [34, "module-double_pendulum.system_identification.loss"], [34, "module-double_pendulum.system_identification.plotting"], [34, "module-double_pendulum.system_identification.sys_id"], [35, "module-double_pendulum.trajectory_optimization"], [36, "module-double_pendulum.trajectory_optimization.direct_collocation"], [36, "module-double_pendulum.trajectory_optimization.direct_collocation.dircol_utils"], [37, "module-double_pendulum.trajectory_optimization.ilqr"], [37, "module-double_pendulum.trajectory_optimization.ilqr.ilqr_cpp"], [37, "module-double_pendulum.trajectory_optimization.ilqr.paropt"], [38, "module-double_pendulum.utils"], [38, "module-double_pendulum.utils.cmaes_controller_par_optimizer"], [38, "module-double_pendulum.utils.csv_trajectory"], [38, "module-double_pendulum.utils.optimization"], [38, "module-double_pendulum.utils.pcw_polynomial"], [38, "module-double_pendulum.utils.plotting"], [38, "module-double_pendulum.utils.urdfs"], [38, "module-double_pendulum.utils.wrap_angles"], [39, "module-double_pendulum.utils.filters"], [39, "module-double_pendulum.utils.filters.butterworth"], [39, "module-double_pendulum.utils.filters.fast_fourier_transform"], [39, "module-double_pendulum.utils.filters.identity"], [39, "module-double_pendulum.utils.filters.kalman_filter"], [39, "module-double_pendulum.utils.filters.low_pass"], [39, "module-double_pendulum.utils.filters.running_mean"], [39, "module-double_pendulum.utils.filters.savitzky_golay"], [39, "module-double_pendulum.utils.filters.unscented_kalman_filter"]], "benchmark() (double_pendulum.analysis.benchmark.benchmarker method)": [[15, "double_pendulum.analysis.benchmark.benchmarker.benchmark"]], "benchmarker (class in double_pendulum.analysis.benchmark)": [[15, "double_pendulum.analysis.benchmark.benchmarker"]], "check_delay_robustness() (double_pendulum.analysis.benchmark.benchmarker method)": [[15, "double_pendulum.analysis.benchmark.benchmarker.check_delay_robustness"]], "check_goal_success() (double_pendulum.analysis.benchmark.benchmarker method)": [[15, "double_pendulum.analysis.benchmark.benchmarker.check_goal_success"]], "check_meas_noise_robustness() (double_pendulum.analysis.benchmark.benchmarker method)": [[15, "double_pendulum.analysis.benchmark.benchmarker.check_meas_noise_robustness"]], "check_modelpar_robustness() (double_pendulum.analysis.benchmark.benchmarker method)": [[15, "double_pendulum.analysis.benchmark.benchmarker.check_modelpar_robustness"]], "check_perturbation_robustness() (double_pendulum.analysis.benchmark.benchmarker method)": [[15, "double_pendulum.analysis.benchmark.benchmarker.check_perturbation_robustness"]], "check_unoise_robustness() (double_pendulum.analysis.benchmark.benchmarker method)": [[15, "double_pendulum.analysis.benchmark.benchmarker.check_unoise_robustness"]], "check_uresponsiveness_robustness() (double_pendulum.analysis.benchmark.benchmarker method)": [[15, "double_pendulum.analysis.benchmark.benchmarker.check_uresponsiveness_robustness"]], "compute_cost() (double_pendulum.analysis.benchmark.benchmarker method)": [[15, "double_pendulum.analysis.benchmark.benchmarker.compute_cost"]], "compute_ref_cost() (double_pendulum.analysis.benchmark.benchmarker method)": [[15, "double_pendulum.analysis.benchmark.benchmarker.compute_ref_cost"]], "compute_success_measure() (double_pendulum.analysis.benchmark.benchmarker method)": [[15, "double_pendulum.analysis.benchmark.benchmarker.compute_success_measure"]], "double_pendulum.analysis": [[15, "module-double_pendulum.analysis"]], "double_pendulum.analysis.benchmark": [[15, "module-double_pendulum.analysis.benchmark"]], "double_pendulum.analysis.benchmark_plot": [[15, "module-double_pendulum.analysis.benchmark_plot"]], "double_pendulum.analysis.benchmark_scores": [[15, "module-double_pendulum.analysis.benchmark_scores"]], "double_pendulum.analysis.leaderboard": [[15, "module-double_pendulum.analysis.leaderboard"]], "double_pendulum.analysis.utils": [[15, "module-double_pendulum.analysis.utils"]], "get_delay_score() (in module double_pendulum.analysis.benchmark_scores)": [[15, "double_pendulum.analysis.benchmark_scores.get_delay_score"]], "get_energy() (in module double_pendulum.analysis.leaderboard)": [[15, "double_pendulum.analysis.leaderboard.get_energy"]], "get_integrated_torque() (in module double_pendulum.analysis.leaderboard)": [[15, "double_pendulum.analysis.leaderboard.get_integrated_torque"]], "get_max_tau() (in module double_pendulum.analysis.leaderboard)": [[15, "double_pendulum.analysis.leaderboard.get_max_tau"]], "get_measurement_noise_score() (in module double_pendulum.analysis.benchmark_scores)": [[15, "double_pendulum.analysis.benchmark_scores.get_measurement_noise_score"]], "get_model_score() (in module double_pendulum.analysis.benchmark_scores)": [[15, "double_pendulum.analysis.benchmark_scores.get_model_score"]], "get_par_list() (in module double_pendulum.analysis.utils)": [[15, "double_pendulum.analysis.utils.get_par_list"]], "get_scores() (in module double_pendulum.analysis.benchmark_scores)": [[15, "double_pendulum.analysis.benchmark_scores.get_scores"]], "get_swingup_time() (in module double_pendulum.analysis.leaderboard)": [[15, "double_pendulum.analysis.leaderboard.get_swingup_time"]], "get_tau_smoothness() (in module double_pendulum.analysis.leaderboard)": [[15, "double_pendulum.analysis.leaderboard.get_tau_smoothness"]], "get_torque_cost() (in module double_pendulum.analysis.leaderboard)": [[15, "double_pendulum.analysis.leaderboard.get_torque_cost"]], "get_unoise_score() (in module double_pendulum.analysis.benchmark_scores)": [[15, "double_pendulum.analysis.benchmark_scores.get_unoise_score"]], "get_uresponsiveness_score() (in module double_pendulum.analysis.benchmark_scores)": [[15, "double_pendulum.analysis.benchmark_scores.get_uresponsiveness_score"]], "get_velocity_cost() (in module double_pendulum.analysis.leaderboard)": [[15, "double_pendulum.analysis.leaderboard.get_velocity_cost"]], "leaderboard_scores() (in module double_pendulum.analysis.leaderboard)": [[15, "double_pendulum.analysis.leaderboard.leaderboard_scores"]], "plot_benchmark_results() (in module double_pendulum.analysis.benchmark_plot)": [[15, "double_pendulum.analysis.benchmark_plot.plot_benchmark_results"]], "plot_model_robustness_multi() (in module double_pendulum.analysis.benchmark_plot)": [[15, "double_pendulum.analysis.benchmark_plot.plot_model_robustness_multi"]], "set_cost_par() (double_pendulum.analysis.benchmark.benchmarker method)": [[15, "double_pendulum.analysis.benchmark.benchmarker.set_cost_par"]], "set_init_traj() (double_pendulum.analysis.benchmark.benchmarker method)": [[15, "double_pendulum.analysis.benchmark.benchmarker.set_init_traj"]], "set_model_parameter() (double_pendulum.analysis.benchmark.benchmarker method)": [[15, "double_pendulum.analysis.benchmark.benchmarker.set_model_parameter"]], "simulate_and_get_cost() (double_pendulum.analysis.benchmark.benchmarker method)": [[15, "double_pendulum.analysis.benchmark.benchmarker.simulate_and_get_cost"]], "abstractcontroller (class in double_pendulum.controller.abstract_controller)": [[16, "double_pendulum.controller.abstract_controller.AbstractController"]], "combinedcontroller (class in double_pendulum.controller.combined_controller)": [[16, "double_pendulum.controller.combined_controller.CombinedController"]], "simultaneouscontrollers (class in double_pendulum.controller.combined_controller)": [[16, "double_pendulum.controller.combined_controller.SimultaneousControllers"]], "double_pendulum.controller": [[16, "module-double_pendulum.controller"]], "double_pendulum.controller.abstract_controller": [[16, "module-double_pendulum.controller.abstract_controller"]], "double_pendulum.controller.combined_controller": [[16, "module-double_pendulum.controller.combined_controller"]], "filter_measurement() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[16, "double_pendulum.controller.abstract_controller.AbstractController.filter_measurement"]], "get_control_output() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[16, "double_pendulum.controller.abstract_controller.AbstractController.get_control_output"]], "get_control_output_() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[16, "double_pendulum.controller.abstract_controller.AbstractController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.combined_controller.combinedcontroller method)": [[16, "double_pendulum.controller.combined_controller.CombinedController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.combined_controller.simultaneouscontrollers method)": [[16, "double_pendulum.controller.combined_controller.SimultaneousControllers.get_control_output_"]], "get_forecast() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[16, "double_pendulum.controller.abstract_controller.AbstractController.get_forecast"]], "get_forecast() (double_pendulum.controller.combined_controller.combinedcontroller method)": [[16, "double_pendulum.controller.combined_controller.CombinedController.get_forecast"]], "get_forecast() (double_pendulum.controller.combined_controller.simultaneouscontrollers method)": [[16, "double_pendulum.controller.combined_controller.SimultaneousControllers.get_forecast"]], "get_friction_torque() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[16, "double_pendulum.controller.abstract_controller.AbstractController.get_friction_torque"]], "get_gravity_torque() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[16, "double_pendulum.controller.abstract_controller.AbstractController.get_gravity_torque"]], "get_init_trajectory() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[16, "double_pendulum.controller.abstract_controller.AbstractController.get_init_trajectory"]], "get_init_trajectory() (double_pendulum.controller.combined_controller.combinedcontroller method)": [[16, "double_pendulum.controller.combined_controller.CombinedController.get_init_trajectory"]], "get_init_trajectory() (double_pendulum.controller.combined_controller.simultaneouscontrollers method)": [[16, "double_pendulum.controller.combined_controller.SimultaneousControllers.get_init_trajectory"]], "init() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[16, "double_pendulum.controller.abstract_controller.AbstractController.init"]], "init_() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[16, "double_pendulum.controller.abstract_controller.AbstractController.init_"]], "init_() (double_pendulum.controller.combined_controller.combinedcontroller method)": [[16, "double_pendulum.controller.combined_controller.CombinedController.init_"]], "init_() (double_pendulum.controller.combined_controller.simultaneouscontrollers method)": [[16, "double_pendulum.controller.combined_controller.SimultaneousControllers.init_"]], "init_filter() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[16, "double_pendulum.controller.abstract_controller.AbstractController.init_filter"]], "reset() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[16, "double_pendulum.controller.abstract_controller.AbstractController.reset"]], "reset_() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[16, "double_pendulum.controller.abstract_controller.AbstractController.reset_"]], "reset_() (double_pendulum.controller.combined_controller.combinedcontroller method)": [[16, "double_pendulum.controller.combined_controller.CombinedController.reset_"]], "save() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[16, "double_pendulum.controller.abstract_controller.AbstractController.save"]], "save_() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[16, "double_pendulum.controller.abstract_controller.AbstractController.save_"]], "save_() (double_pendulum.controller.combined_controller.combinedcontroller method)": [[16, "double_pendulum.controller.combined_controller.CombinedController.save_"]], "set_filter_args() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[16, "double_pendulum.controller.abstract_controller.AbstractController.set_filter_args"]], "set_friction_compensation() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[16, "double_pendulum.controller.abstract_controller.AbstractController.set_friction_compensation"]], "set_goal() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[16, "double_pendulum.controller.abstract_controller.AbstractController.set_goal"]], "set_goal() (double_pendulum.controller.combined_controller.combinedcontroller method)": [[16, "double_pendulum.controller.combined_controller.CombinedController.set_goal"]], "set_goal() (double_pendulum.controller.combined_controller.simultaneouscontrollers method)": [[16, "double_pendulum.controller.combined_controller.SimultaneousControllers.set_goal"]], "set_gravity_compensation() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[16, "double_pendulum.controller.abstract_controller.AbstractController.set_gravity_compensation"]], "set_parameters() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[16, "double_pendulum.controller.abstract_controller.AbstractController.set_parameters"]], "set_parameters() (double_pendulum.controller.combined_controller.combinedcontroller method)": [[16, "double_pendulum.controller.combined_controller.CombinedController.set_parameters"]], "set_parameters() (double_pendulum.controller.combined_controller.simultaneouscontrollers method)": [[16, "double_pendulum.controller.combined_controller.SimultaneousControllers.set_parameters"]], "set_start() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[16, "double_pendulum.controller.abstract_controller.AbstractController.set_start"]], "set_start() (double_pendulum.controller.combined_controller.combinedcontroller method)": [[16, "double_pendulum.controller.combined_controller.CombinedController.set_start"]], "set_start() (double_pendulum.controller.combined_controller.simultaneouscontrollers method)": [[16, "double_pendulum.controller.combined_controller.SimultaneousControllers.set_start"]], "saccontroller (class in double_pendulum.controller.sac.sac_controller)": [[17, "double_pendulum.controller.SAC.SAC_controller.SACController"]], "double_pendulum.controller.sac": [[17, "module-double_pendulum.controller.SAC"]], "double_pendulum.controller.sac.sac_controller": [[17, "module-double_pendulum.controller.SAC.SAC_controller"]], "get_control_output_() (double_pendulum.controller.sac.sac_controller.saccontroller method)": [[17, "double_pendulum.controller.SAC.SAC_controller.SACController.get_control_output_"]], "energycontroller (class in double_pendulum.controller.energy.energy_xin)": [[18, "double_pendulum.controller.energy.energy_Xin.EnergyController"]], "check_parameters() (double_pendulum.controller.energy.energy_xin.energycontroller method)": [[18, "double_pendulum.controller.energy.energy_Xin.EnergyController.check_parameters"]], "double_pendulum.controller.energy": [[18, "module-double_pendulum.controller.energy"]], "double_pendulum.controller.energy.energy_xin": [[18, "module-double_pendulum.controller.energy.energy_Xin"]], "get_control_output_() (double_pendulum.controller.energy.energy_xin.energycontroller method)": [[18, "double_pendulum.controller.energy.energy_Xin.EnergyController.get_control_output_"]], "init_() (double_pendulum.controller.energy.energy_xin.energycontroller method)": [[18, "double_pendulum.controller.energy.energy_Xin.EnergyController.init_"]], "kd_func() (in module double_pendulum.controller.energy.energy_xin)": [[18, "double_pendulum.controller.energy.energy_Xin.kd_func"]], "save_() (double_pendulum.controller.energy.energy_xin.energycontroller method)": [[18, "double_pendulum.controller.energy.energy_Xin.EnergyController.save_"]], "set_goal() (double_pendulum.controller.energy.energy_xin.energycontroller method)": [[18, "double_pendulum.controller.energy.energy_Xin.EnergyController.set_goal"]], "set_parameters() (double_pendulum.controller.energy.energy_xin.energycontroller method)": [[18, "double_pendulum.controller.energy.energy_Xin.EnergyController.set_parameters"]], "frictioncompensationcontroller (class in double_pendulum.controller.friction_compensation.friction_compensation_controller)": [[19, "double_pendulum.controller.friction_compensation.friction_compensation_controller.FrictionCompensationController"]], "double_pendulum.controller.friction_compensation": [[19, "module-double_pendulum.controller.friction_compensation"]], "double_pendulum.controller.friction_compensation.friction_compensation_controller": [[19, "module-double_pendulum.controller.friction_compensation.friction_compensation_controller"]], "get_control_output_() (double_pendulum.controller.friction_compensation.friction_compensation_controller.frictioncompensationcontroller method)": [[19, "double_pendulum.controller.friction_compensation.friction_compensation_controller.FrictionCompensationController.get_control_output_"]], "save_() (double_pendulum.controller.friction_compensation.friction_compensation_controller.frictioncompensationcontroller method)": [[19, "double_pendulum.controller.friction_compensation.friction_compensation_controller.FrictionCompensationController.save_"]], "gamepad (class in double_pendulum.controller.gamepad.gamepad)": [[20, "double_pendulum.controller.gamepad.gamepad.GamePad"]], "gamepadcontroller (class in double_pendulum.controller.gamepad.gamepad_controller)": [[20, "double_pendulum.controller.gamepad.gamepad_controller.GamepadController"]], "double_pendulum.controller.gamepad": [[20, "module-double_pendulum.controller.gamepad"]], "double_pendulum.controller.gamepad.gamepad": [[20, "module-double_pendulum.controller.gamepad.gamepad"]], "double_pendulum.controller.gamepad.gamepad_controller": [[20, "module-double_pendulum.controller.gamepad.gamepad_controller"]], "get_control_output_() (double_pendulum.controller.gamepad.gamepad_controller.gamepadcontroller method)": [[20, "double_pendulum.controller.gamepad.gamepad_controller.GamepadController.get_control_output_"]], "read() (double_pendulum.controller.gamepad.gamepad.gamepad method)": [[20, "double_pendulum.controller.gamepad.gamepad.GamePad.read"]], "gravitycompensationcontroller (class in double_pendulum.controller.gravity_compensation.gravity_compensation_controller)": [[21, "double_pendulum.controller.gravity_compensation.gravity_compensation_controller.GravityCompensationController"]], "pidgravitycompensationcontroller (class in double_pendulum.controller.gravity_compensation.pid_gravity_compensation_controller)": [[21, "double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller.PIDGravityCompensationController"]], "double_pendulum.controller.gravity_compensation": [[21, "module-double_pendulum.controller.gravity_compensation"]], "double_pendulum.controller.gravity_compensation.pid_gravity_compensation_controller": [[21, "module-double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller"]], "double_pendulum.controller.gravity_compensation.gravity_compensation_controller": [[21, "module-double_pendulum.controller.gravity_compensation.gravity_compensation_controller"]], "get_control_output_() (double_pendulum.controller.gravity_compensation.pid_gravity_compensation_controller.pidgravitycompensationcontroller method)": [[21, "double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller.PIDGravityCompensationController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.gravity_compensation.gravity_compensation_controller.gravitycompensationcontroller method)": [[21, "double_pendulum.controller.gravity_compensation.gravity_compensation_controller.GravityCompensationController.get_control_output_"]], "init_() (double_pendulum.controller.gravity_compensation.pid_gravity_compensation_controller.pidgravitycompensationcontroller method)": [[21, "double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller.PIDGravityCompensationController.init_"]], "save_() (double_pendulum.controller.gravity_compensation.pid_gravity_compensation_controller.pidgravitycompensationcontroller method)": [[21, "double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller.PIDGravityCompensationController.save_"]], "save_() (double_pendulum.controller.gravity_compensation.gravity_compensation_controller.gravitycompensationcontroller method)": [[21, "double_pendulum.controller.gravity_compensation.gravity_compensation_controller.GravityCompensationController.save_"]], "set_goal() (double_pendulum.controller.gravity_compensation.pid_gravity_compensation_controller.pidgravitycompensationcontroller method)": [[21, "double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller.PIDGravityCompensationController.set_goal"]], "set_parameters() (double_pendulum.controller.gravity_compensation.pid_gravity_compensation_controller.pidgravitycompensationcontroller method)": [[21, "double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller.PIDGravityCompensationController.set_parameters"]], "ilqrmpccppcontroller (class in double_pendulum.controller.ilqr.ilqr_mpc_cpp)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController"]], "compute_init_traj() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.compute_init_traj"]], "double_pendulum.controller.ilqr": [[22, "module-double_pendulum.controller.ilqr"]], "double_pendulum.controller.ilqr.ilqr_mpc_cpp": [[22, "module-double_pendulum.controller.ilqr.ilqr_mpc_cpp"]], "double_pendulum.controller.ilqr.paropt": [[22, "module-double_pendulum.controller.ilqr.paropt"]], "get_control_output_() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.get_control_output_"]], "get_forecast() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.get_forecast"]], "get_init_trajectory() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.get_init_trajectory"]], "ilqrmpc_swingup_loss (class in double_pendulum.controller.ilqr.paropt)": [[22, "double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss"]], "init() (double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss method)": [[22, "double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss.init"]], "init_() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.init_"]], "load_init_traj() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.load_init_traj"]], "rescale_pars() (double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss method)": [[22, "double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss.rescale_pars"]], "save_() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.save_"]], "set_cost_parameters() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.set_cost_parameters"]], "set_cost_parameters_() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.set_cost_parameters_"]], "set_final_cost_parameters() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.set_final_cost_parameters"]], "set_goal() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.set_goal"]], "set_model_parameters() (double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss method)": [[22, "double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss.set_model_parameters"]], "set_parameters() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.set_parameters"]], "set_parameters() (double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss method)": [[22, "double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss.set_parameters"]], "set_start() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.set_start"]], "unscale_pars() (double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss method)": [[22, "double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss.unscale_pars"]], "computedtorquecontroller (class in double_pendulum.controller.inverse_dynamics.computed_torque_controller)": [[23, "double_pendulum.controller.inverse_dynamics.computed_torque_controller.ComputedTorqueController"]], "inversedynamicscontroller (class in double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller)": [[23, "double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller.InverseDynamicsController"]], "double_pendulum.controller.inverse_dynamics": [[23, "module-double_pendulum.controller.inverse_dynamics"]], "double_pendulum.controller.inverse_dynamics.computed_torque_controller": [[23, "module-double_pendulum.controller.inverse_dynamics.computed_torque_controller"]], "double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller": [[23, "module-double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller"]], "get_control_output_() (double_pendulum.controller.inverse_dynamics.computed_torque_controller.computedtorquecontroller method)": [[23, "double_pendulum.controller.inverse_dynamics.computed_torque_controller.ComputedTorqueController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller.inversedynamicscontroller method)": [[23, "double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller.InverseDynamicsController.get_control_output_"]], "get_init_trajectory() (double_pendulum.controller.inverse_dynamics.computed_torque_controller.computedtorquecontroller method)": [[23, "double_pendulum.controller.inverse_dynamics.computed_torque_controller.ComputedTorqueController.get_init_trajectory"]], "get_init_trajectory() (double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller.inversedynamicscontroller method)": [[23, "double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller.InverseDynamicsController.get_init_trajectory"]], "init_() (double_pendulum.controller.inverse_dynamics.computed_torque_controller.computedtorquecontroller method)": [[23, "double_pendulum.controller.inverse_dynamics.computed_torque_controller.ComputedTorqueController.init_"]], "init_() (double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller.inversedynamicscontroller method)": [[23, "double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller.InverseDynamicsController.init_"]], "save_() (double_pendulum.controller.inverse_dynamics.computed_torque_controller.computedtorquecontroller method)": [[23, "double_pendulum.controller.inverse_dynamics.computed_torque_controller.ComputedTorqueController.save_"]], "save_() (double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller.inversedynamicscontroller method)": [[23, "double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller.InverseDynamicsController.save_"]], "set_parameters() (double_pendulum.controller.inverse_dynamics.computed_torque_controller.computedtorquecontroller method)": [[23, "double_pendulum.controller.inverse_dynamics.computed_torque_controller.ComputedTorqueController.set_parameters"]], "lqrcontroller (class in double_pendulum.controller.lqr.lqr_controller)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController"]], "lqrcontroller (class in double_pendulum.controller.lqr.lqr_controller_drake)": [[24, "double_pendulum.controller.lqr.lqr_controller_drake.LQRController"]], "lqrcontroller_nonsymbolic (class in double_pendulum.controller.lqr.lqr_controller)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController_nonsymbolic"]], "dlqr() (in module double_pendulum.controller.lqr.lqr)": [[24, "double_pendulum.controller.lqr.lqr.dlqr"]], "double_pendulum.controller.lqr": [[24, "module-double_pendulum.controller.lqr"]], "double_pendulum.controller.lqr.lqr": [[24, "module-double_pendulum.controller.lqr.lqr"]], "double_pendulum.controller.lqr.lqr_controller": [[24, "module-double_pendulum.controller.lqr.lqr_controller"]], "double_pendulum.controller.lqr.lqr_controller_drake": [[24, "module-double_pendulum.controller.lqr.lqr_controller_drake"]], "get_control_output_() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller_nonsymbolic method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController_nonsymbolic.get_control_output_"]], "get_control_output_() (double_pendulum.controller.lqr.lqr_controller_drake.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller_drake.LQRController.get_control_output_"]], "init_() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController.init_"]], "init_() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller_nonsymbolic method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController_nonsymbolic.init_"]], "init_() (double_pendulum.controller.lqr.lqr_controller_drake.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller_drake.LQRController.init_"]], "iterative_riccati() (in module double_pendulum.controller.lqr.lqr)": [[24, "double_pendulum.controller.lqr.lqr.iterative_riccati"]], "lqr() (in module double_pendulum.controller.lqr.lqr)": [[24, "double_pendulum.controller.lqr.lqr.lqr"]], "save_() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController.save_"]], "save_() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller_nonsymbolic method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController_nonsymbolic.save_"]], "save_() (double_pendulum.controller.lqr.lqr_controller_drake.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller_drake.LQRController.save_"]], "set_cost_matrices() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController.set_cost_matrices"]], "set_cost_matrices() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller_nonsymbolic method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController_nonsymbolic.set_cost_matrices"]], "set_cost_matrices() (double_pendulum.controller.lqr.lqr_controller_drake.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller_drake.LQRController.set_cost_matrices"]], "set_cost_parameters() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController.set_cost_parameters"]], "set_cost_parameters() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller_nonsymbolic method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController_nonsymbolic.set_cost_parameters"]], "set_cost_parameters() (double_pendulum.controller.lqr.lqr_controller_drake.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller_drake.LQRController.set_cost_parameters"]], "set_cost_parameters_() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController.set_cost_parameters_"]], "set_cost_parameters_() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller_nonsymbolic method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController_nonsymbolic.set_cost_parameters_"]], "set_cost_parameters_() (double_pendulum.controller.lqr.lqr_controller_drake.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller_drake.LQRController.set_cost_parameters_"]], "set_goal() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController.set_goal"]], "set_goal() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller_nonsymbolic method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController_nonsymbolic.set_goal"]], "set_goal() (double_pendulum.controller.lqr.lqr_controller_drake.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller_drake.LQRController.set_goal"]], "set_parameters() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController.set_parameters"]], "set_parameters() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller_nonsymbolic method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController_nonsymbolic.set_parameters"]], "check_x0() (in module double_pendulum.controller.lqr.roa.prob_roa)": [[25, "double_pendulum.controller.lqr.roa.prob_roa.check_x0"]], "compute_roa_prob() (in module double_pendulum.controller.lqr.roa.prob_roa)": [[25, "double_pendulum.controller.lqr.roa.prob_roa.compute_roa_prob"]], "directsphere() (in module double_pendulum.controller.lqr.roa.ellipsoid)": [[25, "double_pendulum.controller.lqr.roa.ellipsoid.directSphere"]], "double_pendulum.controller.lqr.roa": [[25, "module-double_pendulum.controller.lqr.roa"]], "double_pendulum.controller.lqr.roa.check": [[25, "module-double_pendulum.controller.lqr.roa.check"]], "double_pendulum.controller.lqr.roa.ellipsoid": [[25, "module-double_pendulum.controller.lqr.roa.ellipsoid"]], "double_pendulum.controller.lqr.roa.prob_roa": [[25, "module-double_pendulum.controller.lqr.roa.prob_roa"]], "getellipseparamsfromquad() (in module double_pendulum.controller.lqr.roa.ellipsoid)": [[25, "double_pendulum.controller.lqr.roa.ellipsoid.getEllipseParamsFromQuad"]], "getellipsepatch() (in module double_pendulum.controller.lqr.roa.ellipsoid)": [[25, "double_pendulum.controller.lqr.roa.ellipsoid.getEllipsePatch"]], "getellipsepatches() (in module double_pendulum.controller.lqr.roa.ellipsoid)": [[25, "double_pendulum.controller.lqr.roa.ellipsoid.getEllipsePatches"]], "lqr_check_ctg (class in double_pendulum.controller.lqr.roa.check)": [[25, "double_pendulum.controller.lqr.roa.check.lqr_check_ctg"]], "lqr_check_ctg_verification() (in module double_pendulum.controller.lqr.roa.check)": [[25, "double_pendulum.controller.lqr.roa.check.lqr_check_ctg_verification"]], "lqr_check_epsilon (class in double_pendulum.controller.lqr.roa.check)": [[25, "double_pendulum.controller.lqr.roa.check.lqr_check_epsilon"]], "lqr_check_epsilon_verification() (in module double_pendulum.controller.lqr.roa.check)": [[25, "double_pendulum.controller.lqr.roa.check.lqr_check_epsilon_verification"]], "plotellipse() (in module double_pendulum.controller.lqr.roa.ellipsoid)": [[25, "double_pendulum.controller.lqr.roa.ellipsoid.plotEllipse"]], "quadform() (in module double_pendulum.controller.lqr.roa.ellipsoid)": [[25, "double_pendulum.controller.lqr.roa.ellipsoid.quadForm"]], "rescale_pars() (double_pendulum.controller.lqr.roa.prob_roa.roa_prob_loss method)": [[25, "double_pendulum.controller.lqr.roa.prob_roa.roa_prob_loss.rescale_pars"]], "roa_prob_loss (class in double_pendulum.controller.lqr.roa.prob_roa)": [[25, "double_pendulum.controller.lqr.roa.prob_roa.roa_prob_loss"]], "samplefromellipsoid() (in module double_pendulum.controller.lqr.roa.ellipsoid)": [[25, "double_pendulum.controller.lqr.roa.ellipsoid.sampleFromEllipsoid"]], "sim_callback() (double_pendulum.controller.lqr.roa.check.lqr_check_ctg method)": [[25, "double_pendulum.controller.lqr.roa.check.lqr_check_ctg.sim_callback"]], "sim_callback() (double_pendulum.controller.lqr.roa.check.lqr_check_epsilon method)": [[25, "double_pendulum.controller.lqr.roa.check.lqr_check_epsilon.sim_callback"]], "unscale_pars() (double_pendulum.controller.lqr.roa.prob_roa.roa_prob_loss method)": [[25, "double_pendulum.controller.lqr.roa.prob_roa.roa_prob_loss.unscale_pars"]], "volellipsoid() (in module double_pendulum.controller.lqr.roa.ellipsoid)": [[25, "double_pendulum.controller.lqr.roa.ellipsoid.volEllipsoid"]], "controller_sum_of_gaussians_with_angles_numpy (class in double_pendulum.controller.mcpilco.mcpilco_controller)": [[26, "double_pendulum.controller.mcpilco.mcpilco_controller.Controller_sum_of_Gaussians_with_angles_numpy"]], "double_pendulum.controller.mcpilco": [[26, "module-double_pendulum.controller.mcpilco"]], "double_pendulum.controller.mcpilco.mcpilco_controller": [[26, "module-double_pendulum.controller.mcpilco.mcpilco_controller"]], "get_control_output() (double_pendulum.controller.mcpilco.mcpilco_controller.controller_sum_of_gaussians_with_angles_numpy method)": [[26, "double_pendulum.controller.mcpilco.mcpilco_controller.Controller_sum_of_Gaussians_with_angles_numpy.get_control_output"]], "get_control_output_() (double_pendulum.controller.mcpilco.mcpilco_controller.controller_sum_of_gaussians_with_angles_numpy method)": [[26, "double_pendulum.controller.mcpilco.mcpilco_controller.Controller_sum_of_Gaussians_with_angles_numpy.get_control_output_"]], "energyshapingpflandlqrcontroller (class in double_pendulum.controller.partial_feedback_linearization.pfl)": [[27, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLAndLQRController"]], "energyshapingpflcontroller (class in double_pendulum.controller.partial_feedback_linearization.pfl)": [[27, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLController"]], "symbolicpflandlqrcontroller (class in double_pendulum.controller.partial_feedback_linearization.symbolic_pfl)": [[27, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLAndLQRController"]], "symbolicpflcontroller (class in double_pendulum.controller.partial_feedback_linearization.symbolic_pfl)": [[27, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLController"]], "double_pendulum.controller.partial_feedback_linearization": [[27, "module-double_pendulum.controller.partial_feedback_linearization"]], "double_pendulum.controller.partial_feedback_linearization.pfl": [[27, "module-double_pendulum.controller.partial_feedback_linearization.pfl"]], "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl": [[27, "module-double_pendulum.controller.partial_feedback_linearization.symbolic_pfl"]], "get_control_output_() (double_pendulum.controller.partial_feedback_linearization.pfl.energyshapingpflandlqrcontroller method)": [[27, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLAndLQRController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.partial_feedback_linearization.pfl.energyshapingpflcontroller method)": [[27, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflandlqrcontroller method)": [[27, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLAndLQRController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflcontroller method)": [[27, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLController.get_control_output_"]], "init_() (double_pendulum.controller.partial_feedback_linearization.pfl.energyshapingpflandlqrcontroller method)": [[27, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLAndLQRController.init_"]], "init_() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflandlqrcontroller method)": [[27, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLAndLQRController.init_"]], "init_() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflcontroller method)": [[27, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLController.init_"]], "save_() (double_pendulum.controller.partial_feedback_linearization.pfl.energyshapingpflcontroller method)": [[27, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLController.save_"]], "save_() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflandlqrcontroller method)": [[27, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLAndLQRController.save_"]], "save_() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflcontroller method)": [[27, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLController.save_"]], "set_cost_parameters() (double_pendulum.controller.partial_feedback_linearization.pfl.energyshapingpflcontroller method)": [[27, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLController.set_cost_parameters"]], "set_cost_parameters() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflcontroller method)": [[27, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLController.set_cost_parameters"]], "set_cost_parameters_() (double_pendulum.controller.partial_feedback_linearization.pfl.energyshapingpflandlqrcontroller method)": [[27, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLAndLQRController.set_cost_parameters_"]], "set_cost_parameters_() (double_pendulum.controller.partial_feedback_linearization.pfl.energyshapingpflcontroller method)": [[27, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLController.set_cost_parameters_"]], "set_cost_parameters_() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflandlqrcontroller method)": [[27, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLAndLQRController.set_cost_parameters_"]], "set_cost_parameters_() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflcontroller method)": [[27, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLController.set_cost_parameters_"]], "set_goal() (double_pendulum.controller.partial_feedback_linearization.pfl.energyshapingpflandlqrcontroller method)": [[27, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLAndLQRController.set_goal"]], "set_goal() (double_pendulum.controller.partial_feedback_linearization.pfl.energyshapingpflcontroller method)": [[27, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLController.set_goal"]], "set_goal() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflandlqrcontroller method)": [[27, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLAndLQRController.set_goal"]], "set_goal() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflcontroller method)": [[27, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLController.set_goal"]], "pointpidcontroller (class in double_pendulum.controller.pid.point_pid_controller)": [[28, "double_pendulum.controller.pid.point_pid_controller.PointPIDController"]], "trajpidcontroller (class in double_pendulum.controller.pid.trajectory_pid_controller)": [[28, "double_pendulum.controller.pid.trajectory_pid_controller.TrajPIDController"]], "double_pendulum.controller.pid": [[28, "module-double_pendulum.controller.pid"]], "double_pendulum.controller.pid.point_pid_controller": [[28, "module-double_pendulum.controller.pid.point_pid_controller"]], "double_pendulum.controller.pid.trajectory_pid_controller": [[28, "module-double_pendulum.controller.pid.trajectory_pid_controller"]], "get_control_output_() (double_pendulum.controller.pid.point_pid_controller.pointpidcontroller method)": [[28, "double_pendulum.controller.pid.point_pid_controller.PointPIDController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.pid.trajectory_pid_controller.trajpidcontroller method)": [[28, "double_pendulum.controller.pid.trajectory_pid_controller.TrajPIDController.get_control_output_"]], "get_init_trajectory() (double_pendulum.controller.pid.trajectory_pid_controller.trajpidcontroller method)": [[28, "double_pendulum.controller.pid.trajectory_pid_controller.TrajPIDController.get_init_trajectory"]], "init_() (double_pendulum.controller.pid.point_pid_controller.pointpidcontroller method)": [[28, "double_pendulum.controller.pid.point_pid_controller.PointPIDController.init_"]], "init_() (double_pendulum.controller.pid.trajectory_pid_controller.trajpidcontroller method)": [[28, "double_pendulum.controller.pid.trajectory_pid_controller.TrajPIDController.init_"]], "save_() (double_pendulum.controller.pid.point_pid_controller.pointpidcontroller method)": [[28, "double_pendulum.controller.pid.point_pid_controller.PointPIDController.save_"]], "save_() (double_pendulum.controller.pid.trajectory_pid_controller.trajpidcontroller method)": [[28, "double_pendulum.controller.pid.trajectory_pid_controller.TrajPIDController.save_"]], "set_goal() (double_pendulum.controller.pid.point_pid_controller.pointpidcontroller method)": [[28, "double_pendulum.controller.pid.point_pid_controller.PointPIDController.set_goal"]], "set_parameters() (double_pendulum.controller.pid.point_pid_controller.pointpidcontroller method)": [[28, "double_pendulum.controller.pid.point_pid_controller.PointPIDController.set_parameters"]], "set_parameters() (double_pendulum.controller.pid.trajectory_pid_controller.trajpidcontroller method)": [[28, "double_pendulum.controller.pid.trajectory_pid_controller.TrajPIDController.set_parameters"]], "feedforwardcontroller (class in double_pendulum.controller.trajectory_following.feed_forward)": [[29, "double_pendulum.controller.trajectory_following.feed_forward.FeedForwardController"]], "trajectorycontroller (class in double_pendulum.controller.trajectory_following.trajectory_controller)": [[29, "double_pendulum.controller.trajectory_following.trajectory_controller.TrajectoryController"]], "trajectoryinterpcontroller (class in double_pendulum.controller.trajectory_following.trajectory_controller)": [[29, "double_pendulum.controller.trajectory_following.trajectory_controller.TrajectoryInterpController"]], "double_pendulum.controller.trajectory_following": [[29, "module-double_pendulum.controller.trajectory_following"]], "double_pendulum.controller.trajectory_following.feed_forward": [[29, "module-double_pendulum.controller.trajectory_following.feed_forward"]], "double_pendulum.controller.trajectory_following.trajectory_controller": [[29, "module-double_pendulum.controller.trajectory_following.trajectory_controller"]], "get_control_output_() (double_pendulum.controller.trajectory_following.feed_forward.feedforwardcontroller method)": [[29, "double_pendulum.controller.trajectory_following.feed_forward.FeedForwardController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.trajectory_following.trajectory_controller.trajectorycontroller method)": [[29, "double_pendulum.controller.trajectory_following.trajectory_controller.TrajectoryController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.trajectory_following.trajectory_controller.trajectoryinterpcontroller method)": [[29, "double_pendulum.controller.trajectory_following.trajectory_controller.TrajectoryInterpController.get_control_output_"]], "get_init_trajectory() (double_pendulum.controller.trajectory_following.trajectory_controller.trajectorycontroller method)": [[29, "double_pendulum.controller.trajectory_following.trajectory_controller.TrajectoryController.get_init_trajectory"]], "get_init_trajectory() (double_pendulum.controller.trajectory_following.trajectory_controller.trajectoryinterpcontroller method)": [[29, "double_pendulum.controller.trajectory_following.trajectory_controller.TrajectoryInterpController.get_init_trajectory"]], "save_() (double_pendulum.controller.trajectory_following.feed_forward.feedforwardcontroller method)": [[29, "double_pendulum.controller.trajectory_following.feed_forward.FeedForwardController.save_"]], "save_() (double_pendulum.controller.trajectory_following.trajectory_controller.trajectoryinterpcontroller method)": [[29, "double_pendulum.controller.trajectory_following.trajectory_controller.TrajectoryInterpController.save_"]], "tvlqrcontroller (class in double_pendulum.controller.tvlqr.tvlqr_controller)": [[30, "double_pendulum.controller.tvlqr.tvlqr_controller.TVLQRController"]], "tvlqrcontroller (class in double_pendulum.controller.tvlqr.tvlqr_controller_drake)": [[30, "double_pendulum.controller.tvlqr.tvlqr_controller_drake.TVLQRController"]], "double_pendulum.controller.tvlqr": [[30, "module-double_pendulum.controller.tvlqr"]], "double_pendulum.controller.tvlqr.tvlqr_controller": [[30, "module-double_pendulum.controller.tvlqr.tvlqr_controller"]], "double_pendulum.controller.tvlqr.tvlqr_controller_drake": [[30, "module-double_pendulum.controller.tvlqr.tvlqr_controller_drake"]], "get_control_output_() (double_pendulum.controller.tvlqr.tvlqr_controller.tvlqrcontroller method)": [[30, "double_pendulum.controller.tvlqr.tvlqr_controller.TVLQRController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.tvlqr.tvlqr_controller_drake.tvlqrcontroller method)": [[30, "double_pendulum.controller.tvlqr.tvlqr_controller_drake.TVLQRController.get_control_output_"]], "get_init_trajectory() (double_pendulum.controller.tvlqr.tvlqr_controller.tvlqrcontroller method)": [[30, "double_pendulum.controller.tvlqr.tvlqr_controller.TVLQRController.get_init_trajectory"]], "get_init_trajectory() (double_pendulum.controller.tvlqr.tvlqr_controller_drake.tvlqrcontroller method)": [[30, "double_pendulum.controller.tvlqr.tvlqr_controller_drake.TVLQRController.get_init_trajectory"]], "init_() (double_pendulum.controller.tvlqr.tvlqr_controller.tvlqrcontroller method)": [[30, "double_pendulum.controller.tvlqr.tvlqr_controller.TVLQRController.init_"]], "init_() (double_pendulum.controller.tvlqr.tvlqr_controller_drake.tvlqrcontroller method)": [[30, "double_pendulum.controller.tvlqr.tvlqr_controller_drake.TVLQRController.init_"]], "save_() (double_pendulum.controller.tvlqr.tvlqr_controller.tvlqrcontroller method)": [[30, "double_pendulum.controller.tvlqr.tvlqr_controller.TVLQRController.save_"]], "save_() (double_pendulum.controller.tvlqr.tvlqr_controller_drake.tvlqrcontroller method)": [[30, "double_pendulum.controller.tvlqr.tvlqr_controller_drake.TVLQRController.save_"]], "set_cost_parameters() (double_pendulum.controller.tvlqr.tvlqr_controller.tvlqrcontroller method)": [[30, "double_pendulum.controller.tvlqr.tvlqr_controller.TVLQRController.set_cost_parameters"]], "set_cost_parameters() (double_pendulum.controller.tvlqr.tvlqr_controller_drake.tvlqrcontroller method)": [[30, "double_pendulum.controller.tvlqr.tvlqr_controller_drake.TVLQRController.set_cost_parameters"]], "set_goal() (double_pendulum.controller.tvlqr.tvlqr_controller.tvlqrcontroller method)": [[30, "double_pendulum.controller.tvlqr.tvlqr_controller.TVLQRController.set_goal"]], "videowriterwidget (class in double_pendulum.experiments.video_recording)": [[31, "double_pendulum.experiments.video_recording.VideoWriterWidget"]], "double_pendulum.experiments": [[31, "module-double_pendulum.experiments"]], "double_pendulum.experiments.experimental_utils": [[31, "module-double_pendulum.experiments.experimental_utils"]], "double_pendulum.experiments.hardware_control_loop_tmotors": [[31, "module-double_pendulum.experiments.hardware_control_loop_tmotors"]], "double_pendulum.experiments.performance_profiler": [[31, "module-double_pendulum.experiments.performance_profiler"]], "double_pendulum.experiments.video_recording": [[31, "module-double_pendulum.experiments.video_recording"]], "motor_send_n_commands() (in module double_pendulum.experiments.performance_profiler)": [[31, "double_pendulum.experiments.performance_profiler.motor_send_n_commands"]], "motor_send_n_commands2() (in module double_pendulum.experiments.performance_profiler)": [[31, "double_pendulum.experiments.performance_profiler.motor_send_n_commands2"]], "motor_speed_test() (in module double_pendulum.experiments.performance_profiler)": [[31, "double_pendulum.experiments.performance_profiler.motor_speed_test"]], "motor_speed_test2() (in module double_pendulum.experiments.performance_profiler)": [[31, "double_pendulum.experiments.performance_profiler.motor_speed_test2"]], "profiler() (in module double_pendulum.experiments.performance_profiler)": [[31, "double_pendulum.experiments.performance_profiler.profiler"]], "rad2rev() (in module double_pendulum.experiments.experimental_utils)": [[31, "double_pendulum.experiments.experimental_utils.rad2rev"]], "rev2rad() (in module double_pendulum.experiments.experimental_utils)": [[31, "double_pendulum.experiments.experimental_utils.rev2rad"]], "run_experiment() (in module double_pendulum.experiments.hardware_control_loop_tmotors)": [[31, "double_pendulum.experiments.hardware_control_loop_tmotors.run_experiment"]], "save_data() (in module double_pendulum.experiments.experimental_utils)": [[31, "double_pendulum.experiments.experimental_utils.save_data"]], "save_frame() (double_pendulum.experiments.video_recording.videowriterwidget method)": [[31, "double_pendulum.experiments.video_recording.VideoWriterWidget.save_frame"]], "setzeroposition() (in module double_pendulum.experiments.experimental_utils)": [[31, "double_pendulum.experiments.experimental_utils.setZeroPosition"]], "show_frame() (double_pendulum.experiments.video_recording.videowriterwidget method)": [[31, "double_pendulum.experiments.video_recording.VideoWriterWidget.show_frame"]], "start_recording() (double_pendulum.experiments.video_recording.videowriterwidget method)": [[31, "double_pendulum.experiments.video_recording.VideoWriterWidget.start_recording"]], "update() (double_pendulum.experiments.video_recording.videowriterwidget method)": [[31, "double_pendulum.experiments.video_recording.VideoWriterWidget.update"]], "doublependulumplant (class in double_pendulum.model.plant)": [[32, "double_pendulum.model.plant.DoublePendulumPlant"]], "i1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.I1"]], "i2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.I2"]], "ir_sym (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.Ir_sym"]], "symbolicdoublependulum (class in double_pendulum.model.symbolic_plant)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum"]], "angular_momentum_base() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.angular_momentum_base"]], "angular_momentum_ddot_base() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.angular_momentum_ddot_base"]], "angular_momentum_dot_base() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.angular_momentum_dot_base"]], "b1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.b1"]], "b2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.b2"]], "base (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.base"]], "center_of_mass() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.center_of_mass"]], "cf1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.cf1"]], "cf2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.cf2"]], "com_dot() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.com_dot"]], "coriolis_matrix() (double_pendulum.model.plant.doublependulumplant method)": [[32, "double_pendulum.model.plant.DoublePendulumPlant.coriolis_matrix"]], "coriolis_matrix() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.coriolis_matrix"]], "coulomb_vector() (double_pendulum.model.plant.doublependulumplant method)": [[32, "double_pendulum.model.plant.DoublePendulumPlant.coulomb_vector"]], "coulomb_vector() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.coulomb_vector"]], "diff_to_matrix() (in module double_pendulum.model.symbolic_plant)": [[32, "double_pendulum.model.symbolic_plant.diff_to_matrix"]], "dof (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.dof"]], "double_pendulum.model": [[32, "module-double_pendulum.model"]], "double_pendulum.model.friction_matrix": [[32, "module-double_pendulum.model.friction_matrix"]], "double_pendulum.model.model_parameters": [[32, "module-double_pendulum.model.model_parameters"]], "double_pendulum.model.plant": [[32, "module-double_pendulum.model.plant"]], "double_pendulum.model.symbolic_plant": [[32, "module-double_pendulum.model.symbolic_plant"]], "equation_of_motion() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.equation_of_motion"]], "forward_dynamics() (double_pendulum.model.plant.doublependulumplant method)": [[32, "double_pendulum.model.plant.DoublePendulumPlant.forward_dynamics"]], "forward_dynamics() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.forward_dynamics"]], "forward_kinematics() (double_pendulum.model.plant.doublependulumplant method)": [[32, "double_pendulum.model.plant.DoublePendulumPlant.forward_kinematics"]], "forward_kinematics() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.forward_kinematics"]], "g_sym (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.g_sym"]], "get_alin() (double_pendulum.model.plant.doublependulumplant method)": [[32, "double_pendulum.model.plant.DoublePendulumPlant.get_Alin"]], "get_blin() (double_pendulum.model.plant.doublependulumplant method)": [[32, "double_pendulum.model.plant.DoublePendulumPlant.get_Blin"]], "get_cx() (double_pendulum.model.plant.doublependulumplant method)": [[32, "double_pendulum.model.plant.DoublePendulumPlant.get_Cx"]], "get_fx() (double_pendulum.model.plant.doublependulumplant method)": [[32, "double_pendulum.model.plant.DoublePendulumPlant.get_Fx"]], "get_gx() (double_pendulum.model.plant.doublependulumplant method)": [[32, "double_pendulum.model.plant.DoublePendulumPlant.get_Gx"]], "get_minvx() (double_pendulum.model.plant.doublependulumplant method)": [[32, "double_pendulum.model.plant.DoublePendulumPlant.get_Minvx"]], "get_mx() (double_pendulum.model.plant.doublependulumplant method)": [[32, "double_pendulum.model.plant.DoublePendulumPlant.get_Mx"]], "get_dict() (double_pendulum.model.model_parameters.model_parameters method)": [[32, "double_pendulum.model.model_parameters.model_parameters.get_dict"]], "gr_sym (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.gr_sym"]], "gravity_vector() (double_pendulum.model.plant.doublependulumplant method)": [[32, "double_pendulum.model.plant.DoublePendulumPlant.gravity_vector"]], "gravity_vector() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.gravity_vector"]], "inverse_dynamics() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.inverse_dynamics"]], "kinetic_energy() (double_pendulum.model.plant.doublependulumplant method)": [[32, "double_pendulum.model.plant.DoublePendulumPlant.kinetic_energy"]], "kinetic_energy() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.kinetic_energy"]], "l1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.l1"]], "l2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.l2"]], "lambdify_matrices() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.lambdify_matrices"]], "linear_matrices() (double_pendulum.model.plant.doublependulumplant method)": [[32, "double_pendulum.model.plant.DoublePendulumPlant.linear_matrices"]], "linear_matrices() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.linear_matrices"]], "linear_matrices_discrete() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.linear_matrices_discrete"]], "load_dict() (double_pendulum.model.model_parameters.model_parameters method)": [[32, "double_pendulum.model.model_parameters.model_parameters.load_dict"]], "load_model() (double_pendulum.model.model_parameters.model_parameters method)": [[32, "double_pendulum.model.model_parameters.model_parameters.load_model"]], "load_yaml() (double_pendulum.model.model_parameters.model_parameters method)": [[32, "double_pendulum.model.model_parameters.model_parameters.load_yaml"]], "m1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.m1"]], "m2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.m2"]], "mass_matrix() (double_pendulum.model.plant.doublependulumplant method)": [[32, "double_pendulum.model.plant.DoublePendulumPlant.mass_matrix"]], "mass_matrix() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.mass_matrix"]], "model_parameters (class in double_pendulum.model.model_parameters)": [[32, "double_pendulum.model.model_parameters.model_parameters"]], "n_actuators (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.n_actuators"]], "n_links (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.n_links"]], "potential_energy() (double_pendulum.model.plant.doublependulumplant method)": [[32, "double_pendulum.model.plant.DoublePendulumPlant.potential_energy"]], "potential_energy() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.potential_energy"]], "q (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.q"]], "q01 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.q01"]], "q02 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.q02"]], "q0d1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.q0d1"]], "q0d2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.q0d2"]], "q1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.q1"]], "q2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.q2"]], "qd (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.qd"]], "qd1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.qd1"]], "qd2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.qd2"]], "qdd (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.qdd"]], "qdd1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.qdd1"]], "qdd2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.qdd2"]], "r1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.r1"]], "r2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.r2"]], "replace_parameters() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.replace_parameters"]], "rhs() (double_pendulum.model.plant.doublependulumplant method)": [[32, "double_pendulum.model.plant.DoublePendulumPlant.rhs"]], "rhs() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.rhs"]], "save_dict() (double_pendulum.model.model_parameters.model_parameters method)": [[32, "double_pendulum.model.model_parameters.model_parameters.save_dict"]], "set_cfric() (double_pendulum.model.model_parameters.model_parameters method)": [[32, "double_pendulum.model.model_parameters.model_parameters.set_cfric"]], "set_com() (double_pendulum.model.model_parameters.model_parameters method)": [[32, "double_pendulum.model.model_parameters.model_parameters.set_com"]], "set_damping() (double_pendulum.model.model_parameters.model_parameters method)": [[32, "double_pendulum.model.model_parameters.model_parameters.set_damping"]], "set_dof() (double_pendulum.model.model_parameters.model_parameters method)": [[32, "double_pendulum.model.model_parameters.model_parameters.set_dof"]], "set_gear_ratio() (double_pendulum.model.model_parameters.model_parameters method)": [[32, "double_pendulum.model.model_parameters.model_parameters.set_gear_ratio"]], "set_gravity() (double_pendulum.model.model_parameters.model_parameters method)": [[32, "double_pendulum.model.model_parameters.model_parameters.set_gravity"]], "set_inertia() (double_pendulum.model.model_parameters.model_parameters method)": [[32, "double_pendulum.model.model_parameters.model_parameters.set_inertia"]], "set_length() (double_pendulum.model.model_parameters.model_parameters method)": [[32, "double_pendulum.model.model_parameters.model_parameters.set_length"]], "set_mass() (double_pendulum.model.model_parameters.model_parameters method)": [[32, "double_pendulum.model.model_parameters.model_parameters.set_mass"]], "set_motor_inertia() (double_pendulum.model.model_parameters.model_parameters method)": [[32, "double_pendulum.model.model_parameters.model_parameters.set_motor_inertia"]], "set_torque_limit() (double_pendulum.model.model_parameters.model_parameters method)": [[32, "double_pendulum.model.model_parameters.model_parameters.set_torque_limit"]], "sub_symbols() (in module double_pendulum.model.symbolic_plant)": [[32, "double_pendulum.model.symbolic_plant.sub_symbols"]], "symbolic_coriolis_matrix() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.symbolic_coriolis_matrix"]], "symbolic_coulomb_vector() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.symbolic_coulomb_vector"]], "symbolic_gravity_vector() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.symbolic_gravity_vector"]], "symbolic_kinetic_energy() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.symbolic_kinetic_energy"]], "symbolic_linear_matrices() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.symbolic_linear_matrices"]], "symbolic_mass_matrix() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.symbolic_mass_matrix"]], "symbolic_potential_energy() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.symbolic_potential_energy"]], "symbolic_total_energy() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.symbolic_total_energy"]], "tl1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.tl1"]], "tl2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.tl2"]], "total_energy() (double_pendulum.model.plant.doublependulumplant method)": [[32, "double_pendulum.model.plant.DoublePendulumPlant.total_energy"]], "total_energy() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.total_energy"]], "u (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.u"]], "u0 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.u0"]], "u01 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.u01"]], "u02 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.u02"]], "u1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.u1"]], "u2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.u2"]], "vector_mult() (in module double_pendulum.model.symbolic_plant)": [[32, "double_pendulum.model.symbolic_plant.vector_mult"]], "x (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.x"]], "x0 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.x0"]], "xd (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[32, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.xd"]], "yb_friction_matrix() (in module double_pendulum.model.friction_matrix)": [[32, "double_pendulum.model.friction_matrix.yb_friction_matrix"]], "customenv (class in double_pendulum.simulation.gym_env)": [[33, "double_pendulum.simulation.gym_env.CustomEnv"]], "simulator (class in double_pendulum.simulation.simulation)": [[33, "double_pendulum.simulation.simulation.Simulator"]], "controller_step() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.controller_step"]], "double_pendulum.simulation": [[33, "module-double_pendulum.simulation"]], "double_pendulum.simulation.gym_env": [[33, "module-double_pendulum.simulation.gym_env"]], "double_pendulum.simulation.simulation": [[33, "module-double_pendulum.simulation.simulation"]], "double_pendulum.simulation.visualization": [[33, "module-double_pendulum.simulation.visualization"]], "double_pendulum_dynamics_func (class in double_pendulum.simulation.gym_env)": [[33, "double_pendulum.simulation.gym_env.double_pendulum_dynamics_func"]], "euler_integrator() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.euler_integrator"]], "filter_measurement() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.filter_measurement"]], "get_arrow() (in module double_pendulum.simulation.visualization)": [[33, "double_pendulum.simulation.visualization.get_arrow"]], "get_control_u() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.get_control_u"]], "get_measurement() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.get_measurement"]], "get_real_applied_u() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.get_real_applied_u"]], "get_state() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.get_state"]], "get_trajectory_data() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.get_trajectory_data"]], "init_filter() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.init_filter"]], "integration() (double_pendulum.simulation.gym_env.double_pendulum_dynamics_func method)": [[33, "double_pendulum.simulation.gym_env.double_pendulum_dynamics_func.integration"]], "normalize_state() (double_pendulum.simulation.gym_env.double_pendulum_dynamics_func method)": [[33, "double_pendulum.simulation.gym_env.double_pendulum_dynamics_func.normalize_state"]], "record_data() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.record_data"]], "render() (double_pendulum.simulation.gym_env.customenv method)": [[33, "double_pendulum.simulation.gym_env.CustomEnv.render"]], "reset() (double_pendulum.simulation.gym_env.customenv method)": [[33, "double_pendulum.simulation.gym_env.CustomEnv.reset"]], "reset() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.reset"]], "reset_data_recorder() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.reset_data_recorder"]], "runge_integrator() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.runge_integrator"]], "set_arrow_properties() (in module double_pendulum.simulation.visualization)": [[33, "double_pendulum.simulation.visualization.set_arrow_properties"]], "set_disturbances() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.set_disturbances"]], "set_filter_parameters() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.set_filter_parameters"]], "set_measurement_parameters() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.set_measurement_parameters"]], "set_motor_parameters() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.set_motor_parameters"]], "set_process_noise() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.set_process_noise"]], "set_state() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.set_state"]], "simulate() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.simulate"]], "simulate_and_animate() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.simulate_and_animate"]], "step() (double_pendulum.simulation.gym_env.customenv method)": [[33, "double_pendulum.simulation.gym_env.CustomEnv.step"]], "step() (double_pendulum.simulation.simulation.simulator method)": [[33, "double_pendulum.simulation.simulation.Simulator.step"]], "unscale_action() (double_pendulum.simulation.gym_env.double_pendulum_dynamics_func method)": [[33, "double_pendulum.simulation.gym_env.double_pendulum_dynamics_func.unscale_action"]], "unscale_state() (double_pendulum.simulation.gym_env.double_pendulum_dynamics_func method)": [[33, "double_pendulum.simulation.gym_env.double_pendulum_dynamics_func.unscale_state"]], "build_identification_function() (in module double_pendulum.system_identification.dynamics)": [[34, "double_pendulum.system_identification.dynamics.build_identification_function"]], "build_identification_matrices() (in module double_pendulum.system_identification.dynamics)": [[34, "double_pendulum.system_identification.dynamics.build_identification_matrices"]], "double_pendulum.system_identification": [[34, "module-double_pendulum.system_identification"]], "double_pendulum.system_identification.data_prep": [[34, "module-double_pendulum.system_identification.data_prep"]], "double_pendulum.system_identification.dynamics": [[34, "module-double_pendulum.system_identification.dynamics"]], "double_pendulum.system_identification.loss": [[34, "module-double_pendulum.system_identification.loss"]], "double_pendulum.system_identification.plotting": [[34, "module-double_pendulum.system_identification.plotting"]], "double_pendulum.system_identification.sys_id": [[34, "module-double_pendulum.system_identification.sys_id"]], "dynamics_func() (in module double_pendulum.system_identification.dynamics)": [[34, "double_pendulum.system_identification.dynamics.dynamics_func"]], "errfunc (class in double_pendulum.system_identification.loss)": [[34, "double_pendulum.system_identification.loss.errfunc"]], "errfunc_nl (class in double_pendulum.system_identification.loss)": [[34, "double_pendulum.system_identification.loss.errfunc_nl"]], "plot_torques() (in module double_pendulum.system_identification.plotting)": [[34, "double_pendulum.system_identification.plotting.plot_torques"]], "rescale_pars() (double_pendulum.system_identification.loss.errfunc method)": [[34, "double_pendulum.system_identification.loss.errfunc.rescale_pars"]], "rescale_pars() (double_pendulum.system_identification.loss.errfunc_nl method)": [[34, "double_pendulum.system_identification.loss.errfunc_nl.rescale_pars"]], "run_system_identification() (in module double_pendulum.system_identification.sys_id)": [[34, "double_pendulum.system_identification.sys_id.run_system_identification"]], "run_system_identification_nl() (in module double_pendulum.system_identification.sys_id)": [[34, "double_pendulum.system_identification.sys_id.run_system_identification_nl"]], "smooth_data() (in module double_pendulum.system_identification.data_prep)": [[34, "double_pendulum.system_identification.data_prep.smooth_data"]], "unscale_pars() (double_pendulum.system_identification.loss.errfunc method)": [[34, "double_pendulum.system_identification.loss.errfunc.unscale_pars"]], "unscale_pars() (double_pendulum.system_identification.loss.errfunc_nl method)": [[34, "double_pendulum.system_identification.loss.errfunc_nl.unscale_pars"]], "yb_matrix_sym (class in double_pendulum.system_identification.dynamics)": [[34, "double_pendulum.system_identification.dynamics.yb_matrix_sym"]], "double_pendulum.trajectory_optimization": [[35, "module-double_pendulum.trajectory_optimization"]], "animation() (in module double_pendulum.trajectory_optimization.direct_collocation.dircol_utils)": [[36, "double_pendulum.trajectory_optimization.direct_collocation.dircol_utils.animation"]], "construct_trajectories() (in module double_pendulum.trajectory_optimization.direct_collocation.dircol_utils)": [[36, "double_pendulum.trajectory_optimization.direct_collocation.dircol_utils.construct_trajectories"]], "create_plant_from_urdf() (in module double_pendulum.trajectory_optimization.direct_collocation.dircol_utils)": [[36, "double_pendulum.trajectory_optimization.direct_collocation.dircol_utils.create_plant_from_urdf"]], "double_pendulum.trajectory_optimization.direct_collocation": [[36, "module-double_pendulum.trajectory_optimization.direct_collocation"]], "double_pendulum.trajectory_optimization.direct_collocation.dircol_utils": [[36, "module-double_pendulum.trajectory_optimization.direct_collocation.dircol_utils"]], "extract_data_from_polynomial() (in module double_pendulum.trajectory_optimization.direct_collocation.dircol_utils)": [[36, "double_pendulum.trajectory_optimization.direct_collocation.dircol_utils.extract_data_from_polynomial"]], "compute_trajectory() (double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator method)": [[37, "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator.compute_trajectory"]], "double_pendulum.trajectory_optimization.ilqr": [[37, "module-double_pendulum.trajectory_optimization.ilqr"]], "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp": [[37, "module-double_pendulum.trajectory_optimization.ilqr.ilqr_cpp"]], "double_pendulum.trajectory_optimization.ilqr.paropt": [[37, "module-double_pendulum.trajectory_optimization.ilqr.paropt"]], "ilqr_calculator (class in double_pendulum.trajectory_optimization.ilqr.ilqr_cpp)": [[37, "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator"]], "ilqr_trajopt_loss (class in double_pendulum.trajectory_optimization.ilqr.paropt)": [[37, "double_pendulum.trajectory_optimization.ilqr.paropt.ilqr_trajopt_loss"]], "rescale_pars() (double_pendulum.trajectory_optimization.ilqr.paropt.ilqr_trajopt_loss method)": [[37, "double_pendulum.trajectory_optimization.ilqr.paropt.ilqr_trajopt_loss.rescale_pars"]], "save_trajectory_csv() (double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator method)": [[37, "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator.save_trajectory_csv"]], "set_cost_parameters() (double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator method)": [[37, "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator.set_cost_parameters"]], "set_cost_parameters_() (double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator method)": [[37, "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator.set_cost_parameters_"]], "set_goal() (double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator method)": [[37, "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator.set_goal"]], "set_model_parameters() (double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator method)": [[37, "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator.set_model_parameters"]], "set_model_parameters() (double_pendulum.trajectory_optimization.ilqr.paropt.ilqr_trajopt_loss method)": [[37, "double_pendulum.trajectory_optimization.ilqr.paropt.ilqr_trajopt_loss.set_model_parameters"]], "set_parameters() (double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator method)": [[37, "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator.set_parameters"]], "set_parameters() (double_pendulum.trajectory_optimization.ilqr.paropt.ilqr_trajopt_loss method)": [[37, "double_pendulum.trajectory_optimization.ilqr.paropt.ilqr_trajopt_loss.set_parameters"]], "set_start() (double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator method)": [[37, "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator.set_start"]], "unscale_pars() (double_pendulum.trajectory_optimization.ilqr.paropt.ilqr_trajopt_loss method)": [[37, "double_pendulum.trajectory_optimization.ilqr.paropt.ilqr_trajopt_loss.unscale_pars"]], "fitpiecewisepolynomial (class in double_pendulum.utils.pcw_polynomial)": [[38, "double_pendulum.utils.pcw_polynomial.FitPiecewisePolynomial"]], "interpolatematrix (class in double_pendulum.utils.pcw_polynomial)": [[38, "double_pendulum.utils.pcw_polynomial.InterpolateMatrix"]], "interpolatevector (class in double_pendulum.utils.pcw_polynomial)": [[38, "double_pendulum.utils.pcw_polynomial.InterpolateVector"]], "resampletrajectory() (in module double_pendulum.utils.pcw_polynomial)": [[38, "double_pendulum.utils.pcw_polynomial.ResampleTrajectory"]], "cma_optimization() (in module double_pendulum.utils.optimization)": [[38, "double_pendulum.utils.optimization.cma_optimization"]], "concatenate_trajectories() (in module double_pendulum.utils.csv_trajectory)": [[38, "double_pendulum.utils.csv_trajectory.concatenate_trajectories"]], "create_section_poly() (double_pendulum.utils.pcw_polynomial.fitpiecewisepolynomial method)": [[38, "double_pendulum.utils.pcw_polynomial.FitPiecewisePolynomial.create_section_poly"]], "determin_poly() (double_pendulum.utils.pcw_polynomial.fitpiecewisepolynomial method)": [[38, "double_pendulum.utils.pcw_polynomial.FitPiecewisePolynomial.determin_poly"]], "double_pendulum.utils": [[38, "module-double_pendulum.utils"]], "double_pendulum.utils.cmaes_controller_par_optimizer": [[38, "module-double_pendulum.utils.cmaes_controller_par_optimizer"]], "double_pendulum.utils.csv_trajectory": [[38, "module-double_pendulum.utils.csv_trajectory"]], "double_pendulum.utils.optimization": [[38, "module-double_pendulum.utils.optimization"]], "double_pendulum.utils.pcw_polynomial": [[38, "module-double_pendulum.utils.pcw_polynomial"]], "double_pendulum.utils.plotting": [[38, "module-double_pendulum.utils.plotting"]], "double_pendulum.utils.urdfs": [[38, "module-double_pendulum.utils.urdfs"]], "double_pendulum.utils.wrap_angles": [[38, "module-double_pendulum.utils.wrap_angles"]], "end_time() (double_pendulum.utils.pcw_polynomial.fitpiecewisepolynomial method)": [[38, "double_pendulum.utils.pcw_polynomial.FitPiecewisePolynomial.end_time"]], "generate_urdf() (in module double_pendulum.utils.urdfs)": [[38, "double_pendulum.utils.urdfs.generate_urdf"]], "get_value() (double_pendulum.utils.pcw_polynomial.fitpiecewisepolynomial method)": [[38, "double_pendulum.utils.pcw_polynomial.FitPiecewisePolynomial.get_value"]], "get_value() (double_pendulum.utils.pcw_polynomial.interpolatematrix method)": [[38, "double_pendulum.utils.pcw_polynomial.InterpolateMatrix.get_value"]], "get_value() (double_pendulum.utils.pcw_polynomial.interpolatevector method)": [[38, "double_pendulum.utils.pcw_polynomial.InterpolateVector.get_value"]], "load_kk_values() (in module double_pendulum.utils.csv_trajectory)": [[38, "double_pendulum.utils.csv_trajectory.load_Kk_values"]], "load_trajectory() (in module double_pendulum.utils.csv_trajectory)": [[38, "double_pendulum.utils.csv_trajectory.load_trajectory"]], "load_trajectory_full() (in module double_pendulum.utils.csv_trajectory)": [[38, "double_pendulum.utils.csv_trajectory.load_trajectory_full"]], "plot_figures() (in module double_pendulum.utils.plotting)": [[38, "double_pendulum.utils.plotting.plot_figures"]], "plot_timeseries() (in module double_pendulum.utils.plotting)": [[38, "double_pendulum.utils.plotting.plot_timeseries"]], "poly1() (in module double_pendulum.utils.pcw_polynomial)": [[38, "double_pendulum.utils.pcw_polynomial.poly1"]], "poly2() (in module double_pendulum.utils.pcw_polynomial)": [[38, "double_pendulum.utils.pcw_polynomial.poly2"]], "poly3() (in module double_pendulum.utils.pcw_polynomial)": [[38, "double_pendulum.utils.pcw_polynomial.poly3"]], "remove_namespaces() (in module double_pendulum.utils.urdfs)": [[38, "double_pendulum.utils.urdfs.remove_namespaces"]], "rescale_pars() (double_pendulum.utils.cmaes_controller_par_optimizer.swingup_loss method)": [[38, "double_pendulum.utils.cmaes_controller_par_optimizer.swingup_loss.rescale_pars"]], "rescale_pars() (double_pendulum.utils.cmaes_controller_par_optimizer.traj_opt_loss method)": [[38, "double_pendulum.utils.cmaes_controller_par_optimizer.traj_opt_loss.rescale_pars"]], "save_trajectory() (in module double_pendulum.utils.csv_trajectory)": [[38, "double_pendulum.utils.csv_trajectory.save_trajectory"]], "scipy_par_optimization() (in module double_pendulum.utils.optimization)": [[38, "double_pendulum.utils.optimization.scipy_par_optimization"]], "solve_least_squares() (in module double_pendulum.utils.optimization)": [[38, "double_pendulum.utils.optimization.solve_least_squares"]], "split_data() (double_pendulum.utils.pcw_polynomial.fitpiecewisepolynomial method)": [[38, "double_pendulum.utils.pcw_polynomial.FitPiecewisePolynomial.split_data"]], "start_time() (double_pendulum.utils.pcw_polynomial.fitpiecewisepolynomial method)": [[38, "double_pendulum.utils.pcw_polynomial.FitPiecewisePolynomial.start_time"]], "swingup_loss (class in double_pendulum.utils.cmaes_controller_par_optimizer)": [[38, "double_pendulum.utils.cmaes_controller_par_optimizer.swingup_loss"]], "traj_opt_loss (class in double_pendulum.utils.cmaes_controller_par_optimizer)": [[38, "double_pendulum.utils.cmaes_controller_par_optimizer.traj_opt_loss"]], "trajectory_properties() (in module double_pendulum.utils.csv_trajectory)": [[38, "double_pendulum.utils.csv_trajectory.trajectory_properties"]], "unscale_pars() (double_pendulum.utils.cmaes_controller_par_optimizer.swingup_loss method)": [[38, "double_pendulum.utils.cmaes_controller_par_optimizer.swingup_loss.unscale_pars"]], "unscale_pars() (double_pendulum.utils.cmaes_controller_par_optimizer.traj_opt_loss method)": [[38, "double_pendulum.utils.cmaes_controller_par_optimizer.traj_opt_loss.unscale_pars"]], "wrap_angles() (in module double_pendulum.utils.wrap_angles)": [[38, "double_pendulum.utils.wrap_angles.wrap_angles"]], "wrap_angles_diff() (in module double_pendulum.utils.wrap_angles)": [[38, "double_pendulum.utils.wrap_angles.wrap_angles_diff"]], "wrap_angles_top() (in module double_pendulum.utils.wrap_angles)": [[38, "double_pendulum.utils.wrap_angles.wrap_angles_top"]], "butterworth_filter() (in module double_pendulum.utils.filters.butterworth)": [[39, "double_pendulum.utils.filters.butterworth.butterworth_filter"]], "data_filter_realtime_1() (in module double_pendulum.utils.filters.running_mean)": [[39, "double_pendulum.utils.filters.running_mean.data_filter_realtime_1"]], "data_filter_realtime_2() (in module double_pendulum.utils.filters.running_mean)": [[39, "double_pendulum.utils.filters.running_mean.data_filter_realtime_2"]], "double_pendulum.utils.filters": [[39, "module-double_pendulum.utils.filters"]], "double_pendulum.utils.filters.butterworth": [[39, "module-double_pendulum.utils.filters.butterworth"]], "double_pendulum.utils.filters.fast_fourier_transform": [[39, "module-double_pendulum.utils.filters.fast_fourier_transform"]], "double_pendulum.utils.filters.identity": [[39, "module-double_pendulum.utils.filters.identity"]], "double_pendulum.utils.filters.kalman_filter": [[39, "module-double_pendulum.utils.filters.kalman_filter"]], "double_pendulum.utils.filters.low_pass": [[39, "module-double_pendulum.utils.filters.low_pass"]], "double_pendulum.utils.filters.running_mean": [[39, "module-double_pendulum.utils.filters.running_mean"]], "double_pendulum.utils.filters.savitzky_golay": [[39, "module-double_pendulum.utils.filters.savitzky_golay"]], "double_pendulum.utils.filters.unscented_kalman_filter": [[39, "module-double_pendulum.utils.filters.unscented_kalman_filter"]], "fast_fourier_transform() (in module double_pendulum.utils.filters.fast_fourier_transform)": [[39, "double_pendulum.utils.filters.fast_fourier_transform.fast_fourier_transform"]], "iden() (in module double_pendulum.utils.filters.unscented_kalman_filter)": [[39, "double_pendulum.utils.filters.unscented_kalman_filter.iden"]], "identity_filter (class in double_pendulum.utils.filters.identity)": [[39, "double_pendulum.utils.filters.identity.identity_filter"]], "kalman_filter() (in module double_pendulum.utils.filters.kalman_filter)": [[39, "double_pendulum.utils.filters.kalman_filter.kalman_filter"]], "kalman_filter_rt (class in double_pendulum.utils.filters.kalman_filter)": [[39, "double_pendulum.utils.filters.kalman_filter.kalman_filter_rt"]], "lowpass_filter() (in module double_pendulum.utils.filters.low_pass)": [[39, "double_pendulum.utils.filters.low_pass.lowpass_filter"]], "lowpass_filter_rt (class in double_pendulum.utils.filters.low_pass)": [[39, "double_pendulum.utils.filters.low_pass.lowpass_filter_rt"]], "main() (in module double_pendulum.utils.filters.kalman_filter)": [[39, "double_pendulum.utils.filters.kalman_filter.main"]], "running_mean_filter() (in module double_pendulum.utils.filters.running_mean)": [[39, "double_pendulum.utils.filters.running_mean.running_mean_filter"]], "savitzky_golay_filter() (in module double_pendulum.utils.filters.savitzky_golay)": [[39, "double_pendulum.utils.filters.savitzky_golay.savitzky_golay_filter"]], "scipy_fft() (in module double_pendulum.utils.filters.fast_fourier_transform)": [[39, "double_pendulum.utils.filters.fast_fourier_transform.scipy_fft"]], "unscented_kalman_filter_rt (class in double_pendulum.utils.filters.unscented_kalman_filter)": [[39, "double_pendulum.utils.filters.unscented_kalman_filter.unscented_kalman_filter_rt"]]}})