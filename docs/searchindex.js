Search.setIndex({"docnames": ["benchmark", "benchmark.robustness", "control", "control.mpc", "control.mpc.ilqr", "control.policy", "control.policy.lqr", "control.policy.pfl", "control.trajopt", "control.trajopt.dircol", "control.trajopt.ilqr", "control.trajstab", "control.trajstab.riccati", "control.trajstab.tvlqr", "dynamics", "generated/double_pendulum", "generated/double_pendulum.analysis", "generated/double_pendulum.controller", "generated/double_pendulum.controller.energy", "generated/double_pendulum.controller.friction_compensation", "generated/double_pendulum.controller.gamepad", "generated/double_pendulum.controller.gravity_compensation", "generated/double_pendulum.controller.ilqr", "generated/double_pendulum.controller.inverse_dynamics", "generated/double_pendulum.controller.lqr", "generated/double_pendulum.controller.lqr.roa", "generated/double_pendulum.controller.partial_feedback_linearization", "generated/double_pendulum.controller.pid", "generated/double_pendulum.controller.trajectory_following", "generated/double_pendulum.controller.tvlqr", "generated/double_pendulum.experiments", "generated/double_pendulum.model", "generated/double_pendulum.simulation", "generated/double_pendulum.system_identification", "generated/double_pendulum.trajectory_optimization", "generated/double_pendulum.trajectory_optimization.direct_collocation", "generated/double_pendulum.trajectory_optimization.ilqr", "generated/double_pendulum.utils", "generated/double_pendulum.utils.filters", "hardware", "hardware.experiments", "hardware.motors", "hardware.motors.mjbots", "hardware.motors.tmotors", "hardware.testbench", "index", "installation", "modules", "software_structure"], "filenames": ["benchmark.rst", "benchmark.robustness.rst", "control.rst", "control.mpc.rst", "control.mpc.ilqr.rst", "control.policy.rst", "control.policy.lqr.rst", "control.policy.pfl.rst", "control.trajopt.rst", "control.trajopt.dircol.rst", "control.trajopt.ilqr.rst", "control.trajstab.rst", "control.trajstab.riccati.rst", "control.trajstab.tvlqr.rst", "dynamics.rst", "generated/double_pendulum.rst", "generated/double_pendulum.analysis.rst", "generated/double_pendulum.controller.rst", "generated/double_pendulum.controller.energy.rst", "generated/double_pendulum.controller.friction_compensation.rst", "generated/double_pendulum.controller.gamepad.rst", "generated/double_pendulum.controller.gravity_compensation.rst", "generated/double_pendulum.controller.ilqr.rst", "generated/double_pendulum.controller.inverse_dynamics.rst", "generated/double_pendulum.controller.lqr.rst", "generated/double_pendulum.controller.lqr.roa.rst", "generated/double_pendulum.controller.partial_feedback_linearization.rst", "generated/double_pendulum.controller.pid.rst", "generated/double_pendulum.controller.trajectory_following.rst", "generated/double_pendulum.controller.tvlqr.rst", "generated/double_pendulum.experiments.rst", "generated/double_pendulum.model.rst", "generated/double_pendulum.simulation.rst", "generated/double_pendulum.system_identification.rst", "generated/double_pendulum.trajectory_optimization.rst", "generated/double_pendulum.trajectory_optimization.direct_collocation.rst", "generated/double_pendulum.trajectory_optimization.ilqr.rst", "generated/double_pendulum.utils.rst", "generated/double_pendulum.utils.filters.rst", "hardware.rst", "hardware.experiments.rst", "hardware.motors.rst", "hardware.motors.mjbots.rst", "hardware.motors.tmotors.rst", "hardware.testbench.rst", "index.rst", "installation.rst", "modules.rst", "software_structure.rst"], "titles": ["Controller Benchmarking", "Controller Robustness", "Control Methods", "Model Predictive Control (MPC)", "Iterative Linear Quadratic Regulator (iLQR) MPC", "Policy-based Control", "Linear Quadratic Regulator (LQR)", "Partial Feedback Linearization (PFL)", "Trajectory Optimization", "Direct Collocation", "Iterative Linear Quadratic Regulator (iLQR)", "Trajectory Stabilization", "Riccati Gains Stabilization", "Time Varying Linear Quadrativ Regulator (TVLQR)", "The Double Pendulum System", "double_pendulum", "double_pendulum.analysis", "double_pendulum.controller", "double_pendulum.controller.energy", "double_pendulum.controller.friction_compensation", "double_pendulum.controller.gamepad", "double_pendulum.controller.gravity_compensation", "double_pendulum.controller.ilqr", "double_pendulum.controller.inverse_dynamics", "double_pendulum.controller.lqr", "double_pendulum.controller.lqr.roa", "double_pendulum.controller.partial_feedback_linearization", "double_pendulum.controller.pid", "double_pendulum.controller.trajectory_following", "double_pendulum.controller.tvlqr", "double_pendulum.experiments", "double_pendulum.model", "double_pendulum.simulation", "double_pendulum.system_identification", "double_pendulum.trajectory_optimization", "double_pendulum.trajectory_optimization.direct_collocation", "double_pendulum.trajectory_optimization.ilqr", "double_pendulum.utils", "double_pendulum.utils.filters", "Hardware", "Hardware Experiment Guide", "Motors", "MJBots", "T-Motor (AK-80-6)", "Hardware &amp; Testbench Description", "Welcome to Double Pendulum\u2019s documentation!", "Installation", "&lt;no title&gt;", "Repository Structure"], "terms": {"As": [0, 10], "ar": [0, 1, 2, 3, 4, 8, 10, 11, 14, 17, 22, 24, 25, 27, 28, 29, 31, 32, 36, 43, 44, 46, 48], "wildli": 0, "differ": [0, 44, 48], "method": [0, 3, 4, 6, 7, 8, 9, 10, 17, 20, 22, 25, 26, 32, 35, 36, 37, 43, 44, 45, 47, 48], "natur": [0, 14], "intent": 0, "compar": 0, "rate": [0, 43, 44], "motion": [0, 8, 31, 32, 40], "For": [0, 4, 6, 7, 9, 13, 14, 17, 24, 26, 32, 44, 46, 48], "make": [0, 14, 25, 31, 40, 43, 44, 46], "sim": 0, "real": [0, 1, 11, 14, 17, 32, 39, 40, 45, 48], "transfer": [0, 1, 11], "easier": 0, "robust": [0, 6, 44], "disturb": [0, 32], "form": [0, 14, 22, 25, 36, 43], "nois": [0, 1, 17, 32], "delai": [0, 1, 16, 32, 38], "can": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 26, 28, 29, 30, 31, 35, 36, 38, 39, 40, 41, 44, 45, 46, 48], "test": [0, 1, 44, 45, 46], "simul": [0, 1, 11, 15, 17, 25, 37, 45, 48], "anoth": [0, 11, 13, 44], "comparison": 0, "made": [0, 32, 44], "base": [0, 2, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 43], "criteria": 0, "fastest": [0, 25], "swing": [0, 7, 40, 44], "up": [0, 7, 11, 44], "least": [0, 1, 14, 38], "cost": [0, 3, 6, 8, 10, 22, 24, 25, 29, 35, 36, 44, 45], "transport": 0, "etc": [0, 45], "A": [0, 6, 12, 13, 17, 24, 31, 32, 37, 38, 43, 44], "leaderboard": 0, "i": [0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 48], "plane": [0, 25, 40, 44], "when": [1, 4, 6, 11, 12, 26, 31, 40, 43, 44, 45, 46], "from": [1, 3, 6, 7, 9, 11, 14, 17, 22, 23, 24, 25, 29, 30, 31, 32, 35, 38, 40, 41, 43, 44, 45, 48], "hardwar": [1, 14, 30, 45, 46, 47, 48], "mani": [1, 2, 44, 48], "effect": 1, "present": [1, 18, 45], "mai": [1, 44, 46, 48], "influenc": 1, "behavior": 1, "often": [1, 6, 46], "case": [1, 6, 7, 25, 40, 44], "tune": [1, 44], "capabl": 1, "high": [1, 12, 43, 44, 45], "qualiti": [1, 43], "perform": [1, 4, 8, 14, 32, 36, 43], "while": [1, 9, 40, 48], "system": [1, 2, 5, 6, 7, 8, 10, 11, 25, 26, 30, 31, 35, 39, 40, 43, 44, 45], "experi": [1, 15, 17, 39, 44, 45, 48], "thei": [1, 5, 17, 27, 28, 29, 32, 44, 48], "fail": 1, "achiev": 1, "desir": [1, 4, 7, 17, 21, 32, 38, 43], "result": [1, 13, 25, 31, 32, 35, 38, 44, 45], "thi": [1, 4, 5, 6, 7, 9, 11, 13, 14, 17, 18, 22, 24, 25, 27, 28, 29, 31, 32, 36, 37, 39, 43, 44, 45, 46, 48], "phenomenon": 1, "commonli": [1, 43], "refer": [1, 3, 17, 20, 22, 23, 26, 27, 28, 29, 32, 36, 38, 43, 48], "realiti": [1, 11], "gap": 1, "In": [1, 6, 9, 10, 17, 43, 44, 48], "order": [1, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 38, 43], "studi": [1, 45], "we": [1, 2, 6, 13, 14, 25, 37, 44, 46], "conduct": 1, "The": [1, 3, 4, 6, 7, 8, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 36, 38, 41, 43, 44, 46, 48], "quantifi": 1, "how": [1, 39, 43, 44], "well": [1, 6, 9, 25, 43, 44, 48], "under": [1, 25, 32, 43, 44], "follow": [1, 5, 10, 25, 27, 40, 43, 46, 48], "condit": [1, 17, 18], "model": [1, 2, 4, 12, 14, 15, 18, 19, 21, 22, 23, 24, 26, 29, 36, 44, 45], "inaccuraci": 1, "paramet": [1, 7, 9, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 40], "have": [1, 6, 25, 31, 40, 43, 44, 46, 48], "been": [1, 25, 48], "determin": [1, 17, 22, 25, 32, 36], "identif": 1, "never": [1, 44], "perfectli": 1, "accur": 1, "To": [1, 43, 48], "ass": 1, "vari": [1, 2, 4, 11, 48], "independ": [1, 14], "one": [1, 14, 17, 25, 43, 44, 45], "time": [1, 2, 4, 10, 11, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 43, 48], "us": [1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 38, 40, 43, 44, 45, 46, 48], "origin": [1, 31, 37], "measur": [1, 14, 17, 32, 38, 40, 43, 44], "output": [1, 17, 27, 32, 43, 44], "depend": [1, 43, 44, 46], "state": [1, 4, 5, 6, 9, 10, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 38, 48], "qdd": [1, 31, 45], "onlin": [1, 3, 4, 6, 13, 45], "veloc": [1, 17, 18, 22, 26, 30, 31, 32, 35, 36, 38, 43, 44], "noisi": 1, "henc": [1, 10, 43, 44], "import": [1, 43, 44], "handl": 1, "amount": [1, 44], "data": [1, 14, 24, 25, 29, 30, 32, 35, 37, 38, 43], "without": [1, 48], "low": [1, 43, 44, 45], "pass": [1, 25], "filter": [1, 17, 32, 37, 44, 48], "torqu": [1, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 38, 40, 43, 48], "Not": [1, 32, 48], "onli": [1, 10, 11, 17, 23, 25, 32, 38, 43, 44, 46, 48], "also": [1, 7, 10, 14, 25, 32, 44, 48], "alwai": [1, 11, 17, 40, 48], "exactli": 1, "valu": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 43], "respons": [1, 7, 38], "request": 1, "gener": [1, 14, 24, 25, 29, 35, 44], "constant": [1, 43], "chang": [1, 25, 31, 32, 38, 43, 44, 48], "dure": [1, 4, 11, 12, 32, 43, 44, 46, 48], "execut": [1, 3, 4, 11, 14, 28, 36, 48], "motor": [1, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 44, 45, 48], "howev": [1, 6, 44], "sometim": 1, "abl": [1, 10, 43, 44], "react": 1, "immedi": 1, "larg": [1, 44], "instead": [1, 5, 7, 9, 25, 30, 43, 44], "overshoot": 1, "undershoot": 1, "appli": [1, 14, 21, 32, 43], "tau": [1, 31, 32, 43], "tau_": 1, "t": [1, 4, 6, 10, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 37, 38, 41, 44, 48], "1": [1, 4, 5, 6, 7, 9, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 37, 38, 43, 44, 48], "k_": 1, "resp": 1, "de": [1, 45, 46], "here": [1, 2, 41, 43, 44], "last": [1, 32], "step": [1, 3, 4, 10, 13, 14, 22, 32, 36, 38, 43, 44], "factor": [1, 44], "which": [1, 6, 7, 8, 9, 13, 14, 17, 23, 24, 25, 26, 28, 29, 30, 31, 35, 39, 40, 43, 44, 45, 48], "scale": 1, "mean": 1, "perfect": [1, 44], "neq": 1, "over": [1, 5, 10, 14, 25, 32], "oper": [1, 7, 20, 39, 40, 43, 44, 46], "due": [1, 43, 45], "commun": [1, 44, 48], "reaction": 1, "There": [2, 48], "doubl": [2, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 35, 36, 39, 40, 41, 43, 44, 46, 47, 48], "pendulum": [2, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 39, 40, 41, 43, 44, 46, 47, 48], "acrobot": [2, 7, 14, 18, 24, 25, 26, 29, 31, 35, 36, 45], "pendubot": [2, 7, 14, 24, 26, 29, 31, 35, 36, 45], "categoris": 2, "them": [2, 17, 31], "trajectori": [2, 3, 4, 5, 9, 10, 12, 13, 14, 17, 22, 23, 24, 27, 28, 29, 32, 35, 36], "optim": [2, 3, 4, 6, 9, 10, 13, 14, 22, 24, 25, 26, 35, 36, 46, 48], "stabil": [2, 3, 4, 6, 13, 22, 24, 25, 28, 29, 48], "polici": [2, 6, 13], "predict": [2, 4, 12, 48], "even": [2, 4, 7, 11], "though": 2, "build": [2, 41, 45, 46], "upon": 2, "each": [2, 3, 10, 17, 32, 37], "other": [2, 18, 19, 21, 22, 23, 24, 25, 26, 29, 31, 36, 43, 48], "e": [2, 5, 6, 7, 10, 14, 24, 25, 33, 44, 48], "g": [2, 5, 6, 14, 31, 43, 44, 48], "comput": [2, 3, 6, 8, 9, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 48], "algorithm": [2, 13, 25, 45], "iter": [2, 3, 8, 22, 24, 36, 48], "linear": [2, 3, 5, 8, 11, 14, 17, 25, 26, 28, 31, 32, 45], "quadrat": [2, 3, 5, 8, 9, 24, 25, 29], "regul": [2, 3, 5, 8, 11, 44], "ilqr": [2, 3, 8, 12, 17, 34, 46, 48], "direct": [2, 6, 8, 35, 43, 44, 45, 48], "colloc": [2, 7, 8, 26, 35, 48], "quadrativ": [2, 11], "tvlqr": [2, 11, 17, 24], "riccati": [2, 6, 11], "gain": [2, 7, 11, 18, 21, 23, 26, 27, 28], "lqr": [2, 5, 10, 13, 17, 26, 36, 48], "partial": [2, 5, 6, 26], "feedback": [2, 5, 24, 26, 28], "pfl": [2, 5], "mpc": [2, 22], "idea": 3, "solv": [3, 4, 7, 10, 24, 25], "problem": [3, 4, 7, 9, 10, 25], "everi": [3, 4, 10, 43, 48], "timestep": [3, 17, 21, 22, 23, 24, 27, 30, 32, 35, 36], "again": 3, "At": [3, 43], "warm": [3, 4, 22], "start": [3, 4, 10, 17, 22, 30, 32, 36, 43, 44], "solut": [3, 4, 6, 9], "previou": [3, 4], "updat": [3, 32], "first": [3, 4, 17, 25, 31, 43, 44, 48], "command": [3, 32, 43], "either": [3, 5, 6, 41, 43], "refernc": 3, "free": [3, 4, 14, 16, 44], "where": [3, 6, 10, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 38, 44, 48], "full": [3, 4, 14, 32, 41, 44, 48], "newcommand": [4, 5, 6, 7, 9, 10, 13, 14, 44], "vect": [4, 5, 6, 7, 9, 10, 13, 14, 44], "boldsymbol": [4, 5, 6, 7, 9, 10, 13, 14, 44], "dvect": [4, 5, 6, 7, 9, 10, 13, 14, 44], "dot": [4, 5, 6, 7, 9, 10, 13, 14, 31, 44], "ddvect": [4, 5, 6, 7, 9, 10, 13, 14, 44], "ddot": [4, 5, 6, 7, 9, 10, 13, 14, 31, 44], "mat": [4, 5, 6, 7, 9, 10, 13, 14, 31, 44], "shoot": 4, "ha": [4, 25, 43, 44, 48], "properti": [4, 18, 26, 32], "all": [4, 13, 17, 18, 19, 21, 22, 23, 24, 26, 29, 31, 36, 43, 44, 48], "process": [4, 32, 38], "physic": [4, 25, 39, 44, 45], "feasibl": [4, 25, 26], "so": [4, 25, 44, 48], "stop": [4, 22, 36, 40, 43, 44], "befor": [4, 17, 43, 48], "converg": [4, 18], "inconsist": 4, "advantag": 4, "control": [4, 6, 7, 9, 10, 12, 15, 16, 30, 32, 35, 36, 37, 40, 44, 45, 47], "ansatz": 4, "input": [4, 7, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 36, 44], "u": [4, 5, 6, 9, 10, 13, 14, 24, 25, 27, 28, 29, 31, 32, 33, 37, 44], "_0": [4, 9, 10], "next": [4, 22, 43], "nomin": [4, 11, 13], "x": [4, 5, 6, 7, 9, 10, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 37, 38, 48], "d": [4, 6, 7, 13, 14, 25, 32, 37], "goal": [4, 9, 14, 16, 17, 18, 22, 24, 25, 26, 27, 29, 36, 37], "kept": [4, 44, 45], "fix": [4, 6, 10, 14, 27, 31, 43, 44], "do": [5, 40, 43, 44, 46, 48], "aim": [5, 43], "singular": 5, "defin": [5, 25, 48], "funtion": 5, "pi": [5, 6, 17, 22, 24, 26, 29, 36], "entir": [5, 10], "space": [5, 10, 48], "return": [5, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 43, 48], "signal": [5, 17, 30, 32, 38, 43, 44], "accord": [5, 25], "analyt": 5, "reason": 5, "about": [5, 44], "": [5, 6, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 38, 43], "energi": [5, 7, 17, 22, 23, 24, 26, 27, 29, 31, 36, 37, 44], "learn": 5, "reinforc": 5, "establish": [6, 43], "widespread": 6, "act": 6, "b": [6, 13, 24, 31, 37, 38], "an": [6, 7, 9, 10, 11, 14, 17, 22, 32, 38, 43, 44, 45, 48], "object": [6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 48], "specifi": [6, 31, 32], "instantan": 6, "function": [6, 7, 8, 9, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 37, 43, 48], "j": [6, 31], "q": [6, 7, 10, 14, 16, 24, 25, 29, 31, 33, 44], "r": [6, 9, 10, 12, 13, 16, 24, 25, 29, 35, 44, 46], "symmetr": 6, "posit": [6, 14, 18, 21, 22, 23, 26, 27, 30, 31, 32, 35, 36, 38, 43], "definit": [6, 25], "matric": [6, 10, 12, 14, 24, 29, 31], "succeq": 6, "0": [6, 7, 10, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 43, 46, 48], "succ": 6, "allow": [6, 9, 48], "reduc": 6, "hamilton": 6, "jacobi": 6, "bellman": 6, "hjb": 6, "equat": [6, 7, 24, 31], "whose": [6, 30, 32], "go": [6, 24, 25, 44], "infer": 6, "algebra": 6, "good": [6, 43], "numer": [6, 9], "solver": [6, 48], "exist": 6, "find": [6, 14, 25], "matrix": [6, 14, 24, 25, 28, 29, 31, 32, 44], "obtain": [6, 9], "k": [6, 13, 24, 25, 28, 37], "top": [6, 21], "dynam": [6, 9, 10, 11, 12, 13, 14, 17, 23, 24, 25, 31, 32, 43, 45, 47], "linearis": [6, 10, 13], "around": [6, 13, 25], "left": [6, 7, 14, 43], "frac": [6, 43, 44], "f": [6, 10, 14, 31, 44], "right": [6, 7, 14], "_": [6, 9, 10, 14], "actuat": [6, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 44, 45], "express": [6, 10], "rel": [6, 10, 43], "coordin": [6, 10, 14, 31, 32], "tild": [6, 10], "mathcal": 6, "point": [6, 9, 10, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 35, 36, 37, 43, 46], "star": 6, "describ": [6, 7, 24, 29, 31, 32, 43, 45], "set": [6, 10, 17, 18, 19, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 36, 44, 48], "initi": [6, 9, 17, 18, 21, 22, 23, 26, 27, 28, 29, 30, 32, 35, 48], "rightarrow": 6, "infti": 6, "possibl": [6, 7, 43, 46], "estim": [6, 25, 44, 48], "consid": [6, 7, 14], "sublevel": 6, "lyapunov": 6, "v": [6, 25, 38, 43, 44], "serv": [6, 44, 45], "2": [6, 7, 9, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 43, 44, 48], "written": [6, 14, 48], "text": [6, 9, 10, 14], "est": 6, "vert": 6, "leq": [6, 9], "rho": [6, 25], "scalar": [6, 31, 33], "probabilist": [6, 25], "3": [6, 7, 9, 16, 17, 21, 22, 23, 24, 25, 26, 29, 31, 36, 37, 38, 44, 46], "4": [6, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 46], "further": [6, 13], "read": [6, 7, 13, 20, 30, 38, 48], "lectur": [6, 13, 24], "note": [6, 13, 44, 46], "h": [6, 43, 48], "khalil": 6, "nonlinear": [6, 9, 10, 12], "3rd": 6, "ed": 6, "upper": [6, 7], "saddl": 6, "river": 6, "n": [6, 9, 10, 12, 16, 22, 23, 24, 25, 27, 28, 29, 30, 32, 35, 36, 38, 43], "prentic": 6, "hall": 6, "2002": 6, "tedrak": [6, 13], "underactu": [6, 7, 13, 45, 46], "robot": [6, 10, 12, 13, 24, 25, 26, 29, 31, 35, 36, 45, 46], "2022": [6, 13, 24], "url": [6, 7, 9, 10, 13], "http": [6, 7, 9, 10, 13, 18, 24, 25, 26, 36, 38, 43, 45, 46], "mit": [6, 13, 43], "edu": [6, 13, 25], "najafi": [6, 25], "babu\u0161ka": 6, "lope": 6, "fast": [6, 25], "sampl": [6, 25, 35], "domain": 6, "vol": [6, 7, 25], "86": 6, "pp": [6, 7, 10, 12], "823": 6, "834": 6, "oct": 6, "2016": 6, "link": [6, 7, 10, 14, 18, 19, 21, 22, 23, 24, 26, 29, 31, 36, 44, 45], "springer": 6, "com": [6, 7, 16, 18, 19, 21, 22, 23, 24, 25, 26, 29, 31, 36, 37, 43, 46], "articl": [6, 7, 26], "10": [6, 7, 9, 10, 16, 18, 22, 25, 30, 31, 36, 38], "1007": 6, "s11071": 6, "016": 6, "2926": 6, "7": [6, 7], "p": [6, 25, 44], "parrilo": 6, "structur": [6, 25, 45, 47], "semidefinit": 6, "program": [6, 9, 12], "semialgebra": 6, "ge": 6, "ometri": 6, "ph": 6, "dissert": 6, "california": 6, "institut": 6, "technologi": 6, "pasadena": 6, "2000": 6, "www": [6, 7, 10, 26, 36, 43], "proquest": 6, "openview": 6, "ff5fe1a4311720ae2dad28ddc1d22cf8": 6, "cbl": 6, "18750": 6, "diss": 6, "y": [6, 25, 32, 37, 38], "pq": 6, "origsit": 6, "gscholar": 6, "parentsessionid": 6, "mjxeze6vrvd": 6, "2besjkr1uey6zldtg74txylcbk173fana": 6, "3d": 6, "classic": [7, 44], "theori": 7, "With": [7, 46], "provok": 7, "both": [7, 17, 43, 44], "joint": [7, 14, 31, 44], "intuit": [7, 25], "its": [7, 45], "manipul": [7, 12, 14], "u_1": [7, 14], "equiv": 7, "begin": [7, 14, 43], "arrai": [7, 14, 17, 24, 25, 29, 31, 32, 36, 37, 38, 48], "cc": [7, 14], "m_": [7, 14], "11": [7, 37], "12": [7, 43], "21": [7, 43], "22": 7, "end": [7, 14, 30, 31, 43, 44], "c": [7, 14, 25, 31, 32, 36, 37, 44, 46, 48], "_1": [7, 10, 14, 31], "_2": [7, 14, 31], "c_": [7, 14], "g_1": 7, "g_2": 7, "f_1": 7, "f_2": 7, "u_2": [7, 14], "unactu": 7, "part": [7, 40], "vector": [7, 14, 28, 31, 38], "acceler": [7, 18, 19, 21, 22, 23, 24, 26, 29, 31, 35, 36, 43], "plug": 7, "lower": 7, "now": 7, "design": [7, 10, 25, 31, 40, 43, 44, 48], "pd": 7, "term": [7, 17], "k_p": 7, "q_2": [7, 14], "k_d": 7, "k_e": [7, 43], "label": [7, 10, 14, 16, 43, 48], "eq": [7, 10, 13, 14], "pfl_acro_col": 7, "configur": [7, 25, 40, 43, 44], "second": [7, 17, 31, 44, 48], "total": [7, 14, 31, 44], "abov": [7, 18, 19, 21, 22, 23, 24, 26, 29, 31, 36], "call": [7, 17, 36, 44, 46, 48], "similarli": 7, "elimin": 7, "than": [7, 17, 32, 44], "non": [7, 10, 25, 26, 45], "done": [7, 25, 32, 43, 46], "same": [7, 43, 48], "wai": [7, 48], "law": 7, "q_1": [7, 14], "_pfl_pendu_col": 7, "m": [7, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 31, 32, 36, 43, 44], "w": [7, 9, 43], "spong": [7, 26], "ifac": 7, "proceed": 7, "volum": [7, 25], "27": [7, 44], "14": [7, 31], "833": 7, "838": 7, "sep": 7, "1994": 7, "doi": [7, 9, 10, 18, 36], "1016": 7, "s1474": 7, "6670": 7, "17": 7, "47404": 7, "sciencedirect": [7, 26], "scienc": [7, 26], "pii": [7, 26], "s1474667017474040": [7, 26], "via": [7, 26, 32, 43], "3dihub": [7, 26], "ieee": [7, 12, 26], "magazin": 7, "15": [7, 14, 24, 25, 43, 44], "49": 7, "55": 7, "feb": 7, "1995": 7, "1109": 7, "37": 7, "341864": [7, 26], "ieeexplor": [7, 26], "org": [7, 9, 10, 25, 26, 36], "document": [7, 26, 41, 43, 44, 47], "class": [7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 48], "mechan": [7, 25, 40, 44, 45], "29": 7, "2828": 7, "2832": 7, "jun": 7, "1996": 7, "58105": 7, "s1474667017581057": [7, 26], "respect": [8, 10], "fucntion": 8, "encod": [8, 43, 45], "suppos": [8, 17, 32], "swingup": [8, 18], "belong": 9, "transform": 9, "mathemat": [9, 11, 14], "transcrib": 9, "knot": [9, 35], "_i": [9, 10, 14], "loss": 9, "l": [9, 10, 12], "minim": 9, "decis": 9, "variabl": [9, 31, 32], "formul": [9, 25], "x_": 9, "init": [9, 17, 21, 22, 24, 29, 36], "obei": 9, "limit": [9, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 40, 44], "u_": 9, "max": [9, 38, 43, 44], "min_": [9, 10], "ldot": [9, 10, 14], "subject": [9, 10], "hspace": [9, 10], "1cm": [9, 10], "f_": [9, 10], "discret": [9, 10, 14, 24, 31], "quad": [9, 14], "foral": 9, "x_0": 9, "x_n": 9, "sequenti": 9, "sqp": 9, "practic": [9, 45], "interpol": [9, 22, 27, 28, 29], "between": [9, 17, 25, 38, 43, 44, 48], "polynomi": [9, 22, 28, 35, 37, 38], "piecewis": 9, "fewer": 9, "still": [9, 25], "consist": [9, 44, 48], "hargrav": 9, "charl": 9, "stephen": 9, "pari": 9, "journal": 9, "guidanc": [9, 44], "1987": 9, "338": 9, "342": 9, "arc": [9, 32], "aiaa": 9, "ab": [9, 18, 38], "2514": 9, "20223": 9, "extens": [10, 13], "long": 10, "error": [10, 11, 18, 21, 22, 23, 26, 27, 36, 37, 43, 46], "small": [10, 11, 43, 44], "contrast": 10, "given": [10, 48], "deal": [10, 25], "being": [10, 30, 43], "finit": [10, 24], "horizon": [10, 22, 24, 25, 36], "sequenc": 10, "_n": 10, "sum_": 10, "ilqr_opt": 10, "beforehand": 10, "_f": 10, "penal": 10, "final": [10, 22, 24, 29, 32, 36], "intermedi": 10, "weiwei": 10, "todorov": 10, "biolog": 10, "movement": [10, 43], "intern": [10, 12, 17, 32], "confer": [10, 12], "informat": 10, "autom": [10, 12], "222": 10, "229": 10, "2004": 10, "scitepress": [10, 36], "aspx": [10, 36], "5220": [10, 36], "0001143902220229": [10, 36], "precomput": 11, "need": [11, 17, 32, 43, 44, 46], "approxim": [11, 14, 25, 38], "becaus": [11, 43, 44], "sum": [11, 17, 24], "eventu": 11, "deviat": [11, 32], "differenti": [12, 27, 43], "ddp": 12, "alter": 12, "applic": [12, 43, 44], "discuss": [12, 45], "kleff": 12, "meduri": 12, "budhiraja": 12, "mansard": 12, "righetti": 12, "frequenc": [12, 35, 38, 43, 44], "2021": 12, "icra": 12, "7330": 12, "7336": 12, "regular": [13, 22, 36, 43], "formal": 13, "requir": [13, 25, 43, 44, 45], "ref": 13, "dyn": [13, 14], "page": [14, 25, 39, 43, 45], "give": [14, 30, 39, 44], "overview": 14, "descript": [14, 31, 39], "includ": [14, 32, 44, 46], "8": [14, 30, 38, 46], "name": [14, 48], "mass": [14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 29, 31, 32, 36, 37, 44, 48], "m_1": 14, "m_2": 14, "length": [14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 29, 31, 35, 36, 37, 48], "l_1": 14, "l_2": 14, "center": [14, 18, 19, 21, 22, 23, 24, 26, 29, 31, 32, 36], "r_1": 14, "r_2": 14, "inertia": [14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 29, 31, 36, 37, 43, 48], "i_1": 14, "i_2": 14, "two": [14, 17, 44, 45, 46, 48], "6": [14, 16, 18, 21, 22, 23, 24, 25, 29, 31, 36, 37, 41, 44, 46], "i_r": 14, "gear": [14, 18, 31, 43], "ratio": [14, 18, 31, 43], "g_r": 14, "coulomb": [14, 17, 18, 19, 21, 22, 23, 24, 26, 29, 31, 36], "friction": [14, 17, 18, 19, 21, 22, 23, 24, 26, 29, 31, 36, 43, 45, 48], "f1": 14, "f2": 14, "viscou": 14, "b_1": 14, "b_2": 14, "graviti": [14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 31, 36, 48], "angl": [14, 30, 32], "hang": 14, "contain": [14, 17, 23, 24, 25, 26, 31, 32, 44], "deriv": [14, 21, 23, 31, 43], "dyn2": 14, "bottom": 14, "half": 14, "known": 14, "entiti": 14, "s_1": 14, "sin": 14, "c_1": 14, "co": 14, "2m_2": 14, "2l_1m_2r_2c_2": 14, "2i_r": 14, "l_1m_2r_2c_2": 14, "g_ri_r": 14, "corioli": [14, 31], "l_": 14, "r_": 14, "s_2": 14, "coriolis_matrix": [14, 31], "s_": 14, "gravity_matrix": 14, "sign": 14, "arctan": 14, "100": [14, 22, 25, 29, 36, 37, 38, 43], "friction_matrix": 14, "select": [14, 43], "pendu": 14, "acro": 14, "fulli": [14, 23, 44], "kinet": [14, 31, 44], "e_": [14, 44], "kin": [14, 44], "potenti": [14, 31, 44, 48], "pot": 14, "provid": [14, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 36, 44, 45], "easili": 14, "identifi": [14, 48], "parmat": 14, "By": [14, 44], "excit": 14, "tupl": 14, "record": [14, 32, 43], "best": [14, 25, 45], "fact": 14, "squar": [14, 38], "analysi": 15, "system_identif": 15, "trajectory_optim": 15, "util": [15, 30, 48], "x0": [16, 17, 25, 31, 32, 37, 38], "dt": [16, 17, 21, 22, 23, 24, 25, 27, 30, 31, 32, 36, 37, 38], "t_final": [16, 25, 30, 37], "epsilon": 16, "check_only_final_st": 16, "fals": [16, 17, 25, 26, 28, 32, 33, 37], "friction_compens": [16, 17], "true": [16, 22, 25, 27, 32, 33, 37], "integr": [16, 21, 22, 23, 24, 25, 27, 32, 36, 37], "runge_kutta": [16, 22, 25, 32, 36], "save_dir": [16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 35, 37], "compute_model_robust": 16, "compute_noise_robust": 16, "compute_unoise_robust": 16, "compute_uresponsiveness_robust": 16, "compute_delay_robust": 16, "mpar_var": 16, "ir": [16, 31, 43, 48], "m1r1": 16, "i1": [16, 18, 19, 21, 22, 23, 24, 26, 29, 31, 36, 48], "b1": [16, 17, 18, 19, 21, 22, 23, 24, 26, 29, 31, 36, 48], "cf1": [16, 17, 18, 19, 21, 22, 23, 24, 26, 29, 31, 36, 48], "m2r2": 16, "m2": [16, 18, 19, 21, 22, 23, 24, 25, 26, 29, 31, 36, 48], "i2": [16, 18, 19, 21, 22, 23, 24, 26, 29, 31, 36, 48], "b2": [16, 17, 18, 19, 21, 22, 23, 24, 26, 29, 31, 36, 48], "cf2": [16, 17, 18, 19, 21, 22, 23, 24, 26, 29, 31, 36, 48], "modelpar_var_list": 16, "repetit": [16, 37], "meas_noise_mod": 16, "vel": [16, 32, 43], "meas_noise_sigma_list": 16, "5": [16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 29, 31, 37, 43], "meas_noise_cut": [16, 17, 32], "meas_noise_vfilt": [16, 32], "lowpass": [16, 17, 32, 38], "meas_noise_vfilter_arg": [16, 32], "alpha": [16, 32, 38], "u_noise_sigma_list": 16, "u_respons": [16, 32], "delay_mod": [16, 32], "01": [16, 21, 22, 23, 24, 25, 27, 30, 36, 38], "02": [16, 32], "05": [16, 25], "check_delay_robust": 16, "posvel": [16, 32], "check_goal_success": 16, "x_traj": [16, 24], "check_meas_noise_robust": 16, "none": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 37, 38], "lowpass_alpha": 16, "check_modelpar_robust": 16, "var_list": 16, "check_perturbation_robust": 16, "time_stamp": 16, "tau_pert": 16, "check_unoise_robust": 16, "check_uresponsiveness_robust": 16, "compute_cost": 16, "u_traj": [16, 24], "mode": [16, 25, 43], "compute_ref_cost": 16, "compute_success_measur": 16, "set_cost_par": 16, "qf": [16, 24, 29], "set_init_traj": 16, "trajectory_csv": 16, "set_model_paramet": [16, 22, 25, 36], "608": [16, 22, 25, 31, 36], "63": [16, 22, 25, 31, 36], "275": [16, 22, 25, 31, 36], "166": [16, 22, 25, 36], "damp": [16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 31, 36, 37], "081": [16, 22, 25, 36], "cfric": [16, 31], "093": [16, 22, 25, 31, 36], "186": [16, 22, 25, 36], "9": [16, 18, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 36, 38], "81": [16, 18, 19, 21, 22, 23, 24, 25, 26, 29, 31, 36], "05472": [16, 22, 25, 36], "02522": [16, 22, 25, 36], "motor_inertia": [16, 18, 31], "torque_limit": [16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 36, 37], "model_par": [16, 18, 19, 21, 22, 23, 24, 25, 26, 29, 31, 35, 36, 37], "simulate_and_get_cost": 16, "plot_benchmark_result": 16, "results_dir": 16, "costlim": 16, "1000000": [16, 43], "show": [16, 25, 33, 37, 38, 43, 44], "save": [16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 36, 48], "plot_model_robustness_multi": 16, "get_delay_scor": 16, "res_dict": 16, "get_measurement_noise_scor": 16, "get_model_scor": 16, "get_scor": 16, "get_unoise_scor": 16, "get_uresponsiveness_scor": 16, "get_par_list": 16, "min_rel": 16, "max_rel": 16, "gamepad": 17, "gravity_compens": 17, "inverse_dynam": [17, 31], "partial_feedback_linear": 17, "pid": [17, 21, 23, 43], "trajectory_follow": 17, "abstractcontrol": [17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29], "abc": 17, "abstract": 17, "should": [17, 22, 27, 28, 29, 30, 38, 43, 44, 48], "inherit": [17, 48], "filter_measur": [17, 32], "last_u": 17, "array_lik": [17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36], "shape": [17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 44, 48], "dtype": [17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 36], "float": [17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36], "angle1": [17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 35, 36], "angle2": [17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 35, 36], "velocity1": [17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 35, 36], "velocity2": [17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 35, 36], "unit": [17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 43, 48], "rad": [17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 43], "u1": [17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 35, 36], "u2": [17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 35, 36], "nm": [17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 38, 43], "numpy_arrai": [17, 22, 23, 24, 27, 28, 29, 32, 35, 36], "get_control_output": [17, 48], "loop": [17, 25, 30, 40, 43, 48], "get": [17, 22, 23, 27, 28, 29, 31, 32, 35, 37, 40, 44, 46], "doe": [17, 23, 24, 25, 31, 32, 43], "get_control_output_": [17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 48], "compens": [17, 19, 21, 48], "activ": [17, 26, 43, 45], "option": [17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 43, 44, 48], "overwritten": 17, "actual": [17, 25, 31, 32, 43], "api": 17, "adapt": [17, 44], "unus": 17, "default": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36], "get_forecast": [17, 22], "forecast": [17, 22], "plan": [17, 22], "list": [17, 22, 24, 26, 30, 31, 32, 35, 36, 37, 45], "placehold": 17, "get_friction_torqu": 17, "get_gravity_torqu": 17, "get_init_trajectori": [17, 22, 23, 27, 28, 29], "addit": [17, 28, 43, 44, 48], "specif": [17, 31, 44, 48], "init_": [17, 18, 21, 22, 23, 24, 26, 27, 29, 48], "log": [17, 24, 29, 30, 35, 48], "init_filt": [17, 32], "reset": [17, 32, 48], "reset_": [17, 48], "insid": [17, 43, 48], "string": [17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36], "path": [17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 35, 44], "directori": [17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 35, 44, 48], "save_": [17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29], "set_filter_arg": 17, "filt": [17, 33], "141592653589793": [17, 22, 24, 25, 26, 29], "001": [17, 38], "plant": [17, 24, 25, 32, 35, 48], "velocity_cut": 17, "filter_kwarg": 17, "argument": [17, 32], "No": [17, 32], "kalman": [17, 32, 38], "unscented_kalman": [17, 32], "unscent": [17, 32], "np": [17, 18, 20, 22, 24, 26, 29, 31, 32, 36, 38], "symbolicdoublependulum": [17, 24, 31, 32], "doublependulumpl": [17, 24, 31, 32], "kinemat": [17, 24, 31, 32], "necessari": [17, 24, 29, 35, 44], "smaller": [17, 32], "assum": [17, 32], "cut": [17, 32, 43, 44], "dict": [17, 25, 31, 32], "dictionari": [17, 31, 32], "set_friction_compens": 17, "coulomb_fr": [17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 31, 36, 37], "coeffici": [17, 18, 19, 21, 22, 23, 24, 26, 29, 31, 36], "kg": [17, 18, 19, 21, 22, 23, 24, 26, 29, 31, 36, 43], "set_goal": [17, 18, 21, 22, 24, 26, 27, 29, 36], "set_gravity_compens": 17, "set_paramet": [17, 18, 21, 22, 23, 24, 27, 36], "set_start": [17, 22, 36], "combinedcontrol": 17, "controller1": 17, "controller2": 17, "condition1": 17, "condition2": 17, "compute_both": 17, "combin": [17, 43, 44], "switch": [17, 26, 44], "must": [17, 43], "functin": 17, "bool": [17, 22, 26, 27, 28, 32], "flag": [17, 32], "whether": [17, 22, 26, 27, 28, 32], "Will": [17, 32], "check": [17, 18], "potetntiolli": 17, "like": [17, 31, 32, 44, 48], "controller1_par": 17, "controller2_par": 17, "parametr": 17, "pars": [17, 48], "simultaneouscontrol": 17, "forecast_con": 17, "multipl": [17, 25, 43], "add": [17, 32, 44], "containint": 17, "int": [17, 18, 22, 27, 28, 29, 30, 31, 35, 36], "integ": [17, 48], "indic": [17, 25, 43, 48], "self": [17, 48], "fc_ind": 17, "intit": 17, "controller_par": 17, "energycontrol": 18, "gear_ratio": [18, 31], "inf": [18, 20, 26, 31], "paper": [18, 26, 36], "onlinelibrari": 18, "wilei": 18, "1002": 18, "rnc": 18, "1184": 18, "m1": [18, 19, 21, 22, 23, 24, 26, 29, 31, 36, 48], "l1": [18, 19, 21, 22, 23, 24, 25, 26, 29, 31, 36, 48], "l2": [18, 19, 21, 22, 23, 24, 25, 26, 29, 31, 36, 48], "r1": [18, 19, 21, 22, 23, 24, 26, 29, 31, 36, 48], "r2": [18, 19, 21, 22, 23, 24, 26, 29, 31, 36, 48], "downward": [18, 19, 21, 22, 23, 24, 26, 29, 31, 36], "s\u00b2": [18, 19, 21, 22, 23, 24, 26, 29, 31, 36], "m\u00b2": [18, 19, 21, 22, 23, 24, 26, 29, 31, 36], "entri": [18, 19, 21, 22, 23, 24, 25, 26, 29, 31, 32, 36], "l\u00b2": [18, 19, 21, 22, 23, 24, 26, 29, 31, 36], "ir1": [18, 31], "ir2": [18, 31], "tl1": [18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 36, 48], "tl2": [18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 36, 48], "model_paramet": [18, 19, 21, 22, 23, 24, 26, 29, 35, 36, 48], "If": [18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 35, 36, 43, 44, 46, 48], "overwrit": [18, 19, 21, 22, 23, 24, 26, 29, 31, 36], "check_paramet": 18, "fulfil": 18, "kp": [18, 21, 23, 27, 43], "kd": [18, 21, 23, 27, 43], "kv": 18, "kd_func": 18, "q2": [18, 31, 38], "a1": 18, "a2": 18, "a3": 18, "er": 18, "frictioncompensationcontrol": 19, "gamepad_nam": 20, "logitech": 20, "rumblepad": 20, "usb": [20, 43, 44], "type": [20, 30, 43, 48], "current": [20, 40, 43, 44], "support": 20, "gamepadcontrol": 20, "pidgravitycompensationcontrol": 21, "gravit": 21, "forc": [21, 40, 44], "ki": [21, 23, 27], "proport": [21, 23, 43], "gravitycompensationcontrol": 21, "ilqrmpccppcontrol": 22, "python": [22, 36, 46, 48], "bind": [22, 36, 46, 48], "cpp": [22, 46], "630": [22, 31, 36], "compute_init_traj": 22, "1000": [22, 25, 30, 36, 43], "005": [22, 26, 31, 36], "max_it": [22, 36], "regu_init": [22, 36], "max_regu": [22, 36], "10000": [22, 25, 33, 36, 37], "min_regu": [22, 36], "break_cost_redu": [22, 36], "1e": [22, 25, 36, 37], "06": [22, 36, 38], "scu": [22, 36], "scp": [22, 36], "scv": [22, 36], "scen": [22, 36], "fcp": [22, 36], "fcv": [22, 36], "fcen": [22, 36], "number": [22, 25, 27, 28, 29, 35, 36, 37, 43, 48], "maximum": [22, 35, 36, 44], "per": [22, 36], "minimum": [22, 35, 36], "reduct": [22, 36], "stage": [22, 36], "weight": [22, 36, 43, 44], "euler": [22, 32, 36], "rung": [22, 32, 36], "kutta": [22, 32, 36], "load_init_traj": 22, "csv_path": [22, 23, 27, 28, 29, 37], "num_break": [22, 27, 28, 29, 37], "40": [22, 27, 28, 29, 37, 44], "poly_degre": [22, 37], "load": [22, 31, 44, 48], "csv": [22, 23, 27, 28, 29, 30, 36, 48], "file": [22, 23, 24, 27, 28, 29, 30, 31, 35, 36, 43, 44, 48], "store": [22, 24, 27, 28, 29, 30, 31, 32, 35, 43, 44, 48], "standarf": [22, 27, 28, 29], "format": [22, 27, 28, 29, 48], "repo": [22, 27, 28, 29], "break": [22, 27, 28, 29, 37, 44], "degre": [22, 25, 31, 38, 43], "set_cost_paramet": [22, 24, 25, 26, 29, 36], "set_cost_parameters_": [22, 24, 26, 36], "par": [22, 24, 25, 26, 33, 36, 37], "scu1": [22, 36], "scp1": [22, 36], "scp2": [22, 36], "scv1": [22, 36], "scv2": [22, 36], "fcp1": [22, 36], "fcp2": [22, 36], "fcv1": [22, 36], "fcv2": [22, 36], "set_final_cost_paramet": 22, "trajectory_stabil": 22, "shift": [22, 38], "freeli": 22, "ilqrmpc_swingup_loss": 22, "bound": [22, 25, 33, 36, 37], "loss_weight": [22, 36, 37], "rescale_par": [22, 25, 33, 36, 37], "unscale_par": [22, 25, 33, 36, 37], "computedtorquecontrol": 23, "invers": [23, 31, 44], "obj": 23, "inversedynamicscontrol": 23, "roa": 24, "dlqr": 24, "iterative_riccati": 24, "ricatti": 24, "intend": 24, "more": [24, 25, 44, 46, 48], "inform": [24, 39, 44, 46], "see": 24, "exampl": [24, 38, 43], "github": 24, "16": 24, "745": 24, "notebook": 24, "tree": [24, 37], "main": [24, 38, 43, 44, 48], "207": 24, "lagrang": [24, 25], "multipli": [24, 25, 31], "constraint": 24, "continu": [24, 43], "dx": 24, "lqrcontrol": 24, "unstabl": 24, "fixpoint": 24, "set_cost_matric": 24, "directli": [24, 32, 48], "p1p1_cost": [24, 25], "p2p2_cost": [24, 25], "v1v1_cost": [24, 25], "v2v2_cost": [24, 25], "p1p2_cost": [24, 25], "v1v2_cost": [24, 25], "p1v1_cost": [24, 25], "p1v2_cost": [24, 25], "p2v1_cost": [24, 25], "p2v2_cost": [24, 25], "u1u1_cost": [24, 25], "u2u2_cost": [24, 25], "u1u2_cost": [24, 25], "p1p1": 24, "p1p2": 24, "p1v1": 24, "p1v2": 24, "p2p2": 24, "p2v1": 24, "p2v2": 24, "v1v1": 24, "v1v2": 24, "v2v2": 24, "u1u1": 24, "u1u2": 24, "u2u2": 24, "diagon": 24, "failure_valu": 24, "nan": 24, "cost_to_go_cut": 24, "exce": 24, "retur": 24, "lqrcontroller_nonsymbol": 24, "version": [24, 44, 45, 46], "symbol": [24, 31], "thu": 24, "compat": [24, 48], "cma": [24, 33], "urdf_path": [24, 29, 35], "drake": [24, 29, 35], "urdf": [24, 29, 35, 45], "temporari": [24, 29, 35], "lqr_check_ctg": 25, "tf": [25, 32], "sim_callback": 25, "callback": 25, "probabilit": 25, "lqr_check_ctg_verif": 25, "dpar": 25, "cpar": 25, "grid": 25, "idx1": 25, "idx2": 25, "lqr_check_epsilon": 25, "14159265": 25, "eps_p": 25, "eps_v": 25, "lqr_check_epsilon_verif": 25, "caprr_coopt_interfac": 25, "design_param": 25, "backend": 25, "sos_con": 25, "log_obj_fct": 25, "verbos": [25, 26], "estimate_clbk": 25, "najafi_ev": 25, "combined_opt_obj": 25, "y_comb": 25, "q11": 25, "q22": 25, "q33": 25, "q44": 25, "r11": 25, "r22": 25, "combined_reduced_opt_obj": 25, "design_and_lqr_opt_obj": 25, "design_opt_obj": 25, "lqr_param_opt_obj": 25, "lqr_param_reduced_opt_obj": 25, "logger": 25, "log_and_print_clbk": 25, "rho_f": 25, "najafi_direct": 25, "directspher": 25, "r_i": 25, "r_o": 25, "implement": [25, 32, 35, 36, 43, 45, 48], "krauth": 25, "werner": 25, "statist": 25, "oxford": 25, "master": 25, "seri": [25, 43, 44], "13": 25, "univers": [25, 43], "press": [25, 43], "2006": 25, "42": 25, "getellipseparamsfromquad": 25, "s0idx": 25, "s1idx": 25, "ellips": 25, "match": 25, "funnel": 25, "plot": [25, 32, 38, 43], "getellipsepatch": 25, "x1": [25, 31], "just": 25, "patch": [25, 32], "involv": 25, "centerpoint": 25, "rhohist": 25, "plotellips": 25, "save_to": [25, 33, 37], "quadform": 25, "helper": 25, "tmx": 25, "samplefromellipsoid": 25, "rinner": 25, "router": 25, "volellipsoid": 25, "calcul": [25, 31, 32, 35, 36, 44], "hyperellipsoid": 25, "hyperllipsoid": 25, "math": 25, "stackexchang": 25, "question": 25, "332391": 25, "332434": 25, "textbook": 25, "gatech": 25, "ila": 25, "html": [25, 38], "ball": 25, "en": [25, 38, 43], "wikipedia": 25, "wiki": 25, "volume_of_an_n": 25, "check_x0": 25, "ep": 25, "compute_roa_prob": 25, "n_iter": 25, "n_check_sim": 25, "xbar_max": 25, "roa_prob_loss": 25, "sosdoublependulumdynam": 25, "param": 25, "u_minus_vec": 25, "u_plus_vec": 25, "lib": 25, "facil": 25, "bisect_and_verifi": 25, "hyper_param": 25, "rho_min": 25, "rho_max": 25, "maxit": 25, "simpl": [25, 44], "bisect": 25, "root": 25, "choosen": 25, "after": [25, 43, 48], "trial": 25, "probtiroa": 25, "roaconf": 25, "simfct": 25, "infinit": [25, 38], "tilqr": 25, "take": [25, 37, 44], "boolean": 25, "success": [25, 35], "conf": 25, "x0star": 25, "xbar0max": 25, "todo": 25, "nsimul": 25, "doestim": 25, "rho_equalityconstrain": 25, "taylor_deg": 25, "lambda_deg": 25, "x_bar_ev": 25, "taylor": 25, "lamda_deg": 25, "It": [25, 26, 40, 43, 44, 45], "equal": 25, "constrain": 25, "complet": [25, 43, 44], "unconstrain": 25, "surprisingli": 25, "usual": [25, 37, 43], "slightli": 25, "overestim": 25, "worst": 25, "veri": [25, 40, 43, 44], "conveni": [25, 48], "wrt": 25, "On": 25, "hand": 25, "bad": 25, "close": [25, 43], "drammat": 25, "decreas": [25, 43, 44], "verify_double_pendulum_rho": 25, "three": [25, 43], "theoret": 25, "satur": 25, "mid": 25, "underestim": 25, "could": [25, 43], "sens": [25, 31], "maxim": 25, "region": 25, "occur": 25, "valid": [25, 30], "slowest": 25, "much": [25, 44], "calc_roa": 25, "c_par": 25, "m_par": 25, "roa_backend": 25, "roa_alternate_opt": 25, "init_par": [25, 37], "par_prefactor": 25, "20": 25, "maxfevals_per_opt": 25, "sigma_dec": 25, "opt_ord": 25, "100000": 25, "num_proc": [25, 33, 37], "roa_design_opt": 25, "lqr_par": 25, "maxfev": [25, 33, 37], "sigma0": [25, 33, 37], "roa_lqr_opt": 25, "roa_lqrandmodelpar_lossfunc": 25, "roa_lqrpar_lossfunc": 25, "roa_modelpar_lossfunc": 25, "energyshapingpflandlqrcontrol": 26, "nergi": 26, "print": [26, 43], "kpo": 26, "kvel": 26, "ken": 26, "energyshapingpflcontrol": 26, "symbolicpflcontrol": 26, "symbolicpflandlqrcontrol": 26, "pfl_method": 26, "noncolloc": 26, "energysat": 26, "q1sat": 26, "q1": [26, 31, 38], "pointpidcontrol": 27, "trajpidcontrol": 27, "use_feed_forward_torqu": 27, "prefer": [27, 28, 29], "feed": [27, 43], "forward": [27, 31, 43], "feedforwardcontrol": 28, "feedforward": 28, "trajectorycontrol": 28, "kk_stabil": 28, "trajectoryinterpcontrol": 28, "tvlqrcontrol": 29, "diag": 29, "ey": [29, 32], "zero": [29, 30, 32, 43], "rad2rev": 30, "angle_in_radian": 30, "convert": [30, 31, 44], "radian": [30, 43], "revolut": [30, 43], "rev2rad": 30, "angle_in_revolut": 30, "rev": 30, "save_data": 30, "date": 30, "shoulder_meas_po": [30, 37], "shoulder_meas_vel": [30, 37], "shoulder_meas_tau": [30, 33, 37], "elbow_meas_po": [30, 37], "elbow_meas_vel": [30, 37], "elbow_meas_tau": [30, 33, 37], "meas_tim": [30, 37], "deprec": 30, "One": [30, 44], "save_trajectori": [30, 37, 48], "setzeroposit": 30, "initpo": 30, "initvel": 30, "inittau": 30, "tmotor": [30, 43], "motor_driv": 30, "canmotorlib": 30, "canmotorcontrol": [30, 43], "sensor": [30, 38], "run_experi": 30, "can_port": 30, "can0": [30, 43], "motor_id": [30, 43], "motor_typ": 30, "ak80_6_v1p1": 30, "tau_limit": [30, 35], "durat": 30, "port": [30, 43], "id": [30, 43, 48], "motor_send_n_command": 30, "numtim": 30, "motor_send_n_commands2": 30, "motor_speed_test": 30, "motor_speed_test2": 30, "profil": [30, 43], "data_dict": 30, "meas_dt": 30, "avg": 30, "numstep": 30, "yb_friction_matrix": 31, "dq_vec": 31, "contribut": [31, 48], "dq1": 31, "dq2": 31, "numpi": [31, 37], "415": 31, "0475": 31, "0798": 31, "dof": 31, "filepath": [31, 32], "model_design": 31, "model_id": [31, 48], "freedom": 31, "yaml": 31, "togeth": 31, "hd": 31, "get_dict": 31, "load_dict": 31, "mpar_dict": 31, "kei": [31, 48], "look": 31, "gr": [31, 48], "load_model": 31, "load_yaml": 31, "file_path": 31, "save_dict": 31, "save_path": 31, "set_cfric": 31, "setter": 31, "set_com": 31, "set_damp": 31, "set_dof": 31, "set_gear_ratio": 31, "set_grav": 31, "set_inertia": 31, "set_length": 31, "set_mass": 31, "set_motor_inertia": 31, "set_torque_limit": 31, "coulomb_vector": 31, "forward_dynam": 31, "acc1": [31, 48], "acc2": [31, 48], "forward_kinemat": 31, "po": [31, 43], "y1": 31, "x2": 31, "y2": 31, "cartesian": 31, "get_alin": 31, "xd": 31, "ax": 31, "bu": [31, 44], "get_blin": 31, "get_cx": 31, "cx": 31, "del": 31, "x_i": 31, "get_fx": 31, "fx": [31, 38], "get_gx": 31, "gx": 31, "get_minvx": 31, "minvx": 31, "minv": 31, "get_mx": 31, "mx": 31, "gravity_vector": 31, "kinetic_energi": 31, "linear_matric": 31, "u0": 31, "mass_matrix": 31, "potential_energi": 31, "rh": 31, "integrand": 31, "vel1": [31, 48], "vel2": [31, 48], "total_energi": 31, "ir_sym": 31, "angular_momentum_bas": 31, "angular": [31, 44], "momentum": 31, "angular_momentum_ddot_bas": 31, "s\u00b3": 31, "angular_momentum_dot_bas": 31, "center_of_mass": 31, "whole": 31, "com_dot": 31, "equation_of_mot": 31, "2nd": 31, "eom": [31, 32], "1st": 31, "sympi": 31, "qd": 31, "g_sym": 31, "gr_sym": 31, "acc": [31, 33, 37], "lambdify_matric": 31, "lambdifi": 31, "linear_matrices_discret": 31, "n_actuat": 31, "n_link": 31, "q01": 31, "hat": 31, "q02": 31, "q0d1": 31, "q0d2": 31, "qd1": 31, "qd2": 31, "qdd1": 31, "qdd2": 31, "replace_paramet": 31, "replac": 31, "shall": 31, "symbolic_coriolis_matrix": 31, "symbolic_coulomb_vector": 31, "symbolic_gravity_vector": 31, "symbolic_kinetic_energi": 31, "symbolic_linear_matric": 31, "symbolic_mass_matrix": 31, "symbolic_potential_energi": 31, "symbolic_total_energi": 31, "u01": 31, "u02": 31, "diff_to_matrix": 31, "diff": 31, "sub_symbol": 31, "new_symbol": 31, "substitut": 31, "new": [31, 32, 43], "vector_mult": 31, "vec1": 31, "vec2": 31, "product": 31, "anim": [32, 35], "matplotlib": 32, "funcanim": 32, "controller_step": 32, "motir": 32, "wa": [32, 43, 46], "euler_integr": 32, "set_filter_paramet": 32, "get_control_u": 32, "get_measur": 32, "x_mea": [32, 37], "sigma": 32, "set_measurement_paramet": 32, "get_real_applied_u": 32, "u_out": 32, "relat": [32, 44], "u_last": 32, "set_motor_paramet": 32, "get_stat": 32, "get_trajectory_data": 32, "rocrd": 32, "record_data": 32, "perturb": 32, "reset_data_record": 32, "runge_integr": 32, "set_disturb": 32, "perturbation_tim": 32, "perturbation_tau": 32, "hit": 32, "happen": 32, "yet": 32, "raw": 32, "meas_noise_sigma": 32, "measuremt": 32, "standard": [32, 48], "gaussian": 32, "what": [32, 46], "u_noise_sigma": 32, "produc": 32, "resons": 32, "set_process_nois": 32, "process_noise_sigma": 32, "correspond": [32, 43, 48], "set_stat": 32, "t0": 32, "period": 32, "simulate_and_anim": 32, "plot_inittraj": 32, "plot_forecast": 32, "plot_trail": 32, "phase_plot": 32, "save_video": 32, "video_nam": 32, "pendulum_swingup": 32, "anim_dt": 32, "2d": 32, "serial": [32, 43], "chain": [32, 43], "forcast": 32, "trail": 32, "render": 32, "video": 32, "get_arrow": 32, "radiu": 32, "centx": 32, "centi": 32, "angle_": 32, "theta2_": 32, "color_": 32, "black": 32, "circular": 32, "arrow": 32, "coordint": 32, "orient": 32, "extend": [32, 44], "color": [32, 43], "regularpolygon": 32, "head": 32, "set_arrow_properti": 32, "smooth_data": 33, "shoulder_po": 33, "shoulder_vel": 33, "shoulder_trq": 33, "elbow_po": 33, "elbow_vel": 33, "elbow_trq": 33, "butterworth": 33, "build_identification_funct": 33, "fixed_mpar": 33, "variable_mpar": 33, "measured_data_filepath": 33, "build_identification_matric": 33, "dynamics_func": 33, "fixed_symbol": 33, "variable_symbol": 33, "yb_matrix_sym": 33, "errfunc": 33, "phi": 33, "rescal": 33, "errfunc_nl": 33, "dyn_fun": 33, "plot_torqu": 33, "shoulder_fit_tau": 33, "elbow_fit_tau": 33, "run_system_identif": 33, "measured_data_csv": 33, "mp0": 33, "optimization_method": 33, "least_squar": 33, "show_plot": 33, "run_system_identification_nl": 33, "direct_colloc": 34, "scene_graph": 35, "x_trajectori": 35, "browser": 35, "window": [35, 38, 43, 44], "pydrak": 35, "multibodi": 35, "multibodypl": 35, "geometri": 35, "scenegraph": 35, "scene": 35, "graph": 35, "piecewisepolynomial_": 35, "construct_trajectori": 35, "dircol": 35, "construct": [35, 39], "directcolloc": 35, "jerk": 35, "create_plant_from_urdf": 35, "creat": [35, 38, 48], "froma": 35, "context": 35, "extract_data_from_polynomi": 35, "extract": 35, "polnomi": 35, "dircol_calcul": 35, "animate_trajectori": 35, "found": [35, 43], "meshcat": 35, "viewer": 35, "compute_trajectori": [35, 36], "initial_st": 35, "final_st": 35, "theta_limit": 35, "speed_limit": 35, "time_pen": 35, "init_traj_time_interv": 35, "minimum_timestep": 35, "maximum_timestep": 35, "interv": 35, "size": [35, 38, 44], "rais": 35, "assertionerror": 35, "optmiz": 35, "get_trajectori": 35, "freq": 35, "ilqr_calcul": 36, "save_trajectory_csv": 36, "place": [36, 44], "folder": [36, 48], "script": [36, 43], "ilqr_trajopt_loss": 36, "goal_weight": 36, "swingup_loss": 37, "goal_accuraci": 37, "traj_opt_loss": 37, "traj_opt": 37, "concatenate_trajectori": 37, "with_tau": 37, "load_kk_valu": 37, "load_trajectori": [37, 48], "load_trajectory_ful": [37, 48], "x_filt": 37, "x_de": 37, "u_con": 37, "u_fric": 37, "u_mea": 37, "u_d": 37, "trajectory_properti": 37, "cma_optim": 37, "loss_func": 37, "outcma": 37, "popsize_factor": 37, "tolfun": 37, "tolx": 37, "tolstagn": 37, "scipy_par_optim": 37, "nelder": 37, "mead": 37, "solve_least_squar": 37, "xb0": 37, "fitpiecewisepolynomi": 37, "data_x": 37, "data_i": 37, "fit": 37, "cubic": 37, "segment": 37, "section": 37, "want": [37, 44, 46, 48], "create_section_poli": 37, "split": 37, "setion": 37, "determin_poli": 37, "end_tim": 37, "get_valu": 37, "split_data": 37, "start_tim": 37, "interpolatematrix": 37, "interpolatevector": 37, "resampletrajectori": 37, "poly1": 37, "poly2": 37, "poly3": 37, "plot_figur": 37, "index": [37, 45], "shoulder_tau_control": 37, "elbow_tau_control": 37, "shoulder_filtered_vel": 37, "elbow_filtered_vel": 37, "shoulder_des_tim": 37, "shoulder_des_po": 37, "shoulder_des_vel": 37, "shoulder_des_tau": 37, "elbow_des_tim": 37, "elbow_des_po": 37, "elbow_des_vel": 37, "elbow_des_tau": 37, "shoulder_fric_tau": 37, "elbow_fric_tau": 37, "plot_timeseri": 37, "plot_po": 37, "plot_vel": 37, "plot_acc": 37, "plot_tau": 37, "plot_energi": 37, "pos_x_lin": 37, "pos_y_lin": 37, "vel_x_lin": 37, "vel_y_lin": 37, "acc_x_lin": 37, "acc_y_lin": 37, "tau_x_lin": 37, "tau_y_lin": 37, "energy_x_lin": 37, "energy_y_lin": 37, "t_de": 37, "u_friccomp": 37, "acc_d": 37, "generate_urdf": 37, "urdf_in": 37, "urdf_out": 37, "054": 37, "025": 37, "remove_namespac": 37, "wrap_angles_diff": 37, "wrap_angles_top": 37, "butterworth_filt": 38, "data_measur": 38, "cutoff": 38, "nyquist": 38, "200": 38, "hz": 38, "enumer": 38, "denomin": 38, "impuls": 38, "iir": 38, "xlow": 38, "phase": [38, 43], "butter": 38, "125": 38, "filtfilt": 38, "padlen": 38, "150": 38, "1086182074789912e": 38, "data_desir": 38, "scipy_fft": 38, "smooth_freq": 38, "identity_filt": 38, "control_input": 38, "track": 38, "q1_dot": 38, "q2_dot": 38, "filterpi": 38, "readthedoc": 38, "io": 38, "latest": 38, "kalmanfilt": 38, "kalman_filter_rt": 38, "dim_x": 38, "dim_u": 38, "process_nois": 38, "measurement_nois": 38, "covariance_matrix": 38, "realtim": 38, "lowpass_filt": 38, "choos": [38, 43], "equival": 38, "unfilt": 38, "lowpass_filter_rt": 38, "data_filter_realtime_1": 38, "data_measured_list": 38, "data_filter_realtime_2": 38, "running_mean_filt": 38, "random": 38, "time_vec": 38, "arrang": 38, "desired_torqu": 38, "filtered_torqu": 38, "time_vec_filt": 38, "filtered_desired_torqu": 38, "plt": 38, "xlabel": 38, "ylabel": 38, "titl": 38, "move": [38, 40], "averag": 38, "legend": 38, "savitzky_golay_filt": 38, "savitzki": 38, "golai": 38, "local": [38, 46], "delta_t": 38, "iden": 38, "unscented_kalman_filter_rt": 38, "repositori": [39, 45, 46, 47], "tightli": 39, "coupl": 39, "softwar": [39, 43, 45, 47], "instruct": 39, "testbench": [39, 41], "guid": 39, "work": [40, 43, 44, 46], "care": [40, 43], "mind": 40, "brushless": 40, "power": [40, 43, 44], "tremend": 40, "speed": [40, 43, 44], "rang": 40, "suppli": [40, 43, 44], "stai": [40, 48], "awai": 40, "recommend": [40, 46], "cage": 40, "surround": 40, "loos": 40, "fly": 40, "sure": [40, 43, 44], "you": [40, 43, 44, 46, 48], "access": 40, "emerg": [40, 44], "Be": 40, "extra": 40, "pure": [40, 43], "mjbot": [41, 46], "setup": [41, 45, 46], "usag": [41, 43], "ak": 41, "80": 41, "ad": 41, "soon": 41, "ak80": [43, 44], "driver": 43, "manual": 43, "quasi": [43, 45], "drive": [43, 44, 45], "peak": [43, 44], "shaft": [43, 44], "equip": 43, "absolut": 43, "bit": 43, "rotari": 43, "basic": 43, "mini": 43, "cheetah": 43, "ben": 43, "katz": 43, "voltag": [43, 44], "24": [43, 44], "transmiss": 43, "485": 43, "dimens": 43, "98": 43, "mm": [43, 44], "38": 43, "365": 43, "rpm": 43, "backlash": 43, "accuraci": 43, "k_m": 43, "2206": 43, "sqrt": 43, "electr": 43, "009524": 43, "k_t": 43, "091": 43, "092": 43, "184": 43, "back": [43, 44], "emf": 43, "k_v": 43, "251": 43, "2400": 43, "nabla": 43, "pole": 43, "pair": 43, "resist": [43, 44], "170": 43, "pm5": 43, "omega": 43, "induct": [43, 44], "57": 43, "pm10": 43, "mu": 43, "rotor": 43, "000060719": 43, "devic": [43, 44], "download": 43, "cp210x": 43, "silab": 43, "isn": 43, "properli": 43, "sparkfun": 43, "instal": [43, 45, 47], "ch340": 43, "ch": 43, "341ser": 43, "ex": 43, "webpag": 43, "notic": 43, "uninstal": 43, "ch341": 43, "menu": 43, "old": 43, "modul": [43, 44, 45, 48], "websit": 43, "youtub": 43, "watch": 43, "hbqqcgebaf8": 43, "skyentif": 43, "hzy9vzgpzka": 43, "user": 43, "special": 43, "cubemar": 43, "modular": 43, "calibr": [43, 44], "within": 43, "shown": 43, "figur": [43, 48], "below": [43, 44, 48], "micro": 43, "cabl": [43, 44], "pc": [43, 44], "5pin": 43, "goe": 43, "24v": 43, "12a": 43, "off": 43, "run": [43, 44], "serial_ch340": 43, "wch": 43, "cp": [43, 46], "along": [43, 44], "appropri": 43, "baud": 43, "921600": 43, "115200": 43, "bd": 43, "your": [43, 44], "remain": 43, "issu": 43, "side": 43, "gui": 43, "enter": 43, "correct": [43, 48], "motorselectent": 43, "slow": 43, "offer": [43, 44, 45], "therefor": [43, 44], "lead": 43, "tick": 43, "box": 43, "displai": 43, "m_mode": 43, "line": [43, 48], "red": 43, "green": 43, "push": 43, "send": 43, "onc": 43, "button": [43, 44], "reliabl": 43, "sever": 43, "until": 43, "exit": 43, "restart": 43, "exact": 43, "especi": [43, 44], "danger": 43, "attach": [43, 44], "deactiv": 43, "messag": 43, "procedur": 43, "uvlo": 43, "vm": 43, "lockout": 43, "otw": 43, "thermal": 43, "warn": 43, "shutdown": 43, "interpret": 43, "help": 43, "sheet": 43, "drv8353m": 43, "smart": 43, "gate": 43, "texa": 43, "instrument": 43, "datasheet": 43, "featur": [43, 44], "proper": 43, "ground": 43, "ideal": 43, "isol": 43, "improv": 43, "common": 43, "share": 43, "great": 43, "daisi": 43, "connector": [43, 44], "neg": 43, "pin": 43, "termin": 43, "resistor": [43, 44], "120": 43, "These": [43, 48], "absorb": [43, 44], "prevent": [43, 44], "reflect": 43, "protocol": [43, 44], "diagram": [43, 44], "fig": [43, 44], "cpu": 43, "transceiv": 43, "xcvr": 43, "ac": 43, "ani": [43, 44], "ip": 43, "mbaud": 43, "sudo": [43, 46], "bitrat": 43, "bring": 43, "altern": 43, "shell": 43, "setup_caninterfac": 43, "sh": 43, "job": 43, "linux": [43, 44], "purpos": [43, 45], "cutecom": 43, "receiv": 43, "can_socket": 43, "socket_timeout": 43, "avail": 43, "enable_motor": 43, "disable_motor": 43, "set_zero_posit": 43, "send_deg_command": 43, "position_in_degre": 43, "velocity_in_degre": 43, "tau_ff": 43, "send_rad_command": 43, "position_in_radian": 43, "velocity_in_radian": 43, "si": 43, "except": 43, "board": [43, 44], "block": 43, "bee": 43, "seen": 43, "flexibl": 43, "those": [43, 48], "pde": 43, "pvel": 43, "tff": 43, "let": 43, "built": [44, 45], "pednulum": 44, "bench": 44, "bill": [44, 45], "materi": [44, 45, 48], "cad": [44, 45], "cover": [44, 48], "shoulder": [44, 45], "mount": 44, "bracket": 44, "fold": 44, "aluminum": 44, "light": 44, "laser": 44, "thick": 44, "sandwich": 44, "plate": 44, "lamin": 44, "pvc": 44, "rigid": 44, "foam": 44, "airex": 44, "arm": 44, "effector": 44, "elbow": [44, 45], "hous": 44, "sinc": 44, "hollow": 44, "opposit": 44, "windup": 44, "horizont": 44, "surfac": 44, "tabl": 44, "suffic": 44, "screw": 44, "clamp": 44, "fixat": 44, "come": 44, "front": [44, 48], "longer": 44, "aluminium": 44, "piec": 44, "safeti": 44, "warranti": 44, "reproduct": 44, "our": 44, "bed": 44, "own": 44, "risk": 44, "connect": [44, 48], "cubemars_ak_v1": 44, "1mbit": 44, "sec": 44, "furthermor": 44, "interfac": [44, 48], "doesn": 44, "pci": 44, "card": 44, "pcan": 44, "former": 44, "uart": 44, "latter": 44, "useful": 44, "consum": 44, "deliv": 44, "ea": 44, "9032": 44, "elektro": 44, "automatik": 44, "capacitor": 44, "protect": 44, "wouldn": 44, "batteri": 44, "pack": 44, "simpli": 44, "recharg": 44, "10x": 44, "singl": 44, "7v": 44, "400": 44, "cell": 44, "capac": 44, "parallel": 44, "disconnect": 44, "diconnect": 44, "keep": 44, "400f": 44, "revers": 44, "electro": 44, "magnet": 44, "some": [44, 48], "flow": 44, "recycl": 44, "caus": 44, "spike": 44, "enough": 44, "capacit": 44, "suffici": 44, "desgin": 44, "curcuit": 44, "benefici": 44, "bulk": 44, "disadvantag": 44, "increas": 44, "sourc": [44, 45], "were": 44, "would": 44, "dc": 44, "polar": 44, "diod": 44, "cannot": 44, "sink": 44, "cdot": 44, "v_": 44, "nom": 44, "across": 44, "accordingli": 44, "nevertheless": 44, "accept": 44, "min": 44, "tricki": 44, "extern": 44, "brake": 44, "short": 44, "parasit": 44, "larger": 44, "stabl": 44, "higher": 44, "quickli": 44, "rippl": 44, "too": 44, "apllic": 44, "introduc": 44, "burn": 44, "typic": 44, "safti": 44, "margin": 44, "wherea": 44, "buffer": 44, "ensur": [44, 48], "charg": 44, "don": 44, "bui": 44, "huge": 44, "expens": 44, "normal": 44, "cheaper": 44, "purchas": 44, "topic": 44, "drawback": 44, "heat": 44, "frequent": [44, 48], "regener": 44, "shunt": 44, "polulu": 44, "dissip": 44, "project": 45, "open": 45, "kit": 45, "strongli": 45, "platform": 45, "transpar": 45, "passiv": 45, "offlin": 45, "dual": 45, "compon": [45, 48], "Of": 45, "bom": 45, "git": [45, 46], "hb": [45, 46], "dfki": [45, 46], "release_vers": [45, 46], "caprr": [45, 46], "releas": [45, 46], "benchmark": [45, 47], "search": 45, "code": [46, 48], "mostli": 46, "moment": [46, 48], "moteu": 46, "packag": 46, "comment": 46, "py": 46, "virtual": 46, "environ": 46, "neccessari": 46, "ubuntu20": 46, "apt": 46, "libyaml": 46, "dev": 46, "libeigen3": 46, "libpython3": 46, "libx11": 46, "libsm6": 46, "libxt6": 46, "libglib2": 46, "python3": 46, "sphinx": 46, "numpydoc": 46, "rtd": 46, "theme": 46, "ubuntu22": 46, "clone": 46, "cd": 46, "bullet": 46, "recompil": 46, "appear": 46, "src": [46, 48], "pip": 46, "eigen": 46, "librari": [46, 48], "correctli": 46, "header": [46, 48], "wget": 46, "o": 46, "zip": 46, "gitlab": 46, "libeigen": 46, "archiv": 46, "unzip": 46, "usr": 46, "visit": 46, "welcom": 48, "besid": 48, "someth": 48, "pleas": 48, "ecosystem": 48, "organ": 48, "interplai": 48, "visual": 48, "explain": 48, "yml": 48, "most": 48, "write": 48, "precis": 48, "convent": 48, "design_a": 48, "design_b": 48, "design_c": 48, "design_hd": 48, "design_": 48, "capit": 48, "letter": 48, "minor": 48, "futur": 48, "hypothet": 48, "realiz": 48, "model_1": 48, "model_2": 48, "model_3": 48, "model_": 48, "folow": 48, "simplifi": 48, "zhe": 48, "later": 48, "reserv": 48, "column": 48, "pos1": 48, "pos2": 48, "pos_meas1": 48, "pos_meas2": 48, "vel_meas1": 48, "vel_meas2": 48, "pos_filt1": 48, "pos_filt2": 48, "vel_filt1": 48, "vel_filt2": 48, "pos_des1": 48, "pos_des2": 48, "vel_des1": 48, "vel_des2": 48, "tau_con1": 48, "tau_con2": 48, "tau_fric1": 48, "tau_fric2": 48, "tau_meas1": 48, "tau_meas2": 48, "tau_des1": 48, "tau_des2": 48, "k11": 48, "k12": 48, "k13": 48, "k14": 48, "k21": 48, "k22": 48, "k23": 48, "k24": 48, "k1": 48, "k2": 48, "separ": 48, "comma": 48, "easiest": 48, "double_pendulum": 48, "csv_trajectori": 48, "panda": 48, "miss": 48, "skip": 48, "central": 48, "abstract_control": 48, "repres": 48, "sent": 48, "underscor": 48}, "objects": {"": [[15, 0, 0, "-", "double_pendulum"]], "double_pendulum": [[16, 0, 0, "-", "analysis"], [17, 0, 0, "-", "controller"], [30, 0, 0, "-", "experiments"], [31, 0, 0, "-", "model"], [32, 0, 0, "-", "simulation"], [33, 0, 0, "-", "system_identification"], [34, 0, 0, "-", "trajectory_optimization"], [37, 0, 0, "-", "utils"]], "double_pendulum.analysis": [[16, 0, 0, "-", "benchmark"], [16, 0, 0, "-", "benchmark_plot"], [16, 0, 0, "-", "benchmark_scores"], [16, 0, 0, "-", "utils"]], "double_pendulum.analysis.benchmark": [[16, 1, 1, "", "benchmarker"]], "double_pendulum.analysis.benchmark.benchmarker": [[16, 2, 1, "", "benchmark"], [16, 2, 1, "", "check_delay_robustness"], [16, 2, 1, "", "check_goal_success"], [16, 2, 1, "", "check_meas_noise_robustness"], [16, 2, 1, "", "check_modelpar_robustness"], [16, 2, 1, "", "check_perturbation_robustness"], [16, 2, 1, "", "check_unoise_robustness"], [16, 2, 1, "", "check_uresponsiveness_robustness"], [16, 2, 1, "", "compute_cost"], [16, 2, 1, "", "compute_ref_cost"], [16, 2, 1, "", "compute_success_measure"], [16, 2, 1, "", "set_cost_par"], [16, 2, 1, "", "set_init_traj"], [16, 2, 1, "", "set_model_parameter"], [16, 2, 1, "", "simulate_and_get_cost"]], "double_pendulum.analysis.benchmark_plot": [[16, 3, 1, "", "plot_benchmark_results"], [16, 3, 1, "", "plot_model_robustness_multi"]], "double_pendulum.analysis.benchmark_scores": [[16, 3, 1, "", "get_delay_score"], [16, 3, 1, "", "get_measurement_noise_score"], [16, 3, 1, "", "get_model_score"], [16, 3, 1, "", "get_scores"], [16, 3, 1, "", "get_unoise_score"], [16, 3, 1, "", "get_uresponsiveness_score"]], "double_pendulum.analysis.utils": [[16, 3, 1, "", "get_par_list"]], "double_pendulum.controller": [[17, 0, 0, "-", "abstract_controller"], [17, 0, 0, "-", "combined_controller"], [18, 0, 0, "-", "energy"], [19, 0, 0, "-", "friction_compensation"], [20, 0, 0, "-", "gamepad"], [21, 0, 0, "-", "gravity_compensation"], [22, 0, 0, "-", "ilqr"], [23, 0, 0, "-", "inverse_dynamics"], [24, 0, 0, "-", "lqr"], [26, 0, 0, "-", "partial_feedback_linearization"], [27, 0, 0, "-", "pid"], [28, 0, 0, "-", "trajectory_following"], [29, 0, 0, "-", "tvlqr"]], "double_pendulum.controller.abstract_controller": [[17, 1, 1, "", "AbstractController"]], "double_pendulum.controller.abstract_controller.AbstractController": [[17, 2, 1, "", "filter_measurement"], [17, 2, 1, "", "get_control_output"], [17, 2, 1, "", "get_control_output_"], [17, 2, 1, "", "get_forecast"], [17, 2, 1, "", "get_friction_torque"], [17, 2, 1, "", "get_gravity_torque"], [17, 2, 1, "", "get_init_trajectory"], [17, 2, 1, "", "init"], [17, 2, 1, "", "init_"], [17, 2, 1, "", "init_filter"], [17, 2, 1, "", "reset"], [17, 2, 1, "", "reset_"], [17, 2, 1, "", "save"], [17, 2, 1, "", "save_"], [17, 2, 1, "", "set_filter_args"], [17, 2, 1, "", "set_friction_compensation"], [17, 2, 1, "", "set_goal"], [17, 2, 1, "", "set_gravity_compensation"], [17, 2, 1, "", "set_parameters"], [17, 2, 1, "", "set_start"]], "double_pendulum.controller.combined_controller": [[17, 1, 1, "", "CombinedController"], [17, 1, 1, "", "SimultaneousControllers"]], "double_pendulum.controller.combined_controller.CombinedController": [[17, 2, 1, "", "get_control_output_"], [17, 2, 1, "", "get_forecast"], [17, 2, 1, "", "get_init_trajectory"], [17, 2, 1, "", "init_"], [17, 2, 1, "", "reset_"], [17, 2, 1, "", "save_"], [17, 2, 1, "", "set_goal"], [17, 2, 1, "", "set_parameters"], [17, 2, 1, "", "set_start"]], "double_pendulum.controller.combined_controller.SimultaneousControllers": [[17, 2, 1, "", "get_control_output_"], [17, 2, 1, "", "get_forecast"], [17, 2, 1, "", "get_init_trajectory"], [17, 2, 1, "", "init_"], [17, 2, 1, "", "set_goal"], [17, 2, 1, "", "set_parameters"], [17, 2, 1, "", "set_start"]], "double_pendulum.controller.energy": [[18, 0, 0, "-", "energy_Xin"]], "double_pendulum.controller.energy.energy_Xin": [[18, 1, 1, "", "EnergyController"], [18, 3, 1, "", "kd_func"]], "double_pendulum.controller.energy.energy_Xin.EnergyController": [[18, 2, 1, "", "check_parameters"], [18, 2, 1, "", "get_control_output_"], [18, 2, 1, "", "init_"], [18, 2, 1, "", "save_"], [18, 2, 1, "", "set_goal"], [18, 2, 1, "", "set_parameters"]], "double_pendulum.controller.friction_compensation": [[19, 0, 0, "-", "friction_compensation_controller"]], "double_pendulum.controller.friction_compensation.friction_compensation_controller": [[19, 1, 1, "", "FrictionCompensationController"]], "double_pendulum.controller.friction_compensation.friction_compensation_controller.FrictionCompensationController": [[19, 2, 1, "", "get_control_output_"], [19, 2, 1, "", "save_"]], "double_pendulum.controller.gamepad": [[20, 0, 0, "-", "gamepad"], [20, 0, 0, "-", "gamepad_controller"]], "double_pendulum.controller.gamepad.gamepad": [[20, 1, 1, "", "GamePad"]], "double_pendulum.controller.gamepad.gamepad.GamePad": [[20, 2, 1, "", "read"]], "double_pendulum.controller.gamepad.gamepad_controller": [[20, 1, 1, "", "GamepadController"]], "double_pendulum.controller.gamepad.gamepad_controller.GamepadController": [[20, 2, 1, "", "get_control_output_"]], "double_pendulum.controller.gravity_compensation": [[21, 0, 0, "-", "PID_gravity_compensation_controller"], [21, 0, 0, "-", "gravity_compensation_controller"]], "double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller": [[21, 1, 1, "", "PIDGravityCompensationController"]], "double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller.PIDGravityCompensationController": [[21, 2, 1, "", "get_control_output_"], [21, 2, 1, "", "init_"], [21, 2, 1, "", "save_"], [21, 2, 1, "", "set_goal"], [21, 2, 1, "", "set_parameters"]], "double_pendulum.controller.gravity_compensation.gravity_compensation_controller": [[21, 1, 1, "", "GravityCompensationController"]], "double_pendulum.controller.gravity_compensation.gravity_compensation_controller.GravityCompensationController": [[21, 2, 1, "", "get_control_output_"], [21, 2, 1, "", "save_"]], "double_pendulum.controller.ilqr": [[22, 0, 0, "-", "ilqr_mpc_cpp"], [22, 0, 0, "-", "paropt"]], "double_pendulum.controller.ilqr.ilqr_mpc_cpp": [[22, 1, 1, "", "ILQRMPCCPPController"]], "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController": [[22, 2, 1, "", "compute_init_traj"], [22, 2, 1, "", "get_control_output_"], [22, 2, 1, "", "get_forecast"], [22, 2, 1, "", "get_init_trajectory"], [22, 2, 1, "", "init_"], [22, 2, 1, "", "load_init_traj"], [22, 2, 1, "", "save_"], [22, 2, 1, "", "set_cost_parameters"], [22, 2, 1, "", "set_cost_parameters_"], [22, 2, 1, "", "set_final_cost_parameters"], [22, 2, 1, "", "set_goal"], [22, 2, 1, "", "set_parameters"], [22, 2, 1, "", "set_start"]], "double_pendulum.controller.ilqr.paropt": [[22, 1, 1, "", "ilqrmpc_swingup_loss"]], "double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss": [[22, 2, 1, "", "init"], [22, 2, 1, "", "rescale_pars"], [22, 2, 1, "", "set_model_parameters"], [22, 2, 1, "", "set_parameters"], [22, 2, 1, "", "unscale_pars"]], "double_pendulum.controller.inverse_dynamics": [[23, 0, 0, "-", "computed_torque_controller"], [23, 0, 0, "-", "inverse_dynamics_ff_controller"]], "double_pendulum.controller.inverse_dynamics.computed_torque_controller": [[23, 1, 1, "", "ComputedTorqueController"]], "double_pendulum.controller.inverse_dynamics.computed_torque_controller.ComputedTorqueController": [[23, 2, 1, "", "get_control_output_"], [23, 2, 1, "", "get_init_trajectory"], [23, 2, 1, "", "init_"], [23, 2, 1, "", "save_"], [23, 2, 1, "", "set_parameters"]], "double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller": [[23, 1, 1, "", "InverseDynamicsController"]], "double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller.InverseDynamicsController": [[23, 2, 1, "", "get_control_output_"], [23, 2, 1, "", "get_init_trajectory"], [23, 2, 1, "", "init_"], [23, 2, 1, "", "save_"]], "double_pendulum.controller.lqr": [[24, 0, 0, "-", "lqr"], [24, 0, 0, "-", "lqr_controller"], [24, 0, 0, "-", "lqr_controller_drake"], [25, 0, 0, "-", "roa"]], "double_pendulum.controller.lqr.lqr": [[24, 3, 1, "", "dlqr"], [24, 3, 1, "", "iterative_riccati"], [24, 3, 1, "", "lqr"]], "double_pendulum.controller.lqr.lqr_controller": [[24, 1, 1, "", "LQRController"], [24, 1, 1, "", "LQRController_nonsymbolic"]], "double_pendulum.controller.lqr.lqr_controller.LQRController": [[24, 2, 1, "", "get_control_output_"], [24, 2, 1, "", "init_"], [24, 2, 1, "", "save_"], [24, 2, 1, "", "set_cost_matrices"], [24, 2, 1, "", "set_cost_parameters"], [24, 2, 1, "", "set_cost_parameters_"], [24, 2, 1, "", "set_goal"], [24, 2, 1, "", "set_parameters"]], "double_pendulum.controller.lqr.lqr_controller.LQRController_nonsymbolic": [[24, 2, 1, "", "get_control_output_"], [24, 2, 1, "", "init_"], [24, 2, 1, "", "save_"], [24, 2, 1, "", "set_cost_matrices"], [24, 2, 1, "", "set_cost_parameters"], [24, 2, 1, "", "set_cost_parameters_"], [24, 2, 1, "", "set_goal"], [24, 2, 1, "", "set_parameters"]], "double_pendulum.controller.lqr.lqr_controller_drake": [[24, 1, 1, "", "LQRController"]], "double_pendulum.controller.lqr.lqr_controller_drake.LQRController": [[24, 2, 1, "", "get_control_output_"], [24, 2, 1, "", "init_"], [24, 2, 1, "", "save_"], [24, 2, 1, "", "set_cost_matrices"], [24, 2, 1, "", "set_cost_parameters"], [24, 2, 1, "", "set_cost_parameters_"], [24, 2, 1, "", "set_goal"]], "double_pendulum.controller.lqr.roa": [[25, 0, 0, "-", "check"], [25, 0, 0, "-", "coopt_interface"], [25, 0, 0, "-", "ellipsoid"], [25, 0, 0, "-", "prob_roa"], [25, 0, 0, "-", "roa_estimation"], [25, 0, 0, "-", "roa_paropt"]], "double_pendulum.controller.lqr.roa.check": [[25, 1, 1, "", "lqr_check_ctg"], [25, 3, 1, "", "lqr_check_ctg_verification"], [25, 1, 1, "", "lqr_check_epsilon"], [25, 3, 1, "", "lqr_check_epsilon_verification"]], "double_pendulum.controller.lqr.roa.check.lqr_check_ctg": [[25, 2, 1, "", "sim_callback"]], "double_pendulum.controller.lqr.roa.check.lqr_check_epsilon": [[25, 2, 1, "", "sim_callback"]], "double_pendulum.controller.lqr.roa.coopt_interface": [[25, 1, 1, "", "caprr_coopt_interface"], [25, 1, 1, "", "logger"], [25, 3, 1, "", "najafi"], [25, 3, 1, "", "najafi_direct"]], "double_pendulum.controller.lqr.roa.coopt_interface.caprr_coopt_interface": [[25, 2, 1, "", "combined_opt_obj"], [25, 2, 1, "", "combined_reduced_opt_obj"], [25, 2, 1, "", "design_and_lqr_opt_obj"], [25, 2, 1, "", "design_opt_obj"], [25, 2, 1, "", "lqr_param_opt_obj"], [25, 2, 1, "", "lqr_param_reduced_opt_obj"]], "double_pendulum.controller.lqr.roa.coopt_interface.logger": [[25, 2, 1, "", "log_and_print_clbk"]], "double_pendulum.controller.lqr.roa.ellipsoid": [[25, 3, 1, "", "directSphere"], [25, 3, 1, "", "getEllipseParamsFromQuad"], [25, 3, 1, "", "getEllipsePatch"], [25, 3, 1, "", "getEllipsePatches"], [25, 3, 1, "", "plotEllipse"], [25, 3, 1, "", "quadForm"], [25, 3, 1, "", "sampleFromEllipsoid"], [25, 3, 1, "", "volEllipsoid"]], "double_pendulum.controller.lqr.roa.prob_roa": [[25, 3, 1, "", "check_x0"], [25, 3, 1, "", "compute_roa_prob"], [25, 1, 1, "", "roa_prob_loss"]], "double_pendulum.controller.lqr.roa.prob_roa.roa_prob_loss": [[25, 2, 1, "", "rescale_pars"], [25, 2, 1, "", "unscale_pars"]], "double_pendulum.controller.lqr.roa.roa_estimation": [[25, 3, 1, "", "SosDoublePendulumDynamics"], [25, 3, 1, "", "bisect_and_verify"], [25, 1, 1, "", "probTIROA"], [25, 3, 1, "", "rho_equalityConstrained"], [25, 3, 1, "", "verify_double_pendulum_rho"]], "double_pendulum.controller.lqr.roa.roa_estimation.probTIROA": [[25, 2, 1, "", "doEstimate"]], "double_pendulum.controller.lqr.roa.roa_paropt": [[25, 3, 1, "", "calc_roa"], [25, 3, 1, "", "roa_alternate_opt"], [25, 3, 1, "", "roa_design_opt"], [25, 3, 1, "", "roa_lqr_opt"], [25, 1, 1, "", "roa_lqrandmodelpar_lossfunc"], [25, 1, 1, "", "roa_lqrpar_lossfunc"], [25, 1, 1, "", "roa_modelpar_lossfunc"]], "double_pendulum.controller.lqr.roa.roa_paropt.roa_lqrandmodelpar_lossfunc": [[25, 2, 1, "", "rescale_pars"], [25, 2, 1, "", "set_model_parameters"], [25, 2, 1, "", "unscale_pars"]], "double_pendulum.controller.lqr.roa.roa_paropt.roa_lqrpar_lossfunc": [[25, 2, 1, "", "rescale_pars"], [25, 2, 1, "", "set_model_parameters"], [25, 2, 1, "", "unscale_pars"]], "double_pendulum.controller.lqr.roa.roa_paropt.roa_modelpar_lossfunc": [[25, 2, 1, "", "rescale_pars"], [25, 2, 1, "", "set_cost_parameters"], [25, 2, 1, "", "set_model_parameters"], [25, 2, 1, "", "unscale_pars"]], "double_pendulum.controller.partial_feedback_linearization": [[26, 0, 0, "-", "pfl"], [26, 0, 0, "-", "symbolic_pfl"]], "double_pendulum.controller.partial_feedback_linearization.pfl": [[26, 1, 1, "", "EnergyShapingPFLAndLQRController"], [26, 1, 1, "", "EnergyShapingPFLController"]], "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLAndLQRController": [[26, 2, 1, "", "get_control_output_"], [26, 2, 1, "", "init_"], [26, 2, 1, "", "set_cost_parameters_"], [26, 2, 1, "", "set_goal"]], "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLController": [[26, 2, 1, "", "get_control_output_"], [26, 2, 1, "", "save_"], [26, 2, 1, "", "set_cost_parameters"], [26, 2, 1, "", "set_cost_parameters_"], [26, 2, 1, "", "set_goal"]], "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl": [[26, 1, 1, "", "SymbolicPFLAndLQRController"], [26, 1, 1, "", "SymbolicPFLController"]], "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLAndLQRController": [[26, 2, 1, "", "get_control_output_"], [26, 2, 1, "", "init_"], [26, 2, 1, "", "save_"], [26, 2, 1, "", "set_cost_parameters_"], [26, 2, 1, "", "set_goal"]], "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLController": [[26, 2, 1, "", "get_control_output_"], [26, 2, 1, "", "init_"], [26, 2, 1, "", "save_"], [26, 2, 1, "", "set_cost_parameters"], [26, 2, 1, "", "set_cost_parameters_"], [26, 2, 1, "", "set_goal"]], "double_pendulum.controller.pid": [[27, 0, 0, "-", "point_pid_controller"], [27, 0, 0, "-", "trajectory_pid_controller"]], "double_pendulum.controller.pid.point_pid_controller": [[27, 1, 1, "", "PointPIDController"]], "double_pendulum.controller.pid.point_pid_controller.PointPIDController": [[27, 2, 1, "", "get_control_output_"], [27, 2, 1, "", "init_"], [27, 2, 1, "", "save_"], [27, 2, 1, "", "set_goal"], [27, 2, 1, "", "set_parameters"]], "double_pendulum.controller.pid.trajectory_pid_controller": [[27, 1, 1, "", "TrajPIDController"]], "double_pendulum.controller.pid.trajectory_pid_controller.TrajPIDController": [[27, 2, 1, "", "get_control_output_"], [27, 2, 1, "", "get_init_trajectory"], [27, 2, 1, "", "init_"], [27, 2, 1, "", "save_"], [27, 2, 1, "", "set_parameters"]], "double_pendulum.controller.trajectory_following": [[28, 0, 0, "-", "feed_forward"], [28, 0, 0, "-", "trajectory_controller"]], "double_pendulum.controller.trajectory_following.feed_forward": [[28, 1, 1, "", "FeedForwardController"]], "double_pendulum.controller.trajectory_following.feed_forward.FeedForwardController": [[28, 2, 1, "", "get_control_output_"], [28, 2, 1, "", "save_"]], "double_pendulum.controller.trajectory_following.trajectory_controller": [[28, 1, 1, "", "TrajectoryController"], [28, 1, 1, "", "TrajectoryInterpController"]], "double_pendulum.controller.trajectory_following.trajectory_controller.TrajectoryController": [[28, 2, 1, "", "get_control_output_"], [28, 2, 1, "", "get_init_trajectory"]], "double_pendulum.controller.trajectory_following.trajectory_controller.TrajectoryInterpController": [[28, 2, 1, "", "get_control_output_"], [28, 2, 1, "", "get_init_trajectory"], [28, 2, 1, "", "save_"]], "double_pendulum.controller.tvlqr": [[29, 0, 0, "-", "tvlqr_controller"], [29, 0, 0, "-", "tvlqr_controller_drake"]], "double_pendulum.controller.tvlqr.tvlqr_controller": [[29, 1, 1, "", "TVLQRController"]], "double_pendulum.controller.tvlqr.tvlqr_controller.TVLQRController": [[29, 2, 1, "", "get_control_output_"], [29, 2, 1, "", "get_init_trajectory"], [29, 2, 1, "", "init_"], [29, 2, 1, "", "save_"], [29, 2, 1, "", "set_cost_parameters"], [29, 2, 1, "", "set_goal"]], "double_pendulum.controller.tvlqr.tvlqr_controller_drake": [[29, 1, 1, "", "TVLQRController"]], "double_pendulum.controller.tvlqr.tvlqr_controller_drake.TVLQRController": [[29, 2, 1, "", "get_control_output_"], [29, 2, 1, "", "get_init_trajectory"], [29, 2, 1, "", "init_"], [29, 2, 1, "", "save_"], [29, 2, 1, "", "set_cost_parameters"]], "double_pendulum.experiments": [[30, 0, 0, "-", "experimental_utils"], [30, 0, 0, "-", "hardware_control_loop_tmotors"], [30, 0, 0, "-", "performance_profiler"]], "double_pendulum.experiments.experimental_utils": [[30, 3, 1, "", "rad2rev"], [30, 3, 1, "", "rev2rad"], [30, 3, 1, "", "save_data"], [30, 3, 1, "", "setZeroPosition"]], "double_pendulum.experiments.hardware_control_loop_tmotors": [[30, 3, 1, "", "run_experiment"]], "double_pendulum.experiments.performance_profiler": [[30, 3, 1, "", "motor_send_n_commands"], [30, 3, 1, "", "motor_send_n_commands2"], [30, 3, 1, "", "motor_speed_test"], [30, 3, 1, "", "motor_speed_test2"], [30, 3, 1, "", "profiler"]], "double_pendulum.model": [[31, 0, 0, "-", "friction_matrix"], [31, 0, 0, "-", "model_parameters"], [31, 0, 0, "-", "plant"], [31, 0, 0, "-", "symbolic_plant"]], "double_pendulum.model.friction_matrix": [[31, 3, 1, "", "yb_friction_matrix"]], "double_pendulum.model.model_parameters": [[31, 1, 1, "", "model_parameters"]], "double_pendulum.model.model_parameters.model_parameters": [[31, 2, 1, "", "get_dict"], [31, 2, 1, "", "load_dict"], [31, 2, 1, "", "load_model"], [31, 2, 1, "", "load_yaml"], [31, 2, 1, "", "save_dict"], [31, 2, 1, "", "set_cfric"], [31, 2, 1, "", "set_com"], [31, 2, 1, "", "set_damping"], [31, 2, 1, "", "set_dof"], [31, 2, 1, "", "set_gear_ratio"], [31, 2, 1, "", "set_gravity"], [31, 2, 1, "", "set_inertia"], [31, 2, 1, "", "set_length"], [31, 2, 1, "", "set_mass"], [31, 2, 1, "", "set_motor_inertia"], [31, 2, 1, "", "set_torque_limit"]], "double_pendulum.model.plant": [[31, 1, 1, "", "DoublePendulumPlant"]], "double_pendulum.model.plant.DoublePendulumPlant": [[31, 2, 1, "", "coriolis_matrix"], [31, 2, 1, "", "coulomb_vector"], [31, 2, 1, "", "forward_dynamics"], [31, 2, 1, "", "forward_kinematics"], [31, 2, 1, "", "get_Alin"], [31, 2, 1, "", "get_Blin"], [31, 2, 1, "", "get_Cx"], [31, 2, 1, "", "get_Fx"], [31, 2, 1, "", "get_Gx"], [31, 2, 1, "", "get_Minvx"], [31, 2, 1, "", "get_Mx"], [31, 2, 1, "", "gravity_vector"], [31, 2, 1, "", "kinetic_energy"], [31, 2, 1, "", "linear_matrices"], [31, 2, 1, "", "mass_matrix"], [31, 2, 1, "", "potential_energy"], [31, 2, 1, "", "rhs"], [31, 2, 1, "", "total_energy"]], "double_pendulum.model.symbolic_plant": [[31, 1, 1, "", "SymbolicDoublePendulum"], [31, 3, 1, "", "diff_to_matrix"], [31, 3, 1, "", "sub_symbols"], [31, 3, 1, "", "vector_mult"]], "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum": [[31, 4, 1, "", "I1"], [31, 4, 1, "", "I2"], [31, 4, 1, "", "Ir_sym"], [31, 2, 1, "", "angular_momentum_base"], [31, 2, 1, "", "angular_momentum_ddot_base"], [31, 2, 1, "", "angular_momentum_dot_base"], [31, 4, 1, "", "b1"], [31, 4, 1, "", "b2"], [31, 4, 1, "", "base"], [31, 2, 1, "", "center_of_mass"], [31, 4, 1, "", "cf1"], [31, 4, 1, "", "cf2"], [31, 2, 1, "", "com_dot"], [31, 2, 1, "", "coriolis_matrix"], [31, 2, 1, "", "coulomb_vector"], [31, 4, 1, "", "dof"], [31, 2, 1, "", "equation_of_motion"], [31, 2, 1, "", "forward_dynamics"], [31, 2, 1, "", "forward_kinematics"], [31, 4, 1, "", "g_sym"], [31, 4, 1, "", "gr_sym"], [31, 2, 1, "", "gravity_vector"], [31, 2, 1, "", "inverse_dynamics"], [31, 2, 1, "", "kinetic_energy"], [31, 4, 1, "", "l1"], [31, 4, 1, "", "l2"], [31, 2, 1, "", "lambdify_matrices"], [31, 2, 1, "", "linear_matrices"], [31, 2, 1, "", "linear_matrices_discrete"], [31, 4, 1, "", "m1"], [31, 4, 1, "", "m2"], [31, 2, 1, "", "mass_matrix"], [31, 4, 1, "", "n_actuators"], [31, 4, 1, "", "n_links"], [31, 2, 1, "", "potential_energy"], [31, 4, 1, "", "q"], [31, 4, 1, "", "q01"], [31, 4, 1, "", "q02"], [31, 4, 1, "", "q0d1"], [31, 4, 1, "", "q0d2"], [31, 4, 1, "", "q1"], [31, 4, 1, "", "q2"], [31, 4, 1, "", "qd"], [31, 4, 1, "", "qd1"], [31, 4, 1, "", "qd2"], [31, 4, 1, "", "qdd"], [31, 4, 1, "", "qdd1"], [31, 4, 1, "", "qdd2"], [31, 4, 1, "", "r1"], [31, 4, 1, "", "r2"], [31, 2, 1, "", "replace_parameters"], [31, 2, 1, "", "rhs"], [31, 2, 1, "", "symbolic_coriolis_matrix"], [31, 2, 1, "", "symbolic_coulomb_vector"], [31, 2, 1, "", "symbolic_gravity_vector"], [31, 2, 1, "", "symbolic_kinetic_energy"], [31, 2, 1, "", "symbolic_linear_matrices"], [31, 2, 1, "", "symbolic_mass_matrix"], [31, 2, 1, "", "symbolic_potential_energy"], [31, 2, 1, "", "symbolic_total_energy"], [31, 4, 1, "", "tl1"], [31, 4, 1, "", "tl2"], [31, 2, 1, "", "total_energy"], [31, 4, 1, "", "u"], [31, 4, 1, "", "u0"], [31, 4, 1, "", "u01"], [31, 4, 1, "", "u02"], [31, 4, 1, "", "u1"], [31, 4, 1, "", "u2"], [31, 4, 1, "", "x"], [31, 4, 1, "", "x0"], [31, 4, 1, "", "xd"]], "double_pendulum.simulation": [[32, 0, 0, "-", "simulation"], [32, 0, 0, "-", "visualization"]], "double_pendulum.simulation.simulation": [[32, 1, 1, "", "Simulator"]], "double_pendulum.simulation.simulation.Simulator": [[32, 2, 1, "", "controller_step"], [32, 2, 1, "", "euler_integrator"], [32, 2, 1, "", "filter_measurement"], [32, 2, 1, "", "get_control_u"], [32, 2, 1, "", "get_measurement"], [32, 2, 1, "", "get_real_applied_u"], [32, 2, 1, "", "get_state"], [32, 2, 1, "", "get_trajectory_data"], [32, 2, 1, "", "init_filter"], [32, 2, 1, "", "record_data"], [32, 2, 1, "", "reset"], [32, 2, 1, "", "reset_data_recorder"], [32, 2, 1, "", "runge_integrator"], [32, 2, 1, "", "set_disturbances"], [32, 2, 1, "", "set_filter_parameters"], [32, 2, 1, "", "set_measurement_parameters"], [32, 2, 1, "", "set_motor_parameters"], [32, 2, 1, "", "set_process_noise"], [32, 2, 1, "", "set_state"], [32, 2, 1, "", "simulate"], [32, 2, 1, "", "simulate_and_animate"], [32, 2, 1, "", "step"]], "double_pendulum.simulation.visualization": [[32, 3, 1, "", "get_arrow"], [32, 3, 1, "", "set_arrow_properties"]], "double_pendulum.system_identification": [[33, 0, 0, "-", "data_prep"], [33, 0, 0, "-", "dynamics"], [33, 0, 0, "-", "loss"], [33, 0, 0, "-", "plotting"], [33, 0, 0, "-", "sys_id"]], "double_pendulum.system_identification.data_prep": [[33, 3, 1, "", "smooth_data"]], "double_pendulum.system_identification.dynamics": [[33, 3, 1, "", "build_identification_function"], [33, 3, 1, "", "build_identification_matrices"], [33, 3, 1, "", "dynamics_func"], [33, 1, 1, "", "yb_matrix_sym"]], "double_pendulum.system_identification.loss": [[33, 1, 1, "", "errfunc"], [33, 1, 1, "", "errfunc_nl"]], "double_pendulum.system_identification.loss.errfunc": [[33, 2, 1, "", "rescale_pars"], [33, 2, 1, "", "unscale_pars"]], "double_pendulum.system_identification.loss.errfunc_nl": [[33, 2, 1, "", "rescale_pars"], [33, 2, 1, "", "unscale_pars"]], "double_pendulum.system_identification.plotting": [[33, 3, 1, "", "plot_torques"]], "double_pendulum.system_identification.sys_id": [[33, 3, 1, "", "run_system_identification"], [33, 3, 1, "", "run_system_identification_nl"]], "double_pendulum.trajectory_optimization": [[35, 0, 0, "-", "direct_collocation"], [36, 0, 0, "-", "ilqr"]], "double_pendulum.trajectory_optimization.direct_collocation": [[35, 0, 0, "-", "dircol_utils"], [35, 0, 0, "-", "direct_collocation"]], "double_pendulum.trajectory_optimization.direct_collocation.dircol_utils": [[35, 3, 1, "", "animation"], [35, 3, 1, "", "construct_trajectories"], [35, 3, 1, "", "create_plant_from_urdf"], [35, 3, 1, "", "extract_data_from_polynomial"]], "double_pendulum.trajectory_optimization.direct_collocation.direct_collocation": [[35, 1, 1, "", "dircol_calculator"]], "double_pendulum.trajectory_optimization.direct_collocation.direct_collocation.dircol_calculator": [[35, 2, 1, "", "animate_trajectory"], [35, 2, 1, "", "compute_trajectory"], [35, 2, 1, "", "get_trajectory"]], "double_pendulum.trajectory_optimization.ilqr": [[36, 0, 0, "-", "ilqr_cpp"], [36, 0, 0, "-", "paropt"]], "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp": [[36, 1, 1, "", "ilqr_calculator"]], "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator": [[36, 2, 1, "", "compute_trajectory"], [36, 2, 1, "", "save_trajectory_csv"], [36, 2, 1, "", "set_cost_parameters"], [36, 2, 1, "", "set_cost_parameters_"], [36, 2, 1, "", "set_goal"], [36, 2, 1, "", "set_model_parameters"], [36, 2, 1, "", "set_parameters"], [36, 2, 1, "", "set_start"]], "double_pendulum.trajectory_optimization.ilqr.paropt": [[36, 1, 1, "", "ilqr_trajopt_loss"]], "double_pendulum.trajectory_optimization.ilqr.paropt.ilqr_trajopt_loss": [[36, 2, 1, "", "rescale_pars"], [36, 2, 1, "", "set_model_parameters"], [36, 2, 1, "", "set_parameters"], [36, 2, 1, "", "unscale_pars"]], "double_pendulum.utils": [[37, 0, 0, "-", "cmaes_controller_par_optimizer"], [37, 0, 0, "-", "csv_trajectory"], [38, 0, 0, "-", "filters"], [37, 0, 0, "-", "optimization"], [37, 0, 0, "-", "pcw_polynomial"], [37, 0, 0, "-", "plotting"], [37, 0, 0, "-", "urdfs"], [37, 0, 0, "-", "wrap_angles"]], "double_pendulum.utils.cmaes_controller_par_optimizer": [[37, 1, 1, "", "swingup_loss"], [37, 1, 1, "", "traj_opt_loss"]], "double_pendulum.utils.cmaes_controller_par_optimizer.swingup_loss": [[37, 2, 1, "", "rescale_pars"], [37, 2, 1, "", "unscale_pars"]], "double_pendulum.utils.cmaes_controller_par_optimizer.traj_opt_loss": [[37, 2, 1, "", "rescale_pars"], [37, 2, 1, "", "unscale_pars"]], "double_pendulum.utils.csv_trajectory": [[37, 3, 1, "", "concatenate_trajectories"], [37, 3, 1, "", "load_Kk_values"], [37, 3, 1, "", "load_trajectory"], [37, 3, 1, "", "load_trajectory_full"], [37, 3, 1, "", "save_trajectory"], [37, 3, 1, "", "trajectory_properties"]], "double_pendulum.utils.filters": [[38, 0, 0, "-", "butterworth"], [38, 0, 0, "-", "fast_fourier_transform"], [38, 0, 0, "-", "identity"], [38, 0, 0, "-", "kalman_filter"], [38, 0, 0, "-", "low_pass"], [38, 0, 0, "-", "running_mean"], [38, 0, 0, "-", "savitzky_golay"], [38, 0, 0, "-", "unscented_kalman_filter"]], "double_pendulum.utils.filters.butterworth": [[38, 3, 1, "", "butterworth_filter"]], "double_pendulum.utils.filters.fast_fourier_transform": [[38, 3, 1, "", "fast_fourier_transform"], [38, 3, 1, "", "scipy_fft"]], "double_pendulum.utils.filters.identity": [[38, 1, 1, "", "identity_filter"]], "double_pendulum.utils.filters.kalman_filter": [[38, 3, 1, "", "kalman_filter"], [38, 1, 1, "", "kalman_filter_rt"], [38, 3, 1, "", "main"]], "double_pendulum.utils.filters.low_pass": [[38, 3, 1, "", "lowpass_filter"], [38, 1, 1, "", "lowpass_filter_rt"]], "double_pendulum.utils.filters.running_mean": [[38, 3, 1, "", "data_filter_realtime_1"], [38, 3, 1, "", "data_filter_realtime_2"], [38, 3, 1, "", "running_mean_filter"]], "double_pendulum.utils.filters.savitzky_golay": [[38, 3, 1, "", "savitzky_golay_filter"]], "double_pendulum.utils.filters.unscented_kalman_filter": [[38, 3, 1, "", "iden"], [38, 1, 1, "", "unscented_kalman_filter_rt"]], "double_pendulum.utils.optimization": [[37, 3, 1, "", "cma_optimization"], [37, 3, 1, "", "scipy_par_optimization"], [37, 3, 1, "", "solve_least_squares"]], "double_pendulum.utils.pcw_polynomial": [[37, 1, 1, "", "FitPiecewisePolynomial"], [37, 1, 1, "", "InterpolateMatrix"], [37, 1, 1, "", "InterpolateVector"], [37, 3, 1, "", "ResampleTrajectory"], [37, 3, 1, "", "poly1"], [37, 3, 1, "", "poly2"], [37, 3, 1, "", "poly3"]], "double_pendulum.utils.pcw_polynomial.FitPiecewisePolynomial": [[37, 2, 1, "", "create_section_poly"], [37, 2, 1, "", "determin_poly"], [37, 2, 1, "", "end_time"], [37, 2, 1, "", "get_value"], [37, 2, 1, "", "split_data"], [37, 2, 1, "", "start_time"]], "double_pendulum.utils.pcw_polynomial.InterpolateMatrix": [[37, 2, 1, "", "get_value"]], "double_pendulum.utils.pcw_polynomial.InterpolateVector": [[37, 2, 1, "", "get_value"]], "double_pendulum.utils.plotting": [[37, 3, 1, "", "plot_figures"], [37, 3, 1, "", "plot_timeseries"]], "double_pendulum.utils.urdfs": [[37, 3, 1, "", "generate_urdf"], [37, 3, 1, "", "remove_namespaces"]], "double_pendulum.utils.wrap_angles": [[37, 3, 1, "", "wrap_angles"], [37, 3, 1, "", "wrap_angles_diff"], [37, 3, 1, "", "wrap_angles_top"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"control": [0, 1, 2, 3, 5, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43, 48], "benchmark": [0, 16], "robust": 1, "method": 2, "model": [3, 31, 48], "predict": 3, "mpc": [3, 4], "iter": [4, 10], "linear": [4, 6, 7, 10, 13], "quadrat": [4, 6, 10], "regul": [4, 6, 10, 13], "ilqr": [4, 10, 22, 36], "polici": 5, "base": 5, "lqr": [6, 24, 25], "region": 6, "attract": 6, "roa": [6, 25], "refer": [6, 7, 9, 10, 12, 13], "partial": 7, "feedback": 7, "pfl": [7, 26], "trajectori": [8, 11, 48], "optim": [8, 37], "direct": 9, "colloc": 9, "stabil": [11, 12], "riccati": 12, "gain": 12, "time": 13, "vari": 13, "quadrativ": 13, "tvlqr": [13, 29], "The": 14, "doubl": [14, 45], "pendulum": [14, 45], "system": 14, "equat": 14, "motion": 14, "energi": [14, 18], "identif": 14, "double_pendulum": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "subpackag": [15, 17, 24, 34, 37], "analysi": 16, "submodul": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38], "benchmark_plot": 16, "benchmark_scor": 16, "util": [16, 37, 38], "abstract_control": 17, "combined_control": 17, "energy_xin": 18, "friction_compens": 19, "friction_compensation_control": 19, "gamepad": 20, "gamepad_control": 20, "gravity_compens": 21, "pid_gravity_compensation_control": 21, "gravity_compensation_control": 21, "ilqr_mpc_cpp": 22, "paropt": [22, 36], "inverse_dynam": 23, "computed_torque_control": 23, "inverse_dynamics_ff_control": 23, "lqr_control": 24, "lqr_controller_drak": 24, "check": 25, "coopt_interfac": 25, "ellipsoid": 25, "prob_roa": 25, "roa_estim": 25, "roa_paropt": 25, "partial_feedback_linear": 26, "symbolic_pfl": 26, "pid": 27, "point_pid_control": 27, "trajectory_pid_control": 27, "trajectory_follow": 28, "feed_forward": 28, "trajectory_control": 28, "tvlqr_control": 29, "tvlqr_controller_drak": 29, "experi": [30, 40], "experimental_util": 30, "hardware_control_loop_mjbot": 30, "hardware_control_loop_tmotor": 30, "hardware_control_loop_tmotors_old": 30, "performance_profil": 30, "friction_matrix": 31, "model_paramet": 31, "plant": 31, "symbolic_pl": 31, "simul": 32, "visual": 32, "system_identif": 33, "data_prep": 33, "dynam": 33, "loss": 33, "plot": [33, 37], "sys_id": 33, "trajectory_optim": [34, 35, 36], "direct_colloc": 35, "dircol_util": 35, "ilqr_cpp": 36, "cmaes_controller_par_optim": 37, "csv_trajectori": 37, "pcw_polynomi": 37, "urdf": 37, "wrap_angl": 37, "filter": 38, "butterworth": 38, "fast_fourier_transform": 38, "ident": 38, "kalman_filt": 38, "low_pass": 38, "running_mean": 38, "savitzky_golai": 38, "unscented_kalman_filt": 38, "hardwar": [39, 40, 44], "guid": 40, "safeti": 40, "note": 40, "motor": [41, 43], "mjbot": 42, "initi": [42, 43], "setup": [42, 43, 44], "commun": [42, 43], "t": 43, "ak": 43, "80": 43, "6": 43, "physic": 43, "paramet": [43, 48], "actuat": 43, "tutori": 43, "instruct": [43, 44], "r": 43, "link": 43, "config": 43, "tool": 43, "debug": 43, "can": 43, "bu": 43, "wire": [43, 44], "set": 43, "up": 43, "interfac": 43, "test": 43, "connect": 43, "python": 43, "intern": 43, "pd": 43, "testbench": 44, "descript": 44, "assembli": 44, "electr": 44, "backemf": 44, "welcom": 45, "": 45, "document": 45, "tabl": 45, "content": 45, "indic": 45, "instal": 46, "potenti": 46, "issu": 46, "repositori": 48, "structur": 48, "program": 48, "languag": 48, "overview": 48, "data": 48, "abstract": 48}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Controller Benchmarking": [[0, "controller-benchmarking"]], "Controller Robustness": [[1, "controller-robustness"]], "Control Methods": [[2, "control-methods"]], "Model Predictive Control (MPC)": [[3, "model-predictive-control-mpc"]], "Iterative Linear Quadratic Regulator (iLQR) MPC": [[4, "iterative-linear-quadratic-regulator-ilqr-mpc"]], "Policy-based Control": [[5, "policy-based-control"]], "Linear Quadratic Regulator (LQR)": [[6, "linear-quadratic-regulator-lqr"]], "Region of Attraction (RoA)": [[6, "region-of-attraction-roa"]], "References": [[6, "references"], [7, "references"], [9, "references"], [10, "references"], [12, "references"], [13, "references"]], "Partial Feedback Linearization (PFL)": [[7, "partial-feedback-linearization-pfl"]], "Trajectory Optimization": [[8, "trajectory-optimization"]], "Direct Collocation": [[9, "direct-collocation"]], "Iterative Linear Quadratic Regulator (iLQR)": [[10, "iterative-linear-quadratic-regulator-ilqr"]], "Trajectory Stabilization": [[11, "trajectory-stabilization"]], "Riccati Gains Stabilization": [[12, "riccati-gains-stabilization"]], "Time Varying Linear Quadrativ Regulator (TVLQR)": [[13, "time-varying-linear-quadrativ-regulator-tvlqr"]], "The Double Pendulum System": [[14, "the-double-pendulum-system"]], "Equation of Motion": [[14, "equation-of-motion"]], "Energy": [[14, "energy"]], "System Identification": [[14, "system-identification"]], "double_pendulum": [[15, "module-double_pendulum"]], "Subpackages": [[15, "subpackages"], [17, "subpackages"], [24, "subpackages"], [34, "subpackages"], [37, "subpackages"]], "double_pendulum.analysis": [[16, "module-double_pendulum.analysis"]], "Submodules": [[16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"], [23, "submodules"], [24, "submodules"], [25, "submodules"], [26, "submodules"], [27, "submodules"], [28, "submodules"], [29, "submodules"], [30, "submodules"], [31, "submodules"], [32, "submodules"], [33, "submodules"], [35, "submodules"], [36, "submodules"], [37, "submodules"], [38, "submodules"]], "double_pendulum.analysis.benchmark": [[16, "module-double_pendulum.analysis.benchmark"]], "double_pendulum.analysis.benchmark_plot": [[16, "module-double_pendulum.analysis.benchmark_plot"]], "double_pendulum.analysis.benchmark_scores": [[16, "module-double_pendulum.analysis.benchmark_scores"]], "double_pendulum.analysis.utils": [[16, "module-double_pendulum.analysis.utils"]], "double_pendulum.controller": [[17, "module-double_pendulum.controller"]], "double_pendulum.controller.abstract_controller": [[17, "module-double_pendulum.controller.abstract_controller"]], "double_pendulum.controller.combined_controller": [[17, "module-double_pendulum.controller.combined_controller"]], "double_pendulum.controller.energy": [[18, "module-double_pendulum.controller.energy"]], "double_pendulum.controller.energy.energy_Xin": [[18, "module-double_pendulum.controller.energy.energy_Xin"]], "double_pendulum.controller.friction_compensation": [[19, "module-double_pendulum.controller.friction_compensation"]], "double_pendulum.controller.friction_compensation.friction_compensation_controller": [[19, "module-double_pendulum.controller.friction_compensation.friction_compensation_controller"]], "double_pendulum.controller.gamepad": [[20, "module-double_pendulum.controller.gamepad"]], "Controllers": [[20, "controllers"]], "double_pendulum.controller.gamepad.gamepad": [[20, "module-double_pendulum.controller.gamepad.gamepad"]], "double_pendulum.controller.gamepad.gamepad_controller": [[20, "module-double_pendulum.controller.gamepad.gamepad_controller"]], "Gamepad Controller": [[20, "gamepad-controller"]], "double_pendulum.controller.gravity_compensation": [[21, "module-double_pendulum.controller.gravity_compensation"]], "double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller": [[21, "module-double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller"]], "double_pendulum.controller.gravity_compensation.gravity_compensation_controller": [[21, "module-double_pendulum.controller.gravity_compensation.gravity_compensation_controller"]], "double_pendulum.controller.ilqr": [[22, "module-double_pendulum.controller.ilqr"]], "double_pendulum.controller.ilqr.ilqr_mpc_cpp": [[22, "module-double_pendulum.controller.ilqr.ilqr_mpc_cpp"]], "double_pendulum.controller.ilqr.paropt": [[22, "module-double_pendulum.controller.ilqr.paropt"]], "double_pendulum.controller.inverse_dynamics": [[23, "module-double_pendulum.controller.inverse_dynamics"]], "double_pendulum.controller.inverse_dynamics.computed_torque_controller": [[23, "module-double_pendulum.controller.inverse_dynamics.computed_torque_controller"]], "double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller": [[23, "module-double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller"]], "double_pendulum.controller.lqr": [[24, "module-double_pendulum.controller.lqr"]], "double_pendulum.controller.lqr.lqr": [[24, "module-double_pendulum.controller.lqr.lqr"]], "double_pendulum.controller.lqr.lqr_controller": [[24, "module-double_pendulum.controller.lqr.lqr_controller"]], "double_pendulum.controller.lqr.lqr_controller_drake": [[24, "module-double_pendulum.controller.lqr.lqr_controller_drake"]], "double_pendulum.controller.lqr.roa": [[25, "module-double_pendulum.controller.lqr.roa"]], "double_pendulum.controller.lqr.roa.check": [[25, "module-double_pendulum.controller.lqr.roa.check"]], "double_pendulum.controller.lqr.roa.coopt_interface": [[25, "module-double_pendulum.controller.lqr.roa.coopt_interface"]], "double_pendulum.controller.lqr.roa.ellipsoid": [[25, "module-double_pendulum.controller.lqr.roa.ellipsoid"]], "double_pendulum.controller.lqr.roa.prob_roa": [[25, "module-double_pendulum.controller.lqr.roa.prob_roa"]], "double_pendulum.controller.lqr.roa.roa_estimation": [[25, "module-double_pendulum.controller.lqr.roa.roa_estimation"]], "double_pendulum.controller.lqr.roa.roa_paropt": [[25, "module-double_pendulum.controller.lqr.roa.roa_paropt"]], "double_pendulum.controller.partial_feedback_linearization": [[26, "module-double_pendulum.controller.partial_feedback_linearization"]], "double_pendulum.controller.partial_feedback_linearization.pfl": [[26, "module-double_pendulum.controller.partial_feedback_linearization.pfl"]], "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl": [[26, "module-double_pendulum.controller.partial_feedback_linearization.symbolic_pfl"]], "double_pendulum.controller.pid": [[27, "module-double_pendulum.controller.pid"]], "double_pendulum.controller.pid.point_pid_controller": [[27, "module-double_pendulum.controller.pid.point_pid_controller"]], "double_pendulum.controller.pid.trajectory_pid_controller": [[27, "module-double_pendulum.controller.pid.trajectory_pid_controller"]], "double_pendulum.controller.trajectory_following": [[28, "module-double_pendulum.controller.trajectory_following"]], "double_pendulum.controller.trajectory_following.feed_forward": [[28, "module-double_pendulum.controller.trajectory_following.feed_forward"]], "double_pendulum.controller.trajectory_following.trajectory_controller": [[28, "module-double_pendulum.controller.trajectory_following.trajectory_controller"]], "double_pendulum.controller.tvlqr": [[29, "module-double_pendulum.controller.tvlqr"]], "double_pendulum.controller.tvlqr.tvlqr_controller": [[29, "module-double_pendulum.controller.tvlqr.tvlqr_controller"]], "double_pendulum.controller.tvlqr.tvlqr_controller_drake": [[29, "module-double_pendulum.controller.tvlqr.tvlqr_controller_drake"]], "double_pendulum.experiments": [[30, "module-double_pendulum.experiments"]], "double_pendulum.experiments.experimental_utils": [[30, "module-double_pendulum.experiments.experimental_utils"]], "double_pendulum.experiments.hardware_control_loop_mjbots": [[30, "double-pendulum-experiments-hardware-control-loop-mjbots"]], "double_pendulum.experiments.hardware_control_loop_tmotors": [[30, "module-double_pendulum.experiments.hardware_control_loop_tmotors"]], "double_pendulum.experiments.hardware_control_loop_tmotors_old": [[30, "double-pendulum-experiments-hardware-control-loop-tmotors-old"]], "double_pendulum.experiments.performance_profiler": [[30, "module-double_pendulum.experiments.performance_profiler"]], "double_pendulum.model": [[31, "module-double_pendulum.model"]], "double_pendulum.model.friction_matrix": [[31, "module-double_pendulum.model.friction_matrix"]], "double_pendulum.model.model_parameters": [[31, "module-double_pendulum.model.model_parameters"]], "double_pendulum.model.plant": [[31, "module-double_pendulum.model.plant"]], "double_pendulum.model.symbolic_plant": [[31, "module-double_pendulum.model.symbolic_plant"]], "double_pendulum.simulation": [[32, "module-double_pendulum.simulation"]], "double_pendulum.simulation.simulation": [[32, "module-double_pendulum.simulation.simulation"]], "double_pendulum.simulation.visualization": [[32, "module-double_pendulum.simulation.visualization"]], "double_pendulum.system_identification": [[33, "module-double_pendulum.system_identification"]], "double_pendulum.system_identification.data_prep": [[33, "module-double_pendulum.system_identification.data_prep"]], "double_pendulum.system_identification.dynamics": [[33, "module-double_pendulum.system_identification.dynamics"]], "double_pendulum.system_identification.loss": [[33, "module-double_pendulum.system_identification.loss"]], "double_pendulum.system_identification.plotting": [[33, "module-double_pendulum.system_identification.plotting"]], "double_pendulum.system_identification.sys_id": [[33, "module-double_pendulum.system_identification.sys_id"]], "double_pendulum.trajectory_optimization": [[34, "module-double_pendulum.trajectory_optimization"]], "double_pendulum.trajectory_optimization.direct_collocation": [[35, "module-double_pendulum.trajectory_optimization.direct_collocation"]], "double_pendulum.trajectory_optimization.direct_collocation.dircol_utils": [[35, "module-double_pendulum.trajectory_optimization.direct_collocation.dircol_utils"]], "double_pendulum.trajectory_optimization.direct_collocation.direct_collocation": [[35, "module-double_pendulum.trajectory_optimization.direct_collocation.direct_collocation"]], "double_pendulum.trajectory_optimization.ilqr": [[36, "module-double_pendulum.trajectory_optimization.ilqr"]], "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp": [[36, "module-double_pendulum.trajectory_optimization.ilqr.ilqr_cpp"]], "double_pendulum.trajectory_optimization.ilqr.paropt": [[36, "module-double_pendulum.trajectory_optimization.ilqr.paropt"]], "double_pendulum.utils": [[37, "module-double_pendulum.utils"]], "double_pendulum.utils.cmaes_controller_par_optimizer": [[37, "module-double_pendulum.utils.cmaes_controller_par_optimizer"]], "double_pendulum.utils.csv_trajectory": [[37, "module-double_pendulum.utils.csv_trajectory"]], "double_pendulum.utils.optimization": [[37, "module-double_pendulum.utils.optimization"]], "double_pendulum.utils.pcw_polynomial": [[37, "module-double_pendulum.utils.pcw_polynomial"]], "double_pendulum.utils.plotting": [[37, "module-double_pendulum.utils.plotting"]], "double_pendulum.utils.urdfs": [[37, "module-double_pendulum.utils.urdfs"]], "double_pendulum.utils.wrap_angles": [[37, "module-double_pendulum.utils.wrap_angles"]], "double_pendulum.utils.filters": [[38, "module-double_pendulum.utils.filters"]], "double_pendulum.utils.filters.butterworth": [[38, "module-double_pendulum.utils.filters.butterworth"]], "double_pendulum.utils.filters.fast_fourier_transform": [[38, "module-double_pendulum.utils.filters.fast_fourier_transform"]], "double_pendulum.utils.filters.identity": [[38, "module-double_pendulum.utils.filters.identity"]], "double_pendulum.utils.filters.kalman_filter": [[38, "module-double_pendulum.utils.filters.kalman_filter"]], "double_pendulum.utils.filters.low_pass": [[38, "module-double_pendulum.utils.filters.low_pass"]], "double_pendulum.utils.filters.running_mean": [[38, "module-double_pendulum.utils.filters.running_mean"]], "double_pendulum.utils.filters.savitzky_golay": [[38, "module-double_pendulum.utils.filters.savitzky_golay"]], "double_pendulum.utils.filters.unscented_kalman_filter": [[38, "module-double_pendulum.utils.filters.unscented_kalman_filter"]], "Hardware": [[39, "hardware"]], "Hardware Experiment Guide": [[40, "hardware-experiment-guide"]], "Safety Notes": [[40, "safety-notes"]], "Motors": [[41, "motors"]], "MJBots": [[42, "mjbots"]], "Initial Setup": [[42, "initial-setup"]], "Communication": [[42, "communication"], [43, "communication"]], "T-Motor (AK-80-6)": [[43, "t-motor-ak-80-6"]], "Physical Parameters of the Actuator": [[43, "physical-parameters-of-the-actuator"]], "Initial Motor Setup": [[43, "initial-motor-setup"]], "Tutorials": [[43, "tutorials"]], "Instructions: R-Link Config Tool": [[43, "instructions-r-link-config-tool"]], "Debugging": [[43, "debugging"]], "CAN Bus wiring": [[43, "can-bus-wiring"]], "Setting up the CAN interface": [[43, "setting-up-the-can-interface"]], "Testing Motor Connection": [[43, "testing-motor-connection"]], "Python Interface": [[43, "python-interface"]], "Internal PD-Controller": [[43, "internal-pd-controller"]], "Hardware & Testbench Description": [[44, "hardware-testbench-description"]], "Testbench Description": [[44, "testbench-description"]], "Assembly Instructions": [[44, "assembly-instructions"]], "Electrical Setup": [[44, "electrical-setup"]], "Wiring": [[44, "wiring"]], "backEMF": [[44, "backemf"]], "Welcome to Double Pendulum\u2019s documentation!": [[45, "welcome-to-double-pendulum-s-documentation"]], "Table of Contents": [[45, null]], "Indices and tables": [[45, "indices-and-tables"]], "Installation": [[46, "installation"]], "Potential Issues": [[46, "potential-issues"]], "Repository Structure": [[48, "repository-structure"]], "Programming Language": [[48, "programming-language"]], "Repository Overview": [[48, "repository-overview"]], "Model Parameters": [[48, "model-parameters"]], "Trajectory data": [[48, "trajectory-data"]], "(Abstract) Controller": [[48, "abstract-controller"]]}, "indexentries": {"double_pendulum": [[15, "module-double_pendulum"]], "module": [[15, "module-double_pendulum"], [16, "module-double_pendulum.analysis"], [16, "module-double_pendulum.analysis.benchmark"], [16, "module-double_pendulum.analysis.benchmark_plot"], [16, "module-double_pendulum.analysis.benchmark_scores"], [16, "module-double_pendulum.analysis.utils"], [17, "module-double_pendulum.controller"], [17, "module-double_pendulum.controller.abstract_controller"], [17, "module-double_pendulum.controller.combined_controller"], [18, "module-double_pendulum.controller.energy"], [18, "module-double_pendulum.controller.energy.energy_Xin"], [19, "module-double_pendulum.controller.friction_compensation"], [19, "module-double_pendulum.controller.friction_compensation.friction_compensation_controller"], [20, "module-double_pendulum.controller.gamepad"], [20, "module-double_pendulum.controller.gamepad.gamepad"], [20, "module-double_pendulum.controller.gamepad.gamepad_controller"], [21, "module-double_pendulum.controller.gravity_compensation"], [21, "module-double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller"], [21, "module-double_pendulum.controller.gravity_compensation.gravity_compensation_controller"], [22, "module-double_pendulum.controller.ilqr"], [22, "module-double_pendulum.controller.ilqr.ilqr_mpc_cpp"], [22, "module-double_pendulum.controller.ilqr.paropt"], [23, "module-double_pendulum.controller.inverse_dynamics"], [23, "module-double_pendulum.controller.inverse_dynamics.computed_torque_controller"], [23, "module-double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller"], [24, "module-double_pendulum.controller.lqr"], [24, "module-double_pendulum.controller.lqr.lqr"], [24, "module-double_pendulum.controller.lqr.lqr_controller"], [24, "module-double_pendulum.controller.lqr.lqr_controller_drake"], [25, "module-double_pendulum.controller.lqr.roa"], [25, "module-double_pendulum.controller.lqr.roa.check"], [25, "module-double_pendulum.controller.lqr.roa.coopt_interface"], [25, "module-double_pendulum.controller.lqr.roa.ellipsoid"], [25, "module-double_pendulum.controller.lqr.roa.prob_roa"], [25, "module-double_pendulum.controller.lqr.roa.roa_estimation"], [25, "module-double_pendulum.controller.lqr.roa.roa_paropt"], [26, "module-double_pendulum.controller.partial_feedback_linearization"], [26, "module-double_pendulum.controller.partial_feedback_linearization.pfl"], [26, "module-double_pendulum.controller.partial_feedback_linearization.symbolic_pfl"], [27, "module-double_pendulum.controller.pid"], [27, "module-double_pendulum.controller.pid.point_pid_controller"], [27, "module-double_pendulum.controller.pid.trajectory_pid_controller"], [28, "module-double_pendulum.controller.trajectory_following"], [28, "module-double_pendulum.controller.trajectory_following.feed_forward"], [28, "module-double_pendulum.controller.trajectory_following.trajectory_controller"], [29, "module-double_pendulum.controller.tvlqr"], [29, "module-double_pendulum.controller.tvlqr.tvlqr_controller"], [29, "module-double_pendulum.controller.tvlqr.tvlqr_controller_drake"], [30, "module-double_pendulum.experiments"], [30, "module-double_pendulum.experiments.experimental_utils"], [30, "module-double_pendulum.experiments.hardware_control_loop_tmotors"], [30, "module-double_pendulum.experiments.performance_profiler"], [31, "module-double_pendulum.model"], [31, "module-double_pendulum.model.friction_matrix"], [31, "module-double_pendulum.model.model_parameters"], [31, "module-double_pendulum.model.plant"], [31, "module-double_pendulum.model.symbolic_plant"], [32, "module-double_pendulum.simulation"], [32, "module-double_pendulum.simulation.simulation"], [32, "module-double_pendulum.simulation.visualization"], [33, "module-double_pendulum.system_identification"], [33, "module-double_pendulum.system_identification.data_prep"], [33, "module-double_pendulum.system_identification.dynamics"], [33, "module-double_pendulum.system_identification.loss"], [33, "module-double_pendulum.system_identification.plotting"], [33, "module-double_pendulum.system_identification.sys_id"], [34, "module-double_pendulum.trajectory_optimization"], [35, "module-double_pendulum.trajectory_optimization.direct_collocation"], [35, "module-double_pendulum.trajectory_optimization.direct_collocation.dircol_utils"], [35, "module-double_pendulum.trajectory_optimization.direct_collocation.direct_collocation"], [36, "module-double_pendulum.trajectory_optimization.ilqr"], [36, "module-double_pendulum.trajectory_optimization.ilqr.ilqr_cpp"], [36, "module-double_pendulum.trajectory_optimization.ilqr.paropt"], [37, "module-double_pendulum.utils"], [37, "module-double_pendulum.utils.cmaes_controller_par_optimizer"], [37, "module-double_pendulum.utils.csv_trajectory"], [37, "module-double_pendulum.utils.optimization"], [37, "module-double_pendulum.utils.pcw_polynomial"], [37, "module-double_pendulum.utils.plotting"], [37, "module-double_pendulum.utils.urdfs"], [37, "module-double_pendulum.utils.wrap_angles"], [38, "module-double_pendulum.utils.filters"], [38, "module-double_pendulum.utils.filters.butterworth"], [38, "module-double_pendulum.utils.filters.fast_fourier_transform"], [38, "module-double_pendulum.utils.filters.identity"], [38, "module-double_pendulum.utils.filters.kalman_filter"], [38, "module-double_pendulum.utils.filters.low_pass"], [38, "module-double_pendulum.utils.filters.running_mean"], [38, "module-double_pendulum.utils.filters.savitzky_golay"], [38, "module-double_pendulum.utils.filters.unscented_kalman_filter"]], "benchmark() (double_pendulum.analysis.benchmark.benchmarker method)": [[16, "double_pendulum.analysis.benchmark.benchmarker.benchmark"]], "benchmarker (class in double_pendulum.analysis.benchmark)": [[16, "double_pendulum.analysis.benchmark.benchmarker"]], "check_delay_robustness() (double_pendulum.analysis.benchmark.benchmarker method)": [[16, "double_pendulum.analysis.benchmark.benchmarker.check_delay_robustness"]], "check_goal_success() (double_pendulum.analysis.benchmark.benchmarker method)": [[16, "double_pendulum.analysis.benchmark.benchmarker.check_goal_success"]], "check_meas_noise_robustness() (double_pendulum.analysis.benchmark.benchmarker method)": [[16, "double_pendulum.analysis.benchmark.benchmarker.check_meas_noise_robustness"]], "check_modelpar_robustness() (double_pendulum.analysis.benchmark.benchmarker method)": [[16, "double_pendulum.analysis.benchmark.benchmarker.check_modelpar_robustness"]], "check_perturbation_robustness() (double_pendulum.analysis.benchmark.benchmarker method)": [[16, "double_pendulum.analysis.benchmark.benchmarker.check_perturbation_robustness"]], "check_unoise_robustness() (double_pendulum.analysis.benchmark.benchmarker method)": [[16, "double_pendulum.analysis.benchmark.benchmarker.check_unoise_robustness"]], "check_uresponsiveness_robustness() (double_pendulum.analysis.benchmark.benchmarker method)": [[16, "double_pendulum.analysis.benchmark.benchmarker.check_uresponsiveness_robustness"]], "compute_cost() (double_pendulum.analysis.benchmark.benchmarker method)": [[16, "double_pendulum.analysis.benchmark.benchmarker.compute_cost"]], "compute_ref_cost() (double_pendulum.analysis.benchmark.benchmarker method)": [[16, "double_pendulum.analysis.benchmark.benchmarker.compute_ref_cost"]], "compute_success_measure() (double_pendulum.analysis.benchmark.benchmarker method)": [[16, "double_pendulum.analysis.benchmark.benchmarker.compute_success_measure"]], "double_pendulum.analysis": [[16, "module-double_pendulum.analysis"]], "double_pendulum.analysis.benchmark": [[16, "module-double_pendulum.analysis.benchmark"]], "double_pendulum.analysis.benchmark_plot": [[16, "module-double_pendulum.analysis.benchmark_plot"]], "double_pendulum.analysis.benchmark_scores": [[16, "module-double_pendulum.analysis.benchmark_scores"]], "double_pendulum.analysis.utils": [[16, "module-double_pendulum.analysis.utils"]], "get_delay_score() (in module double_pendulum.analysis.benchmark_scores)": [[16, "double_pendulum.analysis.benchmark_scores.get_delay_score"]], "get_measurement_noise_score() (in module double_pendulum.analysis.benchmark_scores)": [[16, "double_pendulum.analysis.benchmark_scores.get_measurement_noise_score"]], "get_model_score() (in module double_pendulum.analysis.benchmark_scores)": [[16, "double_pendulum.analysis.benchmark_scores.get_model_score"]], "get_par_list() (in module double_pendulum.analysis.utils)": [[16, "double_pendulum.analysis.utils.get_par_list"]], "get_scores() (in module double_pendulum.analysis.benchmark_scores)": [[16, "double_pendulum.analysis.benchmark_scores.get_scores"]], "get_unoise_score() (in module double_pendulum.analysis.benchmark_scores)": [[16, "double_pendulum.analysis.benchmark_scores.get_unoise_score"]], "get_uresponsiveness_score() (in module double_pendulum.analysis.benchmark_scores)": [[16, "double_pendulum.analysis.benchmark_scores.get_uresponsiveness_score"]], "plot_benchmark_results() (in module double_pendulum.analysis.benchmark_plot)": [[16, "double_pendulum.analysis.benchmark_plot.plot_benchmark_results"]], "plot_model_robustness_multi() (in module double_pendulum.analysis.benchmark_plot)": [[16, "double_pendulum.analysis.benchmark_plot.plot_model_robustness_multi"]], "set_cost_par() (double_pendulum.analysis.benchmark.benchmarker method)": [[16, "double_pendulum.analysis.benchmark.benchmarker.set_cost_par"]], "set_init_traj() (double_pendulum.analysis.benchmark.benchmarker method)": [[16, "double_pendulum.analysis.benchmark.benchmarker.set_init_traj"]], "set_model_parameter() (double_pendulum.analysis.benchmark.benchmarker method)": [[16, "double_pendulum.analysis.benchmark.benchmarker.set_model_parameter"]], "simulate_and_get_cost() (double_pendulum.analysis.benchmark.benchmarker method)": [[16, "double_pendulum.analysis.benchmark.benchmarker.simulate_and_get_cost"]], "abstractcontroller (class in double_pendulum.controller.abstract_controller)": [[17, "double_pendulum.controller.abstract_controller.AbstractController"]], "combinedcontroller (class in double_pendulum.controller.combined_controller)": [[17, "double_pendulum.controller.combined_controller.CombinedController"]], "simultaneouscontrollers (class in double_pendulum.controller.combined_controller)": [[17, "double_pendulum.controller.combined_controller.SimultaneousControllers"]], "double_pendulum.controller": [[17, "module-double_pendulum.controller"]], "double_pendulum.controller.abstract_controller": [[17, "module-double_pendulum.controller.abstract_controller"]], "double_pendulum.controller.combined_controller": [[17, "module-double_pendulum.controller.combined_controller"]], "filter_measurement() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[17, "double_pendulum.controller.abstract_controller.AbstractController.filter_measurement"]], "get_control_output() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[17, "double_pendulum.controller.abstract_controller.AbstractController.get_control_output"]], "get_control_output_() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[17, "double_pendulum.controller.abstract_controller.AbstractController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.combined_controller.combinedcontroller method)": [[17, "double_pendulum.controller.combined_controller.CombinedController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.combined_controller.simultaneouscontrollers method)": [[17, "double_pendulum.controller.combined_controller.SimultaneousControllers.get_control_output_"]], "get_forecast() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[17, "double_pendulum.controller.abstract_controller.AbstractController.get_forecast"]], "get_forecast() (double_pendulum.controller.combined_controller.combinedcontroller method)": [[17, "double_pendulum.controller.combined_controller.CombinedController.get_forecast"]], "get_forecast() (double_pendulum.controller.combined_controller.simultaneouscontrollers method)": [[17, "double_pendulum.controller.combined_controller.SimultaneousControllers.get_forecast"]], "get_friction_torque() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[17, "double_pendulum.controller.abstract_controller.AbstractController.get_friction_torque"]], "get_gravity_torque() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[17, "double_pendulum.controller.abstract_controller.AbstractController.get_gravity_torque"]], "get_init_trajectory() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[17, "double_pendulum.controller.abstract_controller.AbstractController.get_init_trajectory"]], "get_init_trajectory() (double_pendulum.controller.combined_controller.combinedcontroller method)": [[17, "double_pendulum.controller.combined_controller.CombinedController.get_init_trajectory"]], "get_init_trajectory() (double_pendulum.controller.combined_controller.simultaneouscontrollers method)": [[17, "double_pendulum.controller.combined_controller.SimultaneousControllers.get_init_trajectory"]], "init() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[17, "double_pendulum.controller.abstract_controller.AbstractController.init"]], "init_() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[17, "double_pendulum.controller.abstract_controller.AbstractController.init_"]], "init_() (double_pendulum.controller.combined_controller.combinedcontroller method)": [[17, "double_pendulum.controller.combined_controller.CombinedController.init_"]], "init_() (double_pendulum.controller.combined_controller.simultaneouscontrollers method)": [[17, "double_pendulum.controller.combined_controller.SimultaneousControllers.init_"]], "init_filter() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[17, "double_pendulum.controller.abstract_controller.AbstractController.init_filter"]], "reset() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[17, "double_pendulum.controller.abstract_controller.AbstractController.reset"]], "reset_() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[17, "double_pendulum.controller.abstract_controller.AbstractController.reset_"]], "reset_() (double_pendulum.controller.combined_controller.combinedcontroller method)": [[17, "double_pendulum.controller.combined_controller.CombinedController.reset_"]], "save() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[17, "double_pendulum.controller.abstract_controller.AbstractController.save"]], "save_() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[17, "double_pendulum.controller.abstract_controller.AbstractController.save_"]], "save_() (double_pendulum.controller.combined_controller.combinedcontroller method)": [[17, "double_pendulum.controller.combined_controller.CombinedController.save_"]], "set_filter_args() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[17, "double_pendulum.controller.abstract_controller.AbstractController.set_filter_args"]], "set_friction_compensation() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[17, "double_pendulum.controller.abstract_controller.AbstractController.set_friction_compensation"]], "set_goal() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[17, "double_pendulum.controller.abstract_controller.AbstractController.set_goal"]], "set_goal() (double_pendulum.controller.combined_controller.combinedcontroller method)": [[17, "double_pendulum.controller.combined_controller.CombinedController.set_goal"]], "set_goal() (double_pendulum.controller.combined_controller.simultaneouscontrollers method)": [[17, "double_pendulum.controller.combined_controller.SimultaneousControllers.set_goal"]], "set_gravity_compensation() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[17, "double_pendulum.controller.abstract_controller.AbstractController.set_gravity_compensation"]], "set_parameters() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[17, "double_pendulum.controller.abstract_controller.AbstractController.set_parameters"]], "set_parameters() (double_pendulum.controller.combined_controller.combinedcontroller method)": [[17, "double_pendulum.controller.combined_controller.CombinedController.set_parameters"]], "set_parameters() (double_pendulum.controller.combined_controller.simultaneouscontrollers method)": [[17, "double_pendulum.controller.combined_controller.SimultaneousControllers.set_parameters"]], "set_start() (double_pendulum.controller.abstract_controller.abstractcontroller method)": [[17, "double_pendulum.controller.abstract_controller.AbstractController.set_start"]], "set_start() (double_pendulum.controller.combined_controller.combinedcontroller method)": [[17, "double_pendulum.controller.combined_controller.CombinedController.set_start"]], "set_start() (double_pendulum.controller.combined_controller.simultaneouscontrollers method)": [[17, "double_pendulum.controller.combined_controller.SimultaneousControllers.set_start"]], "energycontroller (class in double_pendulum.controller.energy.energy_xin)": [[18, "double_pendulum.controller.energy.energy_Xin.EnergyController"]], "check_parameters() (double_pendulum.controller.energy.energy_xin.energycontroller method)": [[18, "double_pendulum.controller.energy.energy_Xin.EnergyController.check_parameters"]], "double_pendulum.controller.energy": [[18, "module-double_pendulum.controller.energy"]], "double_pendulum.controller.energy.energy_xin": [[18, "module-double_pendulum.controller.energy.energy_Xin"]], "get_control_output_() (double_pendulum.controller.energy.energy_xin.energycontroller method)": [[18, "double_pendulum.controller.energy.energy_Xin.EnergyController.get_control_output_"]], "init_() (double_pendulum.controller.energy.energy_xin.energycontroller method)": [[18, "double_pendulum.controller.energy.energy_Xin.EnergyController.init_"]], "kd_func() (in module double_pendulum.controller.energy.energy_xin)": [[18, "double_pendulum.controller.energy.energy_Xin.kd_func"]], "save_() (double_pendulum.controller.energy.energy_xin.energycontroller method)": [[18, "double_pendulum.controller.energy.energy_Xin.EnergyController.save_"]], "set_goal() (double_pendulum.controller.energy.energy_xin.energycontroller method)": [[18, "double_pendulum.controller.energy.energy_Xin.EnergyController.set_goal"]], "set_parameters() (double_pendulum.controller.energy.energy_xin.energycontroller method)": [[18, "double_pendulum.controller.energy.energy_Xin.EnergyController.set_parameters"]], "frictioncompensationcontroller (class in double_pendulum.controller.friction_compensation.friction_compensation_controller)": [[19, "double_pendulum.controller.friction_compensation.friction_compensation_controller.FrictionCompensationController"]], "double_pendulum.controller.friction_compensation": [[19, "module-double_pendulum.controller.friction_compensation"]], "double_pendulum.controller.friction_compensation.friction_compensation_controller": [[19, "module-double_pendulum.controller.friction_compensation.friction_compensation_controller"]], "get_control_output_() (double_pendulum.controller.friction_compensation.friction_compensation_controller.frictioncompensationcontroller method)": [[19, "double_pendulum.controller.friction_compensation.friction_compensation_controller.FrictionCompensationController.get_control_output_"]], "save_() (double_pendulum.controller.friction_compensation.friction_compensation_controller.frictioncompensationcontroller method)": [[19, "double_pendulum.controller.friction_compensation.friction_compensation_controller.FrictionCompensationController.save_"]], "gamepad (class in double_pendulum.controller.gamepad.gamepad)": [[20, "double_pendulum.controller.gamepad.gamepad.GamePad"]], "gamepadcontroller (class in double_pendulum.controller.gamepad.gamepad_controller)": [[20, "double_pendulum.controller.gamepad.gamepad_controller.GamepadController"]], "double_pendulum.controller.gamepad": [[20, "module-double_pendulum.controller.gamepad"]], "double_pendulum.controller.gamepad.gamepad": [[20, "module-double_pendulum.controller.gamepad.gamepad"]], "double_pendulum.controller.gamepad.gamepad_controller": [[20, "module-double_pendulum.controller.gamepad.gamepad_controller"]], "get_control_output_() (double_pendulum.controller.gamepad.gamepad_controller.gamepadcontroller method)": [[20, "double_pendulum.controller.gamepad.gamepad_controller.GamepadController.get_control_output_"]], "read() (double_pendulum.controller.gamepad.gamepad.gamepad method)": [[20, "double_pendulum.controller.gamepad.gamepad.GamePad.read"]], "gravitycompensationcontroller (class in double_pendulum.controller.gravity_compensation.gravity_compensation_controller)": [[21, "double_pendulum.controller.gravity_compensation.gravity_compensation_controller.GravityCompensationController"]], "pidgravitycompensationcontroller (class in double_pendulum.controller.gravity_compensation.pid_gravity_compensation_controller)": [[21, "double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller.PIDGravityCompensationController"]], "double_pendulum.controller.gravity_compensation": [[21, "module-double_pendulum.controller.gravity_compensation"]], "double_pendulum.controller.gravity_compensation.pid_gravity_compensation_controller": [[21, "module-double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller"]], "double_pendulum.controller.gravity_compensation.gravity_compensation_controller": [[21, "module-double_pendulum.controller.gravity_compensation.gravity_compensation_controller"]], "get_control_output_() (double_pendulum.controller.gravity_compensation.pid_gravity_compensation_controller.pidgravitycompensationcontroller method)": [[21, "double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller.PIDGravityCompensationController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.gravity_compensation.gravity_compensation_controller.gravitycompensationcontroller method)": [[21, "double_pendulum.controller.gravity_compensation.gravity_compensation_controller.GravityCompensationController.get_control_output_"]], "init_() (double_pendulum.controller.gravity_compensation.pid_gravity_compensation_controller.pidgravitycompensationcontroller method)": [[21, "double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller.PIDGravityCompensationController.init_"]], "save_() (double_pendulum.controller.gravity_compensation.pid_gravity_compensation_controller.pidgravitycompensationcontroller method)": [[21, "double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller.PIDGravityCompensationController.save_"]], "save_() (double_pendulum.controller.gravity_compensation.gravity_compensation_controller.gravitycompensationcontroller method)": [[21, "double_pendulum.controller.gravity_compensation.gravity_compensation_controller.GravityCompensationController.save_"]], "set_goal() (double_pendulum.controller.gravity_compensation.pid_gravity_compensation_controller.pidgravitycompensationcontroller method)": [[21, "double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller.PIDGravityCompensationController.set_goal"]], "set_parameters() (double_pendulum.controller.gravity_compensation.pid_gravity_compensation_controller.pidgravitycompensationcontroller method)": [[21, "double_pendulum.controller.gravity_compensation.PID_gravity_compensation_controller.PIDGravityCompensationController.set_parameters"]], "ilqrmpccppcontroller (class in double_pendulum.controller.ilqr.ilqr_mpc_cpp)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController"]], "compute_init_traj() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.compute_init_traj"]], "double_pendulum.controller.ilqr": [[22, "module-double_pendulum.controller.ilqr"]], "double_pendulum.controller.ilqr.ilqr_mpc_cpp": [[22, "module-double_pendulum.controller.ilqr.ilqr_mpc_cpp"]], "double_pendulum.controller.ilqr.paropt": [[22, "module-double_pendulum.controller.ilqr.paropt"]], "get_control_output_() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.get_control_output_"]], "get_forecast() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.get_forecast"]], "get_init_trajectory() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.get_init_trajectory"]], "ilqrmpc_swingup_loss (class in double_pendulum.controller.ilqr.paropt)": [[22, "double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss"]], "init() (double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss method)": [[22, "double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss.init"]], "init_() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.init_"]], "load_init_traj() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.load_init_traj"]], "rescale_pars() (double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss method)": [[22, "double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss.rescale_pars"]], "save_() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.save_"]], "set_cost_parameters() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.set_cost_parameters"]], "set_cost_parameters_() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.set_cost_parameters_"]], "set_final_cost_parameters() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.set_final_cost_parameters"]], "set_goal() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.set_goal"]], "set_model_parameters() (double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss method)": [[22, "double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss.set_model_parameters"]], "set_parameters() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.set_parameters"]], "set_parameters() (double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss method)": [[22, "double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss.set_parameters"]], "set_start() (double_pendulum.controller.ilqr.ilqr_mpc_cpp.ilqrmpccppcontroller method)": [[22, "double_pendulum.controller.ilqr.ilqr_mpc_cpp.ILQRMPCCPPController.set_start"]], "unscale_pars() (double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss method)": [[22, "double_pendulum.controller.ilqr.paropt.ilqrmpc_swingup_loss.unscale_pars"]], "computedtorquecontroller (class in double_pendulum.controller.inverse_dynamics.computed_torque_controller)": [[23, "double_pendulum.controller.inverse_dynamics.computed_torque_controller.ComputedTorqueController"]], "inversedynamicscontroller (class in double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller)": [[23, "double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller.InverseDynamicsController"]], "double_pendulum.controller.inverse_dynamics": [[23, "module-double_pendulum.controller.inverse_dynamics"]], "double_pendulum.controller.inverse_dynamics.computed_torque_controller": [[23, "module-double_pendulum.controller.inverse_dynamics.computed_torque_controller"]], "double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller": [[23, "module-double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller"]], "get_control_output_() (double_pendulum.controller.inverse_dynamics.computed_torque_controller.computedtorquecontroller method)": [[23, "double_pendulum.controller.inverse_dynamics.computed_torque_controller.ComputedTorqueController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller.inversedynamicscontroller method)": [[23, "double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller.InverseDynamicsController.get_control_output_"]], "get_init_trajectory() (double_pendulum.controller.inverse_dynamics.computed_torque_controller.computedtorquecontroller method)": [[23, "double_pendulum.controller.inverse_dynamics.computed_torque_controller.ComputedTorqueController.get_init_trajectory"]], "get_init_trajectory() (double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller.inversedynamicscontroller method)": [[23, "double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller.InverseDynamicsController.get_init_trajectory"]], "init_() (double_pendulum.controller.inverse_dynamics.computed_torque_controller.computedtorquecontroller method)": [[23, "double_pendulum.controller.inverse_dynamics.computed_torque_controller.ComputedTorqueController.init_"]], "init_() (double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller.inversedynamicscontroller method)": [[23, "double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller.InverseDynamicsController.init_"]], "save_() (double_pendulum.controller.inverse_dynamics.computed_torque_controller.computedtorquecontroller method)": [[23, "double_pendulum.controller.inverse_dynamics.computed_torque_controller.ComputedTorqueController.save_"]], "save_() (double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller.inversedynamicscontroller method)": [[23, "double_pendulum.controller.inverse_dynamics.inverse_dynamics_ff_controller.InverseDynamicsController.save_"]], "set_parameters() (double_pendulum.controller.inverse_dynamics.computed_torque_controller.computedtorquecontroller method)": [[23, "double_pendulum.controller.inverse_dynamics.computed_torque_controller.ComputedTorqueController.set_parameters"]], "lqrcontroller (class in double_pendulum.controller.lqr.lqr_controller)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController"]], "lqrcontroller (class in double_pendulum.controller.lqr.lqr_controller_drake)": [[24, "double_pendulum.controller.lqr.lqr_controller_drake.LQRController"]], "lqrcontroller_nonsymbolic (class in double_pendulum.controller.lqr.lqr_controller)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController_nonsymbolic"]], "dlqr() (in module double_pendulum.controller.lqr.lqr)": [[24, "double_pendulum.controller.lqr.lqr.dlqr"]], "double_pendulum.controller.lqr": [[24, "module-double_pendulum.controller.lqr"]], "double_pendulum.controller.lqr.lqr": [[24, "module-double_pendulum.controller.lqr.lqr"]], "double_pendulum.controller.lqr.lqr_controller": [[24, "module-double_pendulum.controller.lqr.lqr_controller"]], "double_pendulum.controller.lqr.lqr_controller_drake": [[24, "module-double_pendulum.controller.lqr.lqr_controller_drake"]], "get_control_output_() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller_nonsymbolic method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController_nonsymbolic.get_control_output_"]], "get_control_output_() (double_pendulum.controller.lqr.lqr_controller_drake.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller_drake.LQRController.get_control_output_"]], "init_() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController.init_"]], "init_() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller_nonsymbolic method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController_nonsymbolic.init_"]], "init_() (double_pendulum.controller.lqr.lqr_controller_drake.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller_drake.LQRController.init_"]], "iterative_riccati() (in module double_pendulum.controller.lqr.lqr)": [[24, "double_pendulum.controller.lqr.lqr.iterative_riccati"]], "lqr() (in module double_pendulum.controller.lqr.lqr)": [[24, "double_pendulum.controller.lqr.lqr.lqr"]], "save_() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController.save_"]], "save_() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller_nonsymbolic method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController_nonsymbolic.save_"]], "save_() (double_pendulum.controller.lqr.lqr_controller_drake.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller_drake.LQRController.save_"]], "set_cost_matrices() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController.set_cost_matrices"]], "set_cost_matrices() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller_nonsymbolic method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController_nonsymbolic.set_cost_matrices"]], "set_cost_matrices() (double_pendulum.controller.lqr.lqr_controller_drake.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller_drake.LQRController.set_cost_matrices"]], "set_cost_parameters() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController.set_cost_parameters"]], "set_cost_parameters() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller_nonsymbolic method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController_nonsymbolic.set_cost_parameters"]], "set_cost_parameters() (double_pendulum.controller.lqr.lqr_controller_drake.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller_drake.LQRController.set_cost_parameters"]], "set_cost_parameters_() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController.set_cost_parameters_"]], "set_cost_parameters_() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller_nonsymbolic method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController_nonsymbolic.set_cost_parameters_"]], "set_cost_parameters_() (double_pendulum.controller.lqr.lqr_controller_drake.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller_drake.LQRController.set_cost_parameters_"]], "set_goal() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController.set_goal"]], "set_goal() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller_nonsymbolic method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController_nonsymbolic.set_goal"]], "set_goal() (double_pendulum.controller.lqr.lqr_controller_drake.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller_drake.LQRController.set_goal"]], "set_parameters() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController.set_parameters"]], "set_parameters() (double_pendulum.controller.lqr.lqr_controller.lqrcontroller_nonsymbolic method)": [[24, "double_pendulum.controller.lqr.lqr_controller.LQRController_nonsymbolic.set_parameters"]], "sosdoublependulumdynamics() (in module double_pendulum.controller.lqr.roa.roa_estimation)": [[25, "double_pendulum.controller.lqr.roa.roa_estimation.SosDoublePendulumDynamics"]], "bisect_and_verify() (in module double_pendulum.controller.lqr.roa.roa_estimation)": [[25, "double_pendulum.controller.lqr.roa.roa_estimation.bisect_and_verify"]], "calc_roa() (in module double_pendulum.controller.lqr.roa.roa_paropt)": [[25, "double_pendulum.controller.lqr.roa.roa_paropt.calc_roa"]], "caprr_coopt_interface (class in double_pendulum.controller.lqr.roa.coopt_interface)": [[25, "double_pendulum.controller.lqr.roa.coopt_interface.caprr_coopt_interface"]], "check_x0() (in module double_pendulum.controller.lqr.roa.prob_roa)": [[25, "double_pendulum.controller.lqr.roa.prob_roa.check_x0"]], "combined_opt_obj() (double_pendulum.controller.lqr.roa.coopt_interface.caprr_coopt_interface method)": [[25, "double_pendulum.controller.lqr.roa.coopt_interface.caprr_coopt_interface.combined_opt_obj"]], "combined_reduced_opt_obj() (double_pendulum.controller.lqr.roa.coopt_interface.caprr_coopt_interface method)": [[25, "double_pendulum.controller.lqr.roa.coopt_interface.caprr_coopt_interface.combined_reduced_opt_obj"]], "compute_roa_prob() (in module double_pendulum.controller.lqr.roa.prob_roa)": [[25, "double_pendulum.controller.lqr.roa.prob_roa.compute_roa_prob"]], "design_and_lqr_opt_obj() (double_pendulum.controller.lqr.roa.coopt_interface.caprr_coopt_interface method)": [[25, "double_pendulum.controller.lqr.roa.coopt_interface.caprr_coopt_interface.design_and_lqr_opt_obj"]], "design_opt_obj() (double_pendulum.controller.lqr.roa.coopt_interface.caprr_coopt_interface method)": [[25, "double_pendulum.controller.lqr.roa.coopt_interface.caprr_coopt_interface.design_opt_obj"]], "directsphere() (in module double_pendulum.controller.lqr.roa.ellipsoid)": [[25, "double_pendulum.controller.lqr.roa.ellipsoid.directSphere"]], "doestimate() (double_pendulum.controller.lqr.roa.roa_estimation.probtiroa method)": [[25, "double_pendulum.controller.lqr.roa.roa_estimation.probTIROA.doEstimate"]], "double_pendulum.controller.lqr.roa": [[25, "module-double_pendulum.controller.lqr.roa"]], "double_pendulum.controller.lqr.roa.check": [[25, "module-double_pendulum.controller.lqr.roa.check"]], "double_pendulum.controller.lqr.roa.coopt_interface": [[25, "module-double_pendulum.controller.lqr.roa.coopt_interface"]], "double_pendulum.controller.lqr.roa.ellipsoid": [[25, "module-double_pendulum.controller.lqr.roa.ellipsoid"]], "double_pendulum.controller.lqr.roa.prob_roa": [[25, "module-double_pendulum.controller.lqr.roa.prob_roa"]], "double_pendulum.controller.lqr.roa.roa_estimation": [[25, "module-double_pendulum.controller.lqr.roa.roa_estimation"]], "double_pendulum.controller.lqr.roa.roa_paropt": [[25, "module-double_pendulum.controller.lqr.roa.roa_paropt"]], "getellipseparamsfromquad() (in module double_pendulum.controller.lqr.roa.ellipsoid)": [[25, "double_pendulum.controller.lqr.roa.ellipsoid.getEllipseParamsFromQuad"]], "getellipsepatch() (in module double_pendulum.controller.lqr.roa.ellipsoid)": [[25, "double_pendulum.controller.lqr.roa.ellipsoid.getEllipsePatch"]], "getellipsepatches() (in module double_pendulum.controller.lqr.roa.ellipsoid)": [[25, "double_pendulum.controller.lqr.roa.ellipsoid.getEllipsePatches"]], "log_and_print_clbk() (double_pendulum.controller.lqr.roa.coopt_interface.logger method)": [[25, "double_pendulum.controller.lqr.roa.coopt_interface.logger.log_and_print_clbk"]], "logger (class in double_pendulum.controller.lqr.roa.coopt_interface)": [[25, "double_pendulum.controller.lqr.roa.coopt_interface.logger"]], "lqr_check_ctg (class in double_pendulum.controller.lqr.roa.check)": [[25, "double_pendulum.controller.lqr.roa.check.lqr_check_ctg"]], "lqr_check_ctg_verification() (in module double_pendulum.controller.lqr.roa.check)": [[25, "double_pendulum.controller.lqr.roa.check.lqr_check_ctg_verification"]], "lqr_check_epsilon (class in double_pendulum.controller.lqr.roa.check)": [[25, "double_pendulum.controller.lqr.roa.check.lqr_check_epsilon"]], "lqr_check_epsilon_verification() (in module double_pendulum.controller.lqr.roa.check)": [[25, "double_pendulum.controller.lqr.roa.check.lqr_check_epsilon_verification"]], "lqr_param_opt_obj() (double_pendulum.controller.lqr.roa.coopt_interface.caprr_coopt_interface method)": [[25, "double_pendulum.controller.lqr.roa.coopt_interface.caprr_coopt_interface.lqr_param_opt_obj"]], "lqr_param_reduced_opt_obj() (double_pendulum.controller.lqr.roa.coopt_interface.caprr_coopt_interface method)": [[25, "double_pendulum.controller.lqr.roa.coopt_interface.caprr_coopt_interface.lqr_param_reduced_opt_obj"]], "najafi() (in module double_pendulum.controller.lqr.roa.coopt_interface)": [[25, "double_pendulum.controller.lqr.roa.coopt_interface.najafi"]], "najafi_direct() (in module double_pendulum.controller.lqr.roa.coopt_interface)": [[25, "double_pendulum.controller.lqr.roa.coopt_interface.najafi_direct"]], "plotellipse() (in module double_pendulum.controller.lqr.roa.ellipsoid)": [[25, "double_pendulum.controller.lqr.roa.ellipsoid.plotEllipse"]], "probtiroa (class in double_pendulum.controller.lqr.roa.roa_estimation)": [[25, "double_pendulum.controller.lqr.roa.roa_estimation.probTIROA"]], "quadform() (in module double_pendulum.controller.lqr.roa.ellipsoid)": [[25, "double_pendulum.controller.lqr.roa.ellipsoid.quadForm"]], "rescale_pars() (double_pendulum.controller.lqr.roa.prob_roa.roa_prob_loss method)": [[25, "double_pendulum.controller.lqr.roa.prob_roa.roa_prob_loss.rescale_pars"]], "rescale_pars() (double_pendulum.controller.lqr.roa.roa_paropt.roa_lqrandmodelpar_lossfunc method)": [[25, "double_pendulum.controller.lqr.roa.roa_paropt.roa_lqrandmodelpar_lossfunc.rescale_pars"]], "rescale_pars() (double_pendulum.controller.lqr.roa.roa_paropt.roa_lqrpar_lossfunc method)": [[25, "double_pendulum.controller.lqr.roa.roa_paropt.roa_lqrpar_lossfunc.rescale_pars"]], "rescale_pars() (double_pendulum.controller.lqr.roa.roa_paropt.roa_modelpar_lossfunc method)": [[25, "double_pendulum.controller.lqr.roa.roa_paropt.roa_modelpar_lossfunc.rescale_pars"]], "rho_equalityconstrained() (in module double_pendulum.controller.lqr.roa.roa_estimation)": [[25, "double_pendulum.controller.lqr.roa.roa_estimation.rho_equalityConstrained"]], "roa_alternate_opt() (in module double_pendulum.controller.lqr.roa.roa_paropt)": [[25, "double_pendulum.controller.lqr.roa.roa_paropt.roa_alternate_opt"]], "roa_design_opt() (in module double_pendulum.controller.lqr.roa.roa_paropt)": [[25, "double_pendulum.controller.lqr.roa.roa_paropt.roa_design_opt"]], "roa_lqr_opt() (in module double_pendulum.controller.lqr.roa.roa_paropt)": [[25, "double_pendulum.controller.lqr.roa.roa_paropt.roa_lqr_opt"]], "roa_lqrandmodelpar_lossfunc (class in double_pendulum.controller.lqr.roa.roa_paropt)": [[25, "double_pendulum.controller.lqr.roa.roa_paropt.roa_lqrandmodelpar_lossfunc"]], "roa_lqrpar_lossfunc (class in double_pendulum.controller.lqr.roa.roa_paropt)": [[25, "double_pendulum.controller.lqr.roa.roa_paropt.roa_lqrpar_lossfunc"]], "roa_modelpar_lossfunc (class in double_pendulum.controller.lqr.roa.roa_paropt)": [[25, "double_pendulum.controller.lqr.roa.roa_paropt.roa_modelpar_lossfunc"]], "roa_prob_loss (class in double_pendulum.controller.lqr.roa.prob_roa)": [[25, "double_pendulum.controller.lqr.roa.prob_roa.roa_prob_loss"]], "samplefromellipsoid() (in module double_pendulum.controller.lqr.roa.ellipsoid)": [[25, "double_pendulum.controller.lqr.roa.ellipsoid.sampleFromEllipsoid"]], "set_cost_parameters() (double_pendulum.controller.lqr.roa.roa_paropt.roa_modelpar_lossfunc method)": [[25, "double_pendulum.controller.lqr.roa.roa_paropt.roa_modelpar_lossfunc.set_cost_parameters"]], "set_model_parameters() (double_pendulum.controller.lqr.roa.roa_paropt.roa_lqrandmodelpar_lossfunc method)": [[25, "double_pendulum.controller.lqr.roa.roa_paropt.roa_lqrandmodelpar_lossfunc.set_model_parameters"]], "set_model_parameters() (double_pendulum.controller.lqr.roa.roa_paropt.roa_lqrpar_lossfunc method)": [[25, "double_pendulum.controller.lqr.roa.roa_paropt.roa_lqrpar_lossfunc.set_model_parameters"]], "set_model_parameters() (double_pendulum.controller.lqr.roa.roa_paropt.roa_modelpar_lossfunc method)": [[25, "double_pendulum.controller.lqr.roa.roa_paropt.roa_modelpar_lossfunc.set_model_parameters"]], "sim_callback() (double_pendulum.controller.lqr.roa.check.lqr_check_ctg method)": [[25, "double_pendulum.controller.lqr.roa.check.lqr_check_ctg.sim_callback"]], "sim_callback() (double_pendulum.controller.lqr.roa.check.lqr_check_epsilon method)": [[25, "double_pendulum.controller.lqr.roa.check.lqr_check_epsilon.sim_callback"]], "unscale_pars() (double_pendulum.controller.lqr.roa.prob_roa.roa_prob_loss method)": [[25, "double_pendulum.controller.lqr.roa.prob_roa.roa_prob_loss.unscale_pars"]], "unscale_pars() (double_pendulum.controller.lqr.roa.roa_paropt.roa_lqrandmodelpar_lossfunc method)": [[25, "double_pendulum.controller.lqr.roa.roa_paropt.roa_lqrandmodelpar_lossfunc.unscale_pars"]], "unscale_pars() (double_pendulum.controller.lqr.roa.roa_paropt.roa_lqrpar_lossfunc method)": [[25, "double_pendulum.controller.lqr.roa.roa_paropt.roa_lqrpar_lossfunc.unscale_pars"]], "unscale_pars() (double_pendulum.controller.lqr.roa.roa_paropt.roa_modelpar_lossfunc method)": [[25, "double_pendulum.controller.lqr.roa.roa_paropt.roa_modelpar_lossfunc.unscale_pars"]], "verify_double_pendulum_rho() (in module double_pendulum.controller.lqr.roa.roa_estimation)": [[25, "double_pendulum.controller.lqr.roa.roa_estimation.verify_double_pendulum_rho"]], "volellipsoid() (in module double_pendulum.controller.lqr.roa.ellipsoid)": [[25, "double_pendulum.controller.lqr.roa.ellipsoid.volEllipsoid"]], "energyshapingpflandlqrcontroller (class in double_pendulum.controller.partial_feedback_linearization.pfl)": [[26, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLAndLQRController"]], "energyshapingpflcontroller (class in double_pendulum.controller.partial_feedback_linearization.pfl)": [[26, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLController"]], "symbolicpflandlqrcontroller (class in double_pendulum.controller.partial_feedback_linearization.symbolic_pfl)": [[26, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLAndLQRController"]], "symbolicpflcontroller (class in double_pendulum.controller.partial_feedback_linearization.symbolic_pfl)": [[26, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLController"]], "double_pendulum.controller.partial_feedback_linearization": [[26, "module-double_pendulum.controller.partial_feedback_linearization"]], "double_pendulum.controller.partial_feedback_linearization.pfl": [[26, "module-double_pendulum.controller.partial_feedback_linearization.pfl"]], "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl": [[26, "module-double_pendulum.controller.partial_feedback_linearization.symbolic_pfl"]], "get_control_output_() (double_pendulum.controller.partial_feedback_linearization.pfl.energyshapingpflandlqrcontroller method)": [[26, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLAndLQRController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.partial_feedback_linearization.pfl.energyshapingpflcontroller method)": [[26, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflandlqrcontroller method)": [[26, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLAndLQRController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflcontroller method)": [[26, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLController.get_control_output_"]], "init_() (double_pendulum.controller.partial_feedback_linearization.pfl.energyshapingpflandlqrcontroller method)": [[26, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLAndLQRController.init_"]], "init_() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflandlqrcontroller method)": [[26, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLAndLQRController.init_"]], "init_() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflcontroller method)": [[26, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLController.init_"]], "save_() (double_pendulum.controller.partial_feedback_linearization.pfl.energyshapingpflcontroller method)": [[26, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLController.save_"]], "save_() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflandlqrcontroller method)": [[26, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLAndLQRController.save_"]], "save_() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflcontroller method)": [[26, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLController.save_"]], "set_cost_parameters() (double_pendulum.controller.partial_feedback_linearization.pfl.energyshapingpflcontroller method)": [[26, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLController.set_cost_parameters"]], "set_cost_parameters() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflcontroller method)": [[26, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLController.set_cost_parameters"]], "set_cost_parameters_() (double_pendulum.controller.partial_feedback_linearization.pfl.energyshapingpflandlqrcontroller method)": [[26, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLAndLQRController.set_cost_parameters_"]], "set_cost_parameters_() (double_pendulum.controller.partial_feedback_linearization.pfl.energyshapingpflcontroller method)": [[26, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLController.set_cost_parameters_"]], "set_cost_parameters_() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflandlqrcontroller method)": [[26, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLAndLQRController.set_cost_parameters_"]], "set_cost_parameters_() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflcontroller method)": [[26, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLController.set_cost_parameters_"]], "set_goal() (double_pendulum.controller.partial_feedback_linearization.pfl.energyshapingpflandlqrcontroller method)": [[26, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLAndLQRController.set_goal"]], "set_goal() (double_pendulum.controller.partial_feedback_linearization.pfl.energyshapingpflcontroller method)": [[26, "double_pendulum.controller.partial_feedback_linearization.pfl.EnergyShapingPFLController.set_goal"]], "set_goal() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflandlqrcontroller method)": [[26, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLAndLQRController.set_goal"]], "set_goal() (double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.symbolicpflcontroller method)": [[26, "double_pendulum.controller.partial_feedback_linearization.symbolic_pfl.SymbolicPFLController.set_goal"]], "pointpidcontroller (class in double_pendulum.controller.pid.point_pid_controller)": [[27, "double_pendulum.controller.pid.point_pid_controller.PointPIDController"]], "trajpidcontroller (class in double_pendulum.controller.pid.trajectory_pid_controller)": [[27, "double_pendulum.controller.pid.trajectory_pid_controller.TrajPIDController"]], "double_pendulum.controller.pid": [[27, "module-double_pendulum.controller.pid"]], "double_pendulum.controller.pid.point_pid_controller": [[27, "module-double_pendulum.controller.pid.point_pid_controller"]], "double_pendulum.controller.pid.trajectory_pid_controller": [[27, "module-double_pendulum.controller.pid.trajectory_pid_controller"]], "get_control_output_() (double_pendulum.controller.pid.point_pid_controller.pointpidcontroller method)": [[27, "double_pendulum.controller.pid.point_pid_controller.PointPIDController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.pid.trajectory_pid_controller.trajpidcontroller method)": [[27, "double_pendulum.controller.pid.trajectory_pid_controller.TrajPIDController.get_control_output_"]], "get_init_trajectory() (double_pendulum.controller.pid.trajectory_pid_controller.trajpidcontroller method)": [[27, "double_pendulum.controller.pid.trajectory_pid_controller.TrajPIDController.get_init_trajectory"]], "init_() (double_pendulum.controller.pid.point_pid_controller.pointpidcontroller method)": [[27, "double_pendulum.controller.pid.point_pid_controller.PointPIDController.init_"]], "init_() (double_pendulum.controller.pid.trajectory_pid_controller.trajpidcontroller method)": [[27, "double_pendulum.controller.pid.trajectory_pid_controller.TrajPIDController.init_"]], "save_() (double_pendulum.controller.pid.point_pid_controller.pointpidcontroller method)": [[27, "double_pendulum.controller.pid.point_pid_controller.PointPIDController.save_"]], "save_() (double_pendulum.controller.pid.trajectory_pid_controller.trajpidcontroller method)": [[27, "double_pendulum.controller.pid.trajectory_pid_controller.TrajPIDController.save_"]], "set_goal() (double_pendulum.controller.pid.point_pid_controller.pointpidcontroller method)": [[27, "double_pendulum.controller.pid.point_pid_controller.PointPIDController.set_goal"]], "set_parameters() (double_pendulum.controller.pid.point_pid_controller.pointpidcontroller method)": [[27, "double_pendulum.controller.pid.point_pid_controller.PointPIDController.set_parameters"]], "set_parameters() (double_pendulum.controller.pid.trajectory_pid_controller.trajpidcontroller method)": [[27, "double_pendulum.controller.pid.trajectory_pid_controller.TrajPIDController.set_parameters"]], "feedforwardcontroller (class in double_pendulum.controller.trajectory_following.feed_forward)": [[28, "double_pendulum.controller.trajectory_following.feed_forward.FeedForwardController"]], "trajectorycontroller (class in double_pendulum.controller.trajectory_following.trajectory_controller)": [[28, "double_pendulum.controller.trajectory_following.trajectory_controller.TrajectoryController"]], "trajectoryinterpcontroller (class in double_pendulum.controller.trajectory_following.trajectory_controller)": [[28, "double_pendulum.controller.trajectory_following.trajectory_controller.TrajectoryInterpController"]], "double_pendulum.controller.trajectory_following": [[28, "module-double_pendulum.controller.trajectory_following"]], "double_pendulum.controller.trajectory_following.feed_forward": [[28, "module-double_pendulum.controller.trajectory_following.feed_forward"]], "double_pendulum.controller.trajectory_following.trajectory_controller": [[28, "module-double_pendulum.controller.trajectory_following.trajectory_controller"]], "get_control_output_() (double_pendulum.controller.trajectory_following.feed_forward.feedforwardcontroller method)": [[28, "double_pendulum.controller.trajectory_following.feed_forward.FeedForwardController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.trajectory_following.trajectory_controller.trajectorycontroller method)": [[28, "double_pendulum.controller.trajectory_following.trajectory_controller.TrajectoryController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.trajectory_following.trajectory_controller.trajectoryinterpcontroller method)": [[28, "double_pendulum.controller.trajectory_following.trajectory_controller.TrajectoryInterpController.get_control_output_"]], "get_init_trajectory() (double_pendulum.controller.trajectory_following.trajectory_controller.trajectorycontroller method)": [[28, "double_pendulum.controller.trajectory_following.trajectory_controller.TrajectoryController.get_init_trajectory"]], "get_init_trajectory() (double_pendulum.controller.trajectory_following.trajectory_controller.trajectoryinterpcontroller method)": [[28, "double_pendulum.controller.trajectory_following.trajectory_controller.TrajectoryInterpController.get_init_trajectory"]], "save_() (double_pendulum.controller.trajectory_following.feed_forward.feedforwardcontroller method)": [[28, "double_pendulum.controller.trajectory_following.feed_forward.FeedForwardController.save_"]], "save_() (double_pendulum.controller.trajectory_following.trajectory_controller.trajectoryinterpcontroller method)": [[28, "double_pendulum.controller.trajectory_following.trajectory_controller.TrajectoryInterpController.save_"]], "tvlqrcontroller (class in double_pendulum.controller.tvlqr.tvlqr_controller)": [[29, "double_pendulum.controller.tvlqr.tvlqr_controller.TVLQRController"]], "tvlqrcontroller (class in double_pendulum.controller.tvlqr.tvlqr_controller_drake)": [[29, "double_pendulum.controller.tvlqr.tvlqr_controller_drake.TVLQRController"]], "double_pendulum.controller.tvlqr": [[29, "module-double_pendulum.controller.tvlqr"]], "double_pendulum.controller.tvlqr.tvlqr_controller": [[29, "module-double_pendulum.controller.tvlqr.tvlqr_controller"]], "double_pendulum.controller.tvlqr.tvlqr_controller_drake": [[29, "module-double_pendulum.controller.tvlqr.tvlqr_controller_drake"]], "get_control_output_() (double_pendulum.controller.tvlqr.tvlqr_controller.tvlqrcontroller method)": [[29, "double_pendulum.controller.tvlqr.tvlqr_controller.TVLQRController.get_control_output_"]], "get_control_output_() (double_pendulum.controller.tvlqr.tvlqr_controller_drake.tvlqrcontroller method)": [[29, "double_pendulum.controller.tvlqr.tvlqr_controller_drake.TVLQRController.get_control_output_"]], "get_init_trajectory() (double_pendulum.controller.tvlqr.tvlqr_controller.tvlqrcontroller method)": [[29, "double_pendulum.controller.tvlqr.tvlqr_controller.TVLQRController.get_init_trajectory"]], "get_init_trajectory() (double_pendulum.controller.tvlqr.tvlqr_controller_drake.tvlqrcontroller method)": [[29, "double_pendulum.controller.tvlqr.tvlqr_controller_drake.TVLQRController.get_init_trajectory"]], "init_() (double_pendulum.controller.tvlqr.tvlqr_controller.tvlqrcontroller method)": [[29, "double_pendulum.controller.tvlqr.tvlqr_controller.TVLQRController.init_"]], "init_() (double_pendulum.controller.tvlqr.tvlqr_controller_drake.tvlqrcontroller method)": [[29, "double_pendulum.controller.tvlqr.tvlqr_controller_drake.TVLQRController.init_"]], "save_() (double_pendulum.controller.tvlqr.tvlqr_controller.tvlqrcontroller method)": [[29, "double_pendulum.controller.tvlqr.tvlqr_controller.TVLQRController.save_"]], "save_() (double_pendulum.controller.tvlqr.tvlqr_controller_drake.tvlqrcontroller method)": [[29, "double_pendulum.controller.tvlqr.tvlqr_controller_drake.TVLQRController.save_"]], "set_cost_parameters() (double_pendulum.controller.tvlqr.tvlqr_controller.tvlqrcontroller method)": [[29, "double_pendulum.controller.tvlqr.tvlqr_controller.TVLQRController.set_cost_parameters"]], "set_cost_parameters() (double_pendulum.controller.tvlqr.tvlqr_controller_drake.tvlqrcontroller method)": [[29, "double_pendulum.controller.tvlqr.tvlqr_controller_drake.TVLQRController.set_cost_parameters"]], "set_goal() (double_pendulum.controller.tvlqr.tvlqr_controller.tvlqrcontroller method)": [[29, "double_pendulum.controller.tvlqr.tvlqr_controller.TVLQRController.set_goal"]], "double_pendulum.experiments": [[30, "module-double_pendulum.experiments"]], "double_pendulum.experiments.experimental_utils": [[30, "module-double_pendulum.experiments.experimental_utils"]], "double_pendulum.experiments.hardware_control_loop_tmotors": [[30, "module-double_pendulum.experiments.hardware_control_loop_tmotors"]], "double_pendulum.experiments.performance_profiler": [[30, "module-double_pendulum.experiments.performance_profiler"]], "motor_send_n_commands() (in module double_pendulum.experiments.performance_profiler)": [[30, "double_pendulum.experiments.performance_profiler.motor_send_n_commands"]], "motor_send_n_commands2() (in module double_pendulum.experiments.performance_profiler)": [[30, "double_pendulum.experiments.performance_profiler.motor_send_n_commands2"]], "motor_speed_test() (in module double_pendulum.experiments.performance_profiler)": [[30, "double_pendulum.experiments.performance_profiler.motor_speed_test"]], "motor_speed_test2() (in module double_pendulum.experiments.performance_profiler)": [[30, "double_pendulum.experiments.performance_profiler.motor_speed_test2"]], "profiler() (in module double_pendulum.experiments.performance_profiler)": [[30, "double_pendulum.experiments.performance_profiler.profiler"]], "rad2rev() (in module double_pendulum.experiments.experimental_utils)": [[30, "double_pendulum.experiments.experimental_utils.rad2rev"]], "rev2rad() (in module double_pendulum.experiments.experimental_utils)": [[30, "double_pendulum.experiments.experimental_utils.rev2rad"]], "run_experiment() (in module double_pendulum.experiments.hardware_control_loop_tmotors)": [[30, "double_pendulum.experiments.hardware_control_loop_tmotors.run_experiment"]], "save_data() (in module double_pendulum.experiments.experimental_utils)": [[30, "double_pendulum.experiments.experimental_utils.save_data"]], "setzeroposition() (in module double_pendulum.experiments.experimental_utils)": [[30, "double_pendulum.experiments.experimental_utils.setZeroPosition"]], "doublependulumplant (class in double_pendulum.model.plant)": [[31, "double_pendulum.model.plant.DoublePendulumPlant"]], "i1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.I1"]], "i2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.I2"]], "ir_sym (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.Ir_sym"]], "symbolicdoublependulum (class in double_pendulum.model.symbolic_plant)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum"]], "angular_momentum_base() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.angular_momentum_base"]], "angular_momentum_ddot_base() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.angular_momentum_ddot_base"]], "angular_momentum_dot_base() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.angular_momentum_dot_base"]], "b1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.b1"]], "b2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.b2"]], "base (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.base"]], "center_of_mass() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.center_of_mass"]], "cf1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.cf1"]], "cf2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.cf2"]], "com_dot() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.com_dot"]], "coriolis_matrix() (double_pendulum.model.plant.doublependulumplant method)": [[31, "double_pendulum.model.plant.DoublePendulumPlant.coriolis_matrix"]], "coriolis_matrix() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.coriolis_matrix"]], "coulomb_vector() (double_pendulum.model.plant.doublependulumplant method)": [[31, "double_pendulum.model.plant.DoublePendulumPlant.coulomb_vector"]], "coulomb_vector() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.coulomb_vector"]], "diff_to_matrix() (in module double_pendulum.model.symbolic_plant)": [[31, "double_pendulum.model.symbolic_plant.diff_to_matrix"]], "dof (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.dof"]], "double_pendulum.model": [[31, "module-double_pendulum.model"]], "double_pendulum.model.friction_matrix": [[31, "module-double_pendulum.model.friction_matrix"]], "double_pendulum.model.model_parameters": [[31, "module-double_pendulum.model.model_parameters"]], "double_pendulum.model.plant": [[31, "module-double_pendulum.model.plant"]], "double_pendulum.model.symbolic_plant": [[31, "module-double_pendulum.model.symbolic_plant"]], "equation_of_motion() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.equation_of_motion"]], "forward_dynamics() (double_pendulum.model.plant.doublependulumplant method)": [[31, "double_pendulum.model.plant.DoublePendulumPlant.forward_dynamics"]], "forward_dynamics() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.forward_dynamics"]], "forward_kinematics() (double_pendulum.model.plant.doublependulumplant method)": [[31, "double_pendulum.model.plant.DoublePendulumPlant.forward_kinematics"]], "forward_kinematics() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.forward_kinematics"]], "g_sym (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.g_sym"]], "get_alin() (double_pendulum.model.plant.doublependulumplant method)": [[31, "double_pendulum.model.plant.DoublePendulumPlant.get_Alin"]], "get_blin() (double_pendulum.model.plant.doublependulumplant method)": [[31, "double_pendulum.model.plant.DoublePendulumPlant.get_Blin"]], "get_cx() (double_pendulum.model.plant.doublependulumplant method)": [[31, "double_pendulum.model.plant.DoublePendulumPlant.get_Cx"]], "get_fx() (double_pendulum.model.plant.doublependulumplant method)": [[31, "double_pendulum.model.plant.DoublePendulumPlant.get_Fx"]], "get_gx() (double_pendulum.model.plant.doublependulumplant method)": [[31, "double_pendulum.model.plant.DoublePendulumPlant.get_Gx"]], "get_minvx() (double_pendulum.model.plant.doublependulumplant method)": [[31, "double_pendulum.model.plant.DoublePendulumPlant.get_Minvx"]], "get_mx() (double_pendulum.model.plant.doublependulumplant method)": [[31, "double_pendulum.model.plant.DoublePendulumPlant.get_Mx"]], "get_dict() (double_pendulum.model.model_parameters.model_parameters method)": [[31, "double_pendulum.model.model_parameters.model_parameters.get_dict"]], "gr_sym (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.gr_sym"]], "gravity_vector() (double_pendulum.model.plant.doublependulumplant method)": [[31, "double_pendulum.model.plant.DoublePendulumPlant.gravity_vector"]], "gravity_vector() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.gravity_vector"]], "inverse_dynamics() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.inverse_dynamics"]], "kinetic_energy() (double_pendulum.model.plant.doublependulumplant method)": [[31, "double_pendulum.model.plant.DoublePendulumPlant.kinetic_energy"]], "kinetic_energy() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.kinetic_energy"]], "l1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.l1"]], "l2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.l2"]], "lambdify_matrices() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.lambdify_matrices"]], "linear_matrices() (double_pendulum.model.plant.doublependulumplant method)": [[31, "double_pendulum.model.plant.DoublePendulumPlant.linear_matrices"]], "linear_matrices() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.linear_matrices"]], "linear_matrices_discrete() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.linear_matrices_discrete"]], "load_dict() (double_pendulum.model.model_parameters.model_parameters method)": [[31, "double_pendulum.model.model_parameters.model_parameters.load_dict"]], "load_model() (double_pendulum.model.model_parameters.model_parameters method)": [[31, "double_pendulum.model.model_parameters.model_parameters.load_model"]], "load_yaml() (double_pendulum.model.model_parameters.model_parameters method)": [[31, "double_pendulum.model.model_parameters.model_parameters.load_yaml"]], "m1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.m1"]], "m2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.m2"]], "mass_matrix() (double_pendulum.model.plant.doublependulumplant method)": [[31, "double_pendulum.model.plant.DoublePendulumPlant.mass_matrix"]], "mass_matrix() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.mass_matrix"]], "model_parameters (class in double_pendulum.model.model_parameters)": [[31, "double_pendulum.model.model_parameters.model_parameters"]], "n_actuators (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.n_actuators"]], "n_links (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.n_links"]], "potential_energy() (double_pendulum.model.plant.doublependulumplant method)": [[31, "double_pendulum.model.plant.DoublePendulumPlant.potential_energy"]], "potential_energy() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.potential_energy"]], "q (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.q"]], "q01 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.q01"]], "q02 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.q02"]], "q0d1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.q0d1"]], "q0d2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.q0d2"]], "q1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.q1"]], "q2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.q2"]], "qd (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.qd"]], "qd1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.qd1"]], "qd2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.qd2"]], "qdd (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.qdd"]], "qdd1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.qdd1"]], "qdd2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.qdd2"]], "r1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.r1"]], "r2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.r2"]], "replace_parameters() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.replace_parameters"]], "rhs() (double_pendulum.model.plant.doublependulumplant method)": [[31, "double_pendulum.model.plant.DoublePendulumPlant.rhs"]], "rhs() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.rhs"]], "save_dict() (double_pendulum.model.model_parameters.model_parameters method)": [[31, "double_pendulum.model.model_parameters.model_parameters.save_dict"]], "set_cfric() (double_pendulum.model.model_parameters.model_parameters method)": [[31, "double_pendulum.model.model_parameters.model_parameters.set_cfric"]], "set_com() (double_pendulum.model.model_parameters.model_parameters method)": [[31, "double_pendulum.model.model_parameters.model_parameters.set_com"]], "set_damping() (double_pendulum.model.model_parameters.model_parameters method)": [[31, "double_pendulum.model.model_parameters.model_parameters.set_damping"]], "set_dof() (double_pendulum.model.model_parameters.model_parameters method)": [[31, "double_pendulum.model.model_parameters.model_parameters.set_dof"]], "set_gear_ratio() (double_pendulum.model.model_parameters.model_parameters method)": [[31, "double_pendulum.model.model_parameters.model_parameters.set_gear_ratio"]], "set_gravity() (double_pendulum.model.model_parameters.model_parameters method)": [[31, "double_pendulum.model.model_parameters.model_parameters.set_gravity"]], "set_inertia() (double_pendulum.model.model_parameters.model_parameters method)": [[31, "double_pendulum.model.model_parameters.model_parameters.set_inertia"]], "set_length() (double_pendulum.model.model_parameters.model_parameters method)": [[31, "double_pendulum.model.model_parameters.model_parameters.set_length"]], "set_mass() (double_pendulum.model.model_parameters.model_parameters method)": [[31, "double_pendulum.model.model_parameters.model_parameters.set_mass"]], "set_motor_inertia() (double_pendulum.model.model_parameters.model_parameters method)": [[31, "double_pendulum.model.model_parameters.model_parameters.set_motor_inertia"]], "set_torque_limit() (double_pendulum.model.model_parameters.model_parameters method)": [[31, "double_pendulum.model.model_parameters.model_parameters.set_torque_limit"]], "sub_symbols() (in module double_pendulum.model.symbolic_plant)": [[31, "double_pendulum.model.symbolic_plant.sub_symbols"]], "symbolic_coriolis_matrix() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.symbolic_coriolis_matrix"]], "symbolic_coulomb_vector() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.symbolic_coulomb_vector"]], "symbolic_gravity_vector() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.symbolic_gravity_vector"]], "symbolic_kinetic_energy() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.symbolic_kinetic_energy"]], "symbolic_linear_matrices() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.symbolic_linear_matrices"]], "symbolic_mass_matrix() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.symbolic_mass_matrix"]], "symbolic_potential_energy() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.symbolic_potential_energy"]], "symbolic_total_energy() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.symbolic_total_energy"]], "tl1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.tl1"]], "tl2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.tl2"]], "total_energy() (double_pendulum.model.plant.doublependulumplant method)": [[31, "double_pendulum.model.plant.DoublePendulumPlant.total_energy"]], "total_energy() (double_pendulum.model.symbolic_plant.symbolicdoublependulum method)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.total_energy"]], "u (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.u"]], "u0 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.u0"]], "u01 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.u01"]], "u02 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.u02"]], "u1 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.u1"]], "u2 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.u2"]], "vector_mult() (in module double_pendulum.model.symbolic_plant)": [[31, "double_pendulum.model.symbolic_plant.vector_mult"]], "x (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.x"]], "x0 (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.x0"]], "xd (double_pendulum.model.symbolic_plant.symbolicdoublependulum attribute)": [[31, "double_pendulum.model.symbolic_plant.SymbolicDoublePendulum.xd"]], "yb_friction_matrix() (in module double_pendulum.model.friction_matrix)": [[31, "double_pendulum.model.friction_matrix.yb_friction_matrix"]], "simulator (class in double_pendulum.simulation.simulation)": [[32, "double_pendulum.simulation.simulation.Simulator"]], "controller_step() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.controller_step"]], "double_pendulum.simulation": [[32, "module-double_pendulum.simulation"]], "double_pendulum.simulation.simulation": [[32, "module-double_pendulum.simulation.simulation"]], "double_pendulum.simulation.visualization": [[32, "module-double_pendulum.simulation.visualization"]], "euler_integrator() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.euler_integrator"]], "filter_measurement() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.filter_measurement"]], "get_arrow() (in module double_pendulum.simulation.visualization)": [[32, "double_pendulum.simulation.visualization.get_arrow"]], "get_control_u() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.get_control_u"]], "get_measurement() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.get_measurement"]], "get_real_applied_u() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.get_real_applied_u"]], "get_state() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.get_state"]], "get_trajectory_data() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.get_trajectory_data"]], "init_filter() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.init_filter"]], "record_data() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.record_data"]], "reset() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.reset"]], "reset_data_recorder() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.reset_data_recorder"]], "runge_integrator() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.runge_integrator"]], "set_arrow_properties() (in module double_pendulum.simulation.visualization)": [[32, "double_pendulum.simulation.visualization.set_arrow_properties"]], "set_disturbances() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.set_disturbances"]], "set_filter_parameters() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.set_filter_parameters"]], "set_measurement_parameters() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.set_measurement_parameters"]], "set_motor_parameters() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.set_motor_parameters"]], "set_process_noise() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.set_process_noise"]], "set_state() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.set_state"]], "simulate() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.simulate"]], "simulate_and_animate() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.simulate_and_animate"]], "step() (double_pendulum.simulation.simulation.simulator method)": [[32, "double_pendulum.simulation.simulation.Simulator.step"]], "build_identification_function() (in module double_pendulum.system_identification.dynamics)": [[33, "double_pendulum.system_identification.dynamics.build_identification_function"]], "build_identification_matrices() (in module double_pendulum.system_identification.dynamics)": [[33, "double_pendulum.system_identification.dynamics.build_identification_matrices"]], "double_pendulum.system_identification": [[33, "module-double_pendulum.system_identification"]], "double_pendulum.system_identification.data_prep": [[33, "module-double_pendulum.system_identification.data_prep"]], "double_pendulum.system_identification.dynamics": [[33, "module-double_pendulum.system_identification.dynamics"]], "double_pendulum.system_identification.loss": [[33, "module-double_pendulum.system_identification.loss"]], "double_pendulum.system_identification.plotting": [[33, "module-double_pendulum.system_identification.plotting"]], "double_pendulum.system_identification.sys_id": [[33, "module-double_pendulum.system_identification.sys_id"]], "dynamics_func() (in module double_pendulum.system_identification.dynamics)": [[33, "double_pendulum.system_identification.dynamics.dynamics_func"]], "errfunc (class in double_pendulum.system_identification.loss)": [[33, "double_pendulum.system_identification.loss.errfunc"]], "errfunc_nl (class in double_pendulum.system_identification.loss)": [[33, "double_pendulum.system_identification.loss.errfunc_nl"]], "plot_torques() (in module double_pendulum.system_identification.plotting)": [[33, "double_pendulum.system_identification.plotting.plot_torques"]], "rescale_pars() (double_pendulum.system_identification.loss.errfunc method)": [[33, "double_pendulum.system_identification.loss.errfunc.rescale_pars"]], "rescale_pars() (double_pendulum.system_identification.loss.errfunc_nl method)": [[33, "double_pendulum.system_identification.loss.errfunc_nl.rescale_pars"]], "run_system_identification() (in module double_pendulum.system_identification.sys_id)": [[33, "double_pendulum.system_identification.sys_id.run_system_identification"]], "run_system_identification_nl() (in module double_pendulum.system_identification.sys_id)": [[33, "double_pendulum.system_identification.sys_id.run_system_identification_nl"]], "smooth_data() (in module double_pendulum.system_identification.data_prep)": [[33, "double_pendulum.system_identification.data_prep.smooth_data"]], "unscale_pars() (double_pendulum.system_identification.loss.errfunc method)": [[33, "double_pendulum.system_identification.loss.errfunc.unscale_pars"]], "unscale_pars() (double_pendulum.system_identification.loss.errfunc_nl method)": [[33, "double_pendulum.system_identification.loss.errfunc_nl.unscale_pars"]], "yb_matrix_sym (class in double_pendulum.system_identification.dynamics)": [[33, "double_pendulum.system_identification.dynamics.yb_matrix_sym"]], "double_pendulum.trajectory_optimization": [[34, "module-double_pendulum.trajectory_optimization"]], "animate_trajectory() (double_pendulum.trajectory_optimization.direct_collocation.direct_collocation.dircol_calculator method)": [[35, "double_pendulum.trajectory_optimization.direct_collocation.direct_collocation.dircol_calculator.animate_trajectory"]], "animation() (in module double_pendulum.trajectory_optimization.direct_collocation.dircol_utils)": [[35, "double_pendulum.trajectory_optimization.direct_collocation.dircol_utils.animation"]], "compute_trajectory() (double_pendulum.trajectory_optimization.direct_collocation.direct_collocation.dircol_calculator method)": [[35, "double_pendulum.trajectory_optimization.direct_collocation.direct_collocation.dircol_calculator.compute_trajectory"]], "construct_trajectories() (in module double_pendulum.trajectory_optimization.direct_collocation.dircol_utils)": [[35, "double_pendulum.trajectory_optimization.direct_collocation.dircol_utils.construct_trajectories"]], "create_plant_from_urdf() (in module double_pendulum.trajectory_optimization.direct_collocation.dircol_utils)": [[35, "double_pendulum.trajectory_optimization.direct_collocation.dircol_utils.create_plant_from_urdf"]], "dircol_calculator (class in double_pendulum.trajectory_optimization.direct_collocation.direct_collocation)": [[35, "double_pendulum.trajectory_optimization.direct_collocation.direct_collocation.dircol_calculator"]], "double_pendulum.trajectory_optimization.direct_collocation": [[35, "module-double_pendulum.trajectory_optimization.direct_collocation"]], "double_pendulum.trajectory_optimization.direct_collocation.dircol_utils": [[35, "module-double_pendulum.trajectory_optimization.direct_collocation.dircol_utils"]], "double_pendulum.trajectory_optimization.direct_collocation.direct_collocation": [[35, "module-double_pendulum.trajectory_optimization.direct_collocation.direct_collocation"]], "extract_data_from_polynomial() (in module double_pendulum.trajectory_optimization.direct_collocation.dircol_utils)": [[35, "double_pendulum.trajectory_optimization.direct_collocation.dircol_utils.extract_data_from_polynomial"]], "get_trajectory() (double_pendulum.trajectory_optimization.direct_collocation.direct_collocation.dircol_calculator method)": [[35, "double_pendulum.trajectory_optimization.direct_collocation.direct_collocation.dircol_calculator.get_trajectory"]], "compute_trajectory() (double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator method)": [[36, "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator.compute_trajectory"]], "double_pendulum.trajectory_optimization.ilqr": [[36, "module-double_pendulum.trajectory_optimization.ilqr"]], "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp": [[36, "module-double_pendulum.trajectory_optimization.ilqr.ilqr_cpp"]], "double_pendulum.trajectory_optimization.ilqr.paropt": [[36, "module-double_pendulum.trajectory_optimization.ilqr.paropt"]], "ilqr_calculator (class in double_pendulum.trajectory_optimization.ilqr.ilqr_cpp)": [[36, "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator"]], "ilqr_trajopt_loss (class in double_pendulum.trajectory_optimization.ilqr.paropt)": [[36, "double_pendulum.trajectory_optimization.ilqr.paropt.ilqr_trajopt_loss"]], "rescale_pars() (double_pendulum.trajectory_optimization.ilqr.paropt.ilqr_trajopt_loss method)": [[36, "double_pendulum.trajectory_optimization.ilqr.paropt.ilqr_trajopt_loss.rescale_pars"]], "save_trajectory_csv() (double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator method)": [[36, "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator.save_trajectory_csv"]], "set_cost_parameters() (double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator method)": [[36, "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator.set_cost_parameters"]], "set_cost_parameters_() (double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator method)": [[36, "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator.set_cost_parameters_"]], "set_goal() (double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator method)": [[36, "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator.set_goal"]], "set_model_parameters() (double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator method)": [[36, "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator.set_model_parameters"]], "set_model_parameters() (double_pendulum.trajectory_optimization.ilqr.paropt.ilqr_trajopt_loss method)": [[36, "double_pendulum.trajectory_optimization.ilqr.paropt.ilqr_trajopt_loss.set_model_parameters"]], "set_parameters() (double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator method)": [[36, "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator.set_parameters"]], "set_parameters() (double_pendulum.trajectory_optimization.ilqr.paropt.ilqr_trajopt_loss method)": [[36, "double_pendulum.trajectory_optimization.ilqr.paropt.ilqr_trajopt_loss.set_parameters"]], "set_start() (double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator method)": [[36, "double_pendulum.trajectory_optimization.ilqr.ilqr_cpp.ilqr_calculator.set_start"]], "unscale_pars() (double_pendulum.trajectory_optimization.ilqr.paropt.ilqr_trajopt_loss method)": [[36, "double_pendulum.trajectory_optimization.ilqr.paropt.ilqr_trajopt_loss.unscale_pars"]], "fitpiecewisepolynomial (class in double_pendulum.utils.pcw_polynomial)": [[37, "double_pendulum.utils.pcw_polynomial.FitPiecewisePolynomial"]], "interpolatematrix (class in double_pendulum.utils.pcw_polynomial)": [[37, "double_pendulum.utils.pcw_polynomial.InterpolateMatrix"]], "interpolatevector (class in double_pendulum.utils.pcw_polynomial)": [[37, "double_pendulum.utils.pcw_polynomial.InterpolateVector"]], "resampletrajectory() (in module double_pendulum.utils.pcw_polynomial)": [[37, "double_pendulum.utils.pcw_polynomial.ResampleTrajectory"]], "cma_optimization() (in module double_pendulum.utils.optimization)": [[37, "double_pendulum.utils.optimization.cma_optimization"]], "concatenate_trajectories() (in module double_pendulum.utils.csv_trajectory)": [[37, "double_pendulum.utils.csv_trajectory.concatenate_trajectories"]], "create_section_poly() (double_pendulum.utils.pcw_polynomial.fitpiecewisepolynomial method)": [[37, "double_pendulum.utils.pcw_polynomial.FitPiecewisePolynomial.create_section_poly"]], "determin_poly() (double_pendulum.utils.pcw_polynomial.fitpiecewisepolynomial method)": [[37, "double_pendulum.utils.pcw_polynomial.FitPiecewisePolynomial.determin_poly"]], "double_pendulum.utils": [[37, "module-double_pendulum.utils"]], "double_pendulum.utils.cmaes_controller_par_optimizer": [[37, "module-double_pendulum.utils.cmaes_controller_par_optimizer"]], "double_pendulum.utils.csv_trajectory": [[37, "module-double_pendulum.utils.csv_trajectory"]], "double_pendulum.utils.optimization": [[37, "module-double_pendulum.utils.optimization"]], "double_pendulum.utils.pcw_polynomial": [[37, "module-double_pendulum.utils.pcw_polynomial"]], "double_pendulum.utils.plotting": [[37, "module-double_pendulum.utils.plotting"]], "double_pendulum.utils.urdfs": [[37, "module-double_pendulum.utils.urdfs"]], "double_pendulum.utils.wrap_angles": [[37, "module-double_pendulum.utils.wrap_angles"]], "end_time() (double_pendulum.utils.pcw_polynomial.fitpiecewisepolynomial method)": [[37, "double_pendulum.utils.pcw_polynomial.FitPiecewisePolynomial.end_time"]], "generate_urdf() (in module double_pendulum.utils.urdfs)": [[37, "double_pendulum.utils.urdfs.generate_urdf"]], "get_value() (double_pendulum.utils.pcw_polynomial.fitpiecewisepolynomial method)": [[37, "double_pendulum.utils.pcw_polynomial.FitPiecewisePolynomial.get_value"]], "get_value() (double_pendulum.utils.pcw_polynomial.interpolatematrix method)": [[37, "double_pendulum.utils.pcw_polynomial.InterpolateMatrix.get_value"]], "get_value() (double_pendulum.utils.pcw_polynomial.interpolatevector method)": [[37, "double_pendulum.utils.pcw_polynomial.InterpolateVector.get_value"]], "load_kk_values() (in module double_pendulum.utils.csv_trajectory)": [[37, "double_pendulum.utils.csv_trajectory.load_Kk_values"]], "load_trajectory() (in module double_pendulum.utils.csv_trajectory)": [[37, "double_pendulum.utils.csv_trajectory.load_trajectory"]], "load_trajectory_full() (in module double_pendulum.utils.csv_trajectory)": [[37, "double_pendulum.utils.csv_trajectory.load_trajectory_full"]], "plot_figures() (in module double_pendulum.utils.plotting)": [[37, "double_pendulum.utils.plotting.plot_figures"]], "plot_timeseries() (in module double_pendulum.utils.plotting)": [[37, "double_pendulum.utils.plotting.plot_timeseries"]], "poly1() (in module double_pendulum.utils.pcw_polynomial)": [[37, "double_pendulum.utils.pcw_polynomial.poly1"]], "poly2() (in module double_pendulum.utils.pcw_polynomial)": [[37, "double_pendulum.utils.pcw_polynomial.poly2"]], "poly3() (in module double_pendulum.utils.pcw_polynomial)": [[37, "double_pendulum.utils.pcw_polynomial.poly3"]], "remove_namespaces() (in module double_pendulum.utils.urdfs)": [[37, "double_pendulum.utils.urdfs.remove_namespaces"]], "rescale_pars() (double_pendulum.utils.cmaes_controller_par_optimizer.swingup_loss method)": [[37, "double_pendulum.utils.cmaes_controller_par_optimizer.swingup_loss.rescale_pars"]], "rescale_pars() (double_pendulum.utils.cmaes_controller_par_optimizer.traj_opt_loss method)": [[37, "double_pendulum.utils.cmaes_controller_par_optimizer.traj_opt_loss.rescale_pars"]], "save_trajectory() (in module double_pendulum.utils.csv_trajectory)": [[37, "double_pendulum.utils.csv_trajectory.save_trajectory"]], "scipy_par_optimization() (in module double_pendulum.utils.optimization)": [[37, "double_pendulum.utils.optimization.scipy_par_optimization"]], "solve_least_squares() (in module double_pendulum.utils.optimization)": [[37, "double_pendulum.utils.optimization.solve_least_squares"]], "split_data() (double_pendulum.utils.pcw_polynomial.fitpiecewisepolynomial method)": [[37, "double_pendulum.utils.pcw_polynomial.FitPiecewisePolynomial.split_data"]], "start_time() (double_pendulum.utils.pcw_polynomial.fitpiecewisepolynomial method)": [[37, "double_pendulum.utils.pcw_polynomial.FitPiecewisePolynomial.start_time"]], "swingup_loss (class in double_pendulum.utils.cmaes_controller_par_optimizer)": [[37, "double_pendulum.utils.cmaes_controller_par_optimizer.swingup_loss"]], "traj_opt_loss (class in double_pendulum.utils.cmaes_controller_par_optimizer)": [[37, "double_pendulum.utils.cmaes_controller_par_optimizer.traj_opt_loss"]], "trajectory_properties() (in module double_pendulum.utils.csv_trajectory)": [[37, "double_pendulum.utils.csv_trajectory.trajectory_properties"]], "unscale_pars() (double_pendulum.utils.cmaes_controller_par_optimizer.swingup_loss method)": [[37, "double_pendulum.utils.cmaes_controller_par_optimizer.swingup_loss.unscale_pars"]], "unscale_pars() (double_pendulum.utils.cmaes_controller_par_optimizer.traj_opt_loss method)": [[37, "double_pendulum.utils.cmaes_controller_par_optimizer.traj_opt_loss.unscale_pars"]], "wrap_angles() (in module double_pendulum.utils.wrap_angles)": [[37, "double_pendulum.utils.wrap_angles.wrap_angles"]], "wrap_angles_diff() (in module double_pendulum.utils.wrap_angles)": [[37, "double_pendulum.utils.wrap_angles.wrap_angles_diff"]], "wrap_angles_top() (in module double_pendulum.utils.wrap_angles)": [[37, "double_pendulum.utils.wrap_angles.wrap_angles_top"]], "butterworth_filter() (in module double_pendulum.utils.filters.butterworth)": [[38, "double_pendulum.utils.filters.butterworth.butterworth_filter"]], "data_filter_realtime_1() (in module double_pendulum.utils.filters.running_mean)": [[38, "double_pendulum.utils.filters.running_mean.data_filter_realtime_1"]], "data_filter_realtime_2() (in module double_pendulum.utils.filters.running_mean)": [[38, "double_pendulum.utils.filters.running_mean.data_filter_realtime_2"]], "double_pendulum.utils.filters": [[38, "module-double_pendulum.utils.filters"]], "double_pendulum.utils.filters.butterworth": [[38, "module-double_pendulum.utils.filters.butterworth"]], "double_pendulum.utils.filters.fast_fourier_transform": [[38, "module-double_pendulum.utils.filters.fast_fourier_transform"]], "double_pendulum.utils.filters.identity": [[38, "module-double_pendulum.utils.filters.identity"]], "double_pendulum.utils.filters.kalman_filter": [[38, "module-double_pendulum.utils.filters.kalman_filter"]], "double_pendulum.utils.filters.low_pass": [[38, "module-double_pendulum.utils.filters.low_pass"]], "double_pendulum.utils.filters.running_mean": [[38, "module-double_pendulum.utils.filters.running_mean"]], "double_pendulum.utils.filters.savitzky_golay": [[38, "module-double_pendulum.utils.filters.savitzky_golay"]], "double_pendulum.utils.filters.unscented_kalman_filter": [[38, "module-double_pendulum.utils.filters.unscented_kalman_filter"]], "fast_fourier_transform() (in module double_pendulum.utils.filters.fast_fourier_transform)": [[38, "double_pendulum.utils.filters.fast_fourier_transform.fast_fourier_transform"]], "iden() (in module double_pendulum.utils.filters.unscented_kalman_filter)": [[38, "double_pendulum.utils.filters.unscented_kalman_filter.iden"]], "identity_filter (class in double_pendulum.utils.filters.identity)": [[38, "double_pendulum.utils.filters.identity.identity_filter"]], "kalman_filter() (in module double_pendulum.utils.filters.kalman_filter)": [[38, "double_pendulum.utils.filters.kalman_filter.kalman_filter"]], "kalman_filter_rt (class in double_pendulum.utils.filters.kalman_filter)": [[38, "double_pendulum.utils.filters.kalman_filter.kalman_filter_rt"]], "lowpass_filter() (in module double_pendulum.utils.filters.low_pass)": [[38, "double_pendulum.utils.filters.low_pass.lowpass_filter"]], "lowpass_filter_rt (class in double_pendulum.utils.filters.low_pass)": [[38, "double_pendulum.utils.filters.low_pass.lowpass_filter_rt"]], "main() (in module double_pendulum.utils.filters.kalman_filter)": [[38, "double_pendulum.utils.filters.kalman_filter.main"]], "running_mean_filter() (in module double_pendulum.utils.filters.running_mean)": [[38, "double_pendulum.utils.filters.running_mean.running_mean_filter"]], "savitzky_golay_filter() (in module double_pendulum.utils.filters.savitzky_golay)": [[38, "double_pendulum.utils.filters.savitzky_golay.savitzky_golay_filter"]], "scipy_fft() (in module double_pendulum.utils.filters.fast_fourier_transform)": [[38, "double_pendulum.utils.filters.fast_fourier_transform.scipy_fft"]], "unscented_kalman_filter_rt (class in double_pendulum.utils.filters.unscented_kalman_filter)": [[38, "double_pendulum.utils.filters.unscented_kalman_filter.unscented_kalman_filter_rt"]]}})